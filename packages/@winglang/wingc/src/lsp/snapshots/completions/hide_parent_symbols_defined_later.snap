---
source: libs/wingc/src/lsp/completions.rs
---
- label: this
  kind: 6
  detail: "inflight (): void"
  sortText: bb|this
- label: x
  kind: 6
  detail: num
  sortText: bb|x
- label: assert
  kind: 3
  detail: "(condition: bool, message: str?): void"
  documentation:
    kind: markdown
    value: Asserts that a condition is true
  sortText: cc|assert
  insertText: assert($1)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: log
  kind: 3
  detail: "(value: stringable): void"
  documentation:
    kind: markdown
    value: Logs a value
  sortText: cc|log
  insertText: log($1)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: nodeof
  kind: 3
  detail: "preflight (construct: IConstruct): Node"
  documentation:
    kind: markdown
    value: Obtain the tree node of a preflight resource.
  sortText: cc|nodeof
  insertText: nodeof($1)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: unsafeCast
  kind: 3
  detail: "(value: any): any"
  documentation:
    kind: markdown
    value: Casts a value into a different type. This is unsafe and can cause runtime errors
  sortText: cc|unsafeCast
  insertText: unsafeCast($1)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: Json
  kind: 14
  sortText: kl|zyJson
- label: MutJson
  kind: 14
  sortText: kl|zyMutJson
- label: bool
  kind: 14
  sortText: kl|zybool
- label: datetime
  kind: 14
  sortText: kl|zydatetime
- label: duration
  kind: 14
  sortText: kl|zyduration
- label: num
  kind: 14
  sortText: kl|zynum
- label: regex
  kind: 14
  sortText: kl|zyregex
- label: str
  kind: 14
  sortText: kl|zystr
- label: Array<T>
  kind: 14
  sortText: kl|zzArray
  insertText: Array<$1>
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest
- label: Map<T>
  kind: 14
  sortText: kl|zzMap
  insertText: Map<$1>
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest
- label: MutArray<T>
  kind: 14
  sortText: kl|zzMutArray
  insertText: MutArray<$1>
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest
- label: MutMap<T>
  kind: 14
  sortText: kl|zzMutMap
  insertText: MutMap<$1>
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest
- label: MutSet<T>
  kind: 14
  sortText: kl|zzMutSet
  insertText: MutSet<$1>
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest
- label: Set<T>
  kind: 14
  sortText: kl|zzSet
  insertText: Set<$1>
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest

