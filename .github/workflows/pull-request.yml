name: "PR Build"

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODEJS_VERSION: "18.x"
  # Testing runs out of memory without this
  NODE_OPTIONS: "--max-old-space-size=4096"
  MONADAHQ_REGISTRY: "https://npm.pkg.github.com"
  # TODO Real versioning needed
  PROJEN_BUMP_VERSION: "${{ github.ref == 'refs/heads/main' && '0.1.1-dev.${{ github.run_id }}.${{ github.run_attempt }}' || '0.0.0' }}"

jobs:
  build-wasm:
    name: "Non-Native Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: https://npm.pkg.github.com

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Setup Cargo Cache
        uses: Swatinem/rust-cache@v2

      - name: Install wasi-sdk
        run: scripts/setup_wasi.sh

      - name: Login to Private NPM registry
        run: npm config set @monadahq:registry https://npm.pkg.github.com && npm set //npm.pkg.github.com/:_authToken ${{ secrets.PROJEN_GITHUB_TOKEN }}

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

      - name: Lint Nx
        run: npx nx workspace-lint

      # - name: Derive appropriate SHAs for base and head for `nx affected` commands
      #   uses: nrwl/nx-set-shas@v3

      - name: Build
        uses: MansaGroup/nrwl-nx-action@v2
        with:
          targets: "build"
          projects: "wing,wingsdk,wing-api-checker,wing-playground"
          args: "--configuration=release"

      - name: Test
        uses: MansaGroup/nrwl-nx-action@v2
        with:
          targets: "test"
          projects: "wingsdk,wing-api-checker"
          all: true

      - name: Package Wing CLI
        working-directory: apps/wing
        run: |
          npm version ${{ env.PROJEN_BUMP_VERSION }} --alow-same-version
          npm pack

      - name: Package WingSDK
        working-directory: libs/wingsdk
        run: npm run package-all

      - name: Upload Wing CLI
        uses: actions/upload-artifact@v2
        with:
          name: wing
          path: apps/wing/*.tgz

      - name: Upload WingSDK
        uses: actions/upload-artifact@v2
        with:
          name: wingsdk
          path: libs/wingsdk/dist

  build-native:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: x64
          - os: ubuntu-latest
            arch: x64
          # TODO libnode build currently invalid for the following configs
          # - os: macos-latest
          #   arch: arm64
          # - os: ubuntu-latest
          #   arch: x86
    runs-on: ${{ matrix.os }}
    name: "Native Build"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: https://npm.pkg.github.com

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Setup Cargo Cache
        uses: Swatinem/rust-cache@v2

      - name: Login to Private NPM registry
        run: npm config set @monadahq:registry https://npm.pkg.github.com && npm set //npm.pkg.github.com/:_authToken ${{ secrets.PROJEN_GITHUB_TOKEN }}

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
        with:
          # Don't need to install sub-project dependencies
          install-command: npm install --ignore-scripts

      - name: Lint Nx
        run: npx nx workspace-lint

      - name: Build
        uses: MansaGroup/nrwl-nx-action@v2
        with:
          targets: "build-native"
          projects: "wing-language-server"
          args: "--configuration=release"

      - name: Upload Wing Language Server
        uses: actions/upload-artifact@v2
        with:
          name: wing-language-server-${{ matrix.os }}-${{ matrix.arch }}
          path: target/release/wing-language-server

  build-vscode:
    name: "Build VSCode Extension"
    needs:
      - build-native
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Prepare language server binaries
        run: cp -r wing-language-server-* ./apps/vscode-wing/resources

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: https://npm.pkg.github.com

      - name: Login to Private NPM registry
        run: npm config set @monadahq:registry https://npm.pkg.github.com && npm set //npm.pkg.github.com/:_authToken ${{ secrets.PROJEN_GITHUB_TOKEN }}

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

      - name: Build
        uses: MansaGroup/nrwl-nx-action@v2
        with:
          targets: "build-multi"
          projects: "vscode-wing"
          args: "--configuration=release"

      - name: Upload extension
        uses: actions/upload-artifact@v2
        with:
          name: vscode-wing.vsix
          path: apps/vscode-wing/vscode-wing.vsix

  build:
    name: "Build"
    needs:
      - build-native
      - build-wasm
      - build-vscode
    runs-on: ubuntu-latest
    steps:
      - name: Build Validation
        run: echo "Build Successful"

  publish:
    name: "Publish${{ github.ref == 'refs/heads/main' && '' || ' (Dry Run)' }}"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: https://npm.pkg.github.com

      - name: Publish Wing
        working-directory: wing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: npm publish *.tgz

      - name: Release WingSDK Package
        working-directory: wingsdk
        run: |
          np run publish
          npx -p publib@latest publib-npm
        env:
          NPM_DIST_TAG: latest
          NPM_REGISTRY: npm.pkg.github.com
          NPM_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}