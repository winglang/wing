name: Build

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODEJS_VERSION: "16.x"
  PYTHON_VERSION: "3.10"

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        arch: [x64, x86, arm64]
        exclude:
          - os: macos-latest
            arch: x86
          - os: ubuntu-latest
            arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Infrastructure Binaries
        uses: robinraju/release-downloader@v1.4
        with:
          repository: "monadahq/winglang-infra"
          tag: "development"
          fileName: "libnode-${{ matrix.os }}-${{ matrix.arch }}.zip"
          token: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Private NPM with Github
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: "https://npm.pkg.github.com"
      - name: Environment Information
        run: npx envinfo
      - name: Build Wing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          pushd wingc
            cargo test --release -- --nocapture
            cargo build --release
          popd

          mkdir -p wingrt/vendor/node
          unzip -q libnode-${{ matrix.os }}-${{ matrix.arch }}.zip -d wingrt/vendor/node
          pushd wingrt
            npm install
            npm test
            pushd build
              cp wingrt ../../wing/bin
              tar -zcf ../../wing-${{ matrix.os }}-${{ matrix.arch }}.tgz wingrt
            popd
          popd

          pushd wing
            npm install --no-scripts
            node scripts/dist-package-json.js ${{ matrix.os }} ${{ matrix.arch }}
          popd

      - name: Publish Wing
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          pushd wing
            npm publish
          popd

      - name: Upload Artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: wing-${{ matrix.os }}-${{ matrix.arch }}.tgz
          path: wing-${{ matrix.os }}-${{ matrix.arch }}.tgz

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Compute Checksums
        run: |
          mkdir dist
          mv ./*/*.tgz ./dist
          cd dist
          echo '## SHA-1 Checksums' > ../checksums.md
          echo '```' >> ../checksums.md
          sha1sum --binary *.tgz >> ../checksums.md
          echo '```' >> ../checksums.md
      - name: Cut Development Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: development
          body_path: checksums.md
          prerelease: true
          files: dist/*.tgz

  wrapper:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Private NPM with Github
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: "https://npm.pkg.github.com"
      - name: Release Toolkit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          cd wing
          node scripts/self-package-json.js
          npm publish
