name: Build

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODEJS_VERSION: "18.x"
  # TODO Real versioning needed
  WING_VERSION: "0.1.1-dev.${{ github.run_id }}.${{ github.run_attempt }}"

permissions:
  contents: write

jobs:
  build-wing-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Private NPM with Github
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: "https://npm.pkg.github.com"

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install wasi-sdk
        run: scripts/setup_wasi.sh

      - name: Install cargo-wasi
        run: cargo install cargo-wasi

      - name: Build WingC
        working-directory: libs/wingc
        run: |
          cargo wasi build --bin wingc --release
          mv ../../target/wasm32-wasi/release/wingc.wasm ../../apps/wing/wasm/wingc.wasm

      - name: Publish Wing
        if: ${{ github.ref == 'refs/heads/main' }}
        working-directory: apps/wing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          npm ci
          npm version ${{ env.WING_VERSION }}
          npm publish

  build-native:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: x64
          - os: ubuntu-latest
            arch: x64
          # TODO libnode build currently invalid for the following configs
          # - os: macos-latest
          #   arch: arm64
          # - os: ubuntu-latest
          #   arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Private NPM with Github
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: "https://npm.pkg.github.com"

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build WingII Crate
        working-directory: libs/wingii
        run: |
          cargo test --release -- --nocapture
          cargo build --release

      - name: Build WingC Library
        working-directory: libs/wingc
        run: |
          cargo test --release -- --nocapture
          cargo build --lib --release

      - name: Build Wing Language Server
        working-directory: apps/wing-language-server
        run: |
          cargo build --release
          mv ../../target/release/wing-language-server ../../target/release/wing-language-server-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload Wing Language Server
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: wing-language-server-${{ matrix.os }}-${{ matrix.arch }}
          path: target/release/wing-language-server-${{ matrix.os }}-${{ matrix.arch }}

  build-vscode:
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download language server binaries
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/download-artifact@v2
      - name: Prepare language server binaries
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |          
          cp -r wing-language-server-* ./apps/vscode-wing/resources
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: apps/vscode-wing
      - name: Build
        working-directory: apps/vscode-wing
        run: |
          npm run projen
          npm run compile
          npm run test
          npm version ${{ env.WING_VERSION }}
      - name: Create VSIX
        working-directory: apps/vscode-wing
        run: npm run package
      - name: Upload extension
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: vscode-wing.vsix
          path: apps/vscode-wing/vscode-wing.vsix

  build-sdk:
    uses: ./.github/workflows/build-sdk.yml
    secrets: inherit

  # Purposely Empty to be a required check for all matrix entries from build-native
  build:
    needs:
      - build-wing-cli
      - build-native
      - build-vscode
      - build-sdk
    runs-on: ubuntu-latest
    steps:
      - name: Build Validation
        run: echo "Build Successful"

  wingsdk-publish:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Publish to npm
    needs: build-sdk
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: wingsdk-build-artifact
          path: dist
      - name: Prepare Repository
        run: mv dist .repo && npm config set @monadahq:registry https://npm.pkg.github.com && npm set //npm.pkg.github.com/:_authToken $PROJEN_GITHUB_TOKEN
        env:
          PROJEN_GITHUB_TOKEN: ${{ secrets.PROJEN_GITHUB_TOKEN }}
      - name: Set Version
        working-directory: .repo
        run: npm version ${{ env.WING_VERSION }}
      - name: Install Dependencies
        run: cd .repo && npm ci
      - name: Create js artifact
        run: cd .repo && npx projen package:js
      - name: Collect js Artifact
        run: mv .repo/dist dist
      - name: Release
        run: npx -p publib@latest publib-npm
        env:
          NPM_DIST_TAG: latest
          NPM_REGISTRY: npm.pkg.github.com
          NPM_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - build
      - wingsdk-publish
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Compute Checksums
        run: |
          mkdir dist
          mv ./*/*.vsix ./dist
          cd dist
          echo '## SHA-1 Checksums' > ../checksums.md
          echo '```' >> ../checksums.md
          sha1sum --binary * >> ../checksums.md
          echo '```' >> ../checksums.md

      - name: Cut Development Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: development
          body_path: checksums.md
          prerelease: true
          files: dist/*

