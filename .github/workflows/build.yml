name: Build

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODEJS_VERSION: "16.x"
  PYTHON_VERSION: "3.10"

permissions:
  contents: write

jobs:
  build-vscode:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: wing-analyzer/vscode-extension
      - name: Bundle
        working-directory: wing-analyzer/vscode-extension
        run: npm run bundle
      - name: Package
        working-directory: wing-analyzer/vscode-extension
        run: npm run package
      - name: Upload extension
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: vscode-wing.vsix
          path: wing-analyzer/vscode-extension/wing.vsix
  build-native:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: x64
          - os: ubuntu-latest
            arch: x64
          # TODO libnode build currently invalid for the following configs
          # - os: macos-latest
          #   arch: arm64
          # - os: ubuntu-latest
          #   arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Infrastructure Binaries
        uses: robinraju/release-downloader@v1.4
        with:
          repository: "monadahq/winglang-infra"
          tag: "development"
          fileName: "libnode-${{ matrix.os }}-${{ matrix.arch }}.zip"
          token: ${{ secrets.WINGLANG_GITHUB_TOKEN }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Private NPM with Github
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: "https://npm.pkg.github.com"

      - name: Build WingC Library
        working-directory: wingc
        run: |
          cargo test --release -- --nocapture
          cargo build --release

      - name: Build Wing Runtime
        working-directory: wingrt
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          mkdir -p vendor/node
          unzip -q ../libnode-${{ matrix.os }}-${{ matrix.arch }}.zip -d vendor/node
          npm ci
          npm test
          cp build/wingrt ../wing/bin
          tar -zcf ../wing-${{ matrix.os }}-${{ matrix.arch }}.tgz build/wingrt

      - name: Build Wing CLI
        working-directory: wing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          npm ci --ignore-scripts
          node scripts/dist-package-json.js ${{ matrix.os }} ${{ matrix.arch }}

      - name: Publish Wing
        if: ${{ github.ref == 'refs/heads/main' }}
        working-directory: wing
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: npm publish


      - name: Upload Artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: wing-${{ matrix.os }}-${{ matrix.arch }}.tgz
          path: wing-${{ matrix.os }}-${{ matrix.arch }}.tgz

  # Purposely Empty to be a required check for all matrix entries from build-native
  build:
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - name: Build Validation
        run: echo "Build Successful"

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-native
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Compute Checksums
        run: |
          mkdir dist
          mv ./*/*.tgz ./dist
          mv ./*/*.vsix ./dist
          cd dist
          echo '## SHA-1 Checksums' > ../checksums.md
          echo '```' >> ../checksums.md
          sha1sum --binary *.tgz >> ../checksums.md
          sha1sum --binary *.vsix >> ../checksums.md
          echo '```' >> ../checksums.md

      - name: Cut Development Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: development
          body_path: checksums.md
          prerelease: true
          files: |
            dist/*.tgz
            dist/*.vsix

  wrapper:
    needs:
      - build-vscode
      - build-native
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Private NPM with Github
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          registry-url: "https://npm.pkg.github.com"

      - name: Release Toolkit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WINGLANG_GITHUB_TOKEN }}
        run: |
          cd wing
          node scripts/self-package-json.js
          npm publish
