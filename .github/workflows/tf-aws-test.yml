name: SDK Spec AWS Tests
on:
  workflow_call: {}
  workflow_dispatch: {}

env:
  AWS_REGION: "us-east-1"
  NODE_VERSION: "18.16.0"
  # this variable indicates wheater to use wing cli from a local version (using the current repo code)
  # or use the latest remote npm version
  LOCAL_BUILD: ${{ github.workflow == 'build'}}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Get list of directories and save them to the output
        id: setdirs
        shell: bash
        run: |
          dirs=$(ls -d examples/tests/sdk_tests/*/ | sed 's/\/$//' | grep -v "external" | jq -R -s -c 'split("\n")[:-1]')
          processed_dirs=$(echo "{ \"directory\": $dirs }" | jq -c '[ .directory[] | {directory: ., name: (split("/") | last)}]')
          wrapped_dirs=$(echo "{ \"test\": $processed_dirs }" | jq -c .)
          echo "dirs=$wrapped_dirs" >> $GITHUB_OUTPUT
    outputs:
      tests: ${{ steps.setdirs.outputs.dirs }}

  test-tf-aws:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.tests) }}
    name: ${{ matrix.test.name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      ##################### install a local wing version #########################
      - name: Download Dist Artifacts
        if: ${{ env.LOCAL_BUILD ==  'true' }}
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install Wing from Dist
        if: ${{ env.LOCAL_BUILD ==  'true' }}
        run: |
          mkdir localwing
          cd localwing
          npm init --yes
          npm install ../dist/*-[0-9]*.[0-9]*.[0-9]*.tgz
          ./node_modules/.bin/wing --version

      #################### install a remote wing version ########################
      - name: Install winglang globally
        if: ${{ env.LOCAL_BUILD == 'false' }}
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 5
          command: npm install -g winglang
      ########################################################################
      - name: Installing external js modules
        run: |
          cd examples/tests/sdk_tests
          npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Execute wing test in matrix directory
        uses: nick-fields/retry@v2
        env:
          TF_LOG: info
          TF_LOG_PATH: ${{ runner.workspace }}/terraform.log
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 30
          command: |
            if  ${{ env.LOCAL_BUILD == 'false' }}
            then
              wing test -t tf-aws ${{ matrix.test.directory }}/*.w
            else
              ./localwing/node_modules/.bin/wing test -t tf-aws ${{ matrix.test.directory }}/*.w
            fi

      - name: Output Terraform log
        if: failure()
        run: cat ${{ runner.workspace }}/terraform.log
