// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`wing compile -t tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_teststring_IamRole_A23B11BC": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/IamRole",
            "uniqueId": "root_teststring_IamRole_A23B11BC",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_teststring_IamRolePolicy_E68C254E": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/IamRolePolicy",
            "uniqueId": "root_teststring_IamRolePolicy_E68C254E",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_teststring_IamRole_A23B11BC.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_teststring_IamRolePolicyAttachment_CF9D26FE": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/IamRolePolicyAttachment",
            "uniqueId": "root_teststring_IamRolePolicyAttachment_CF9D26FE",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_teststring_IamRole_A23B11BC.name}",
      },
    },
    "aws_lambda_function": {
      "root_teststring_0FD8A9C3": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/Default",
            "uniqueId": "root_teststring_0FD8A9C3",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-string-c8b12930",
          },
        },
        "function_name": "test-string-c8b12930",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_teststring_IamRole_A23B11BC.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_teststring_Code_042172E8.bucket}",
        "s3_key": "\${aws_s3_object.root_teststring_S3Object_9049C921.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_teststring_Code_042172E8": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/Code",
            "uniqueId": "root_teststring_Code_042172E8",
          },
        },
        "bucket_prefix": "code-c8c4d274-",
      },
    },
    "aws_s3_object": {
      "root_teststring_S3Object_9049C921": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/S3Object",
            "uniqueId": "root_teststring_S3Object_9049C921",
          },
        },
        "bucket": "\${aws_s3_bucket.root_teststring_Code_042172E8.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile -t tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"std_string\\", plugins: $plugins });
  
  const s1 = \\"some string\\";
  const s2 = \\"s are immutable\\";
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s1.length === 11)'\`)})((s1.length === 11))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.at(7)) === \\"r\\")'\`)})(((s1.at(7)) === \\"r\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.concat(s2)) === \\"some strings are immutable\\")'\`)})(((s1.concat(s2)) === \\"some strings are immutable\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 's1.includes(\\"some\\")'\`)})(s1.includes(\\"some\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(!\\"some\\".includes(s1))'\`)})((!\\"some\\".includes(s1)))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 's1.endsWith(\\"string\\")'\`)})(s1.endsWith(\\"string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s1.indexOf(\\"s\\") === 0)'\`)})((s1.indexOf(\\"s\\") === 0))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"Some String\\".toLocaleLowerCase() === \\"some string\\")'\`)})((\\"Some String\\".toLocaleLowerCase() === \\"some string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(((s1.split(\\" \\")).at(0)) === \\"some\\")'\`)})((((s1.split(\\" \\")).at(0)) === \\"some\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 's1.startsWith(\\"some\\")'\`)})(s1.startsWith(\\"some\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.substring(5)) === \\"string\\")'\`)})(((s1.substring(5)) === \\"string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.substring(5,7)) === \\"st\\")'\`)})(((s1.substring(5,7)) === \\"st\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((\\"   some string   \\".trim()) === \\"some string\\")'\`)})(((\\"   some string   \\".trim()) === \\"some string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"Some String\\".toLocaleUpperCase() === \\"SOME STRING\\")'\`)})((\\"Some String\\".toLocaleUpperCase() === \\"SOME STRING\\"))};
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:string\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.0fb01e81c63b003d77d6245e36ba84561e3e2d3268e69a7c975f81cfe7565fac/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      s1: {
        obj: s1,
        ops: []
      },
      s2: {
        obj: s2,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`wing compile -t tf-aws > proc.0fb01e81c63b003d77d6245e36ba84561e3e2d3268e69a7c975f81cfe7565fac/index.js 1`] = `
"async handle() { const { s1, s2 } = this; {
  {console.log(\`index of \\\\\\"s\\\\\\" in s1 is \${s1.indexOf(\\"s\\")}\`)};
  {console.log((await (await s1.split(\\" \\")).at(1)))};
  {console.log((await s1.concat(s2)))};
} };"
`;

exports[`wing test > stdout 1`] = `
"pass ┌ std_string.w » root/test:string
     │ index of \\"s\\" in s1 is 0
     │ string
     └ some strings are immutable"
`;
