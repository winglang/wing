// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`bool_from_json.test.w 1`] = `
"ERROR: unable to parse bool:
- instance is not of a type(s) boolean

../../../examples/tests/error/bool_from_json.test.w:5:14

   
>> let a: bool = bool.fromJson(j.get(\\"a\\"));
   //                                  ^ preflight error: unable to parse number 123 as a boolean
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`num_from_str.test.w 1`] = `
"ERROR: unable to parse \\"123a\\" as a number

../../../examples/tests/error/num_from_str.test.w:3:13

   // If it is run with other tests, subsequent failures will be ignored in snapshot.
>> let a: num = num.fromStr(\\"123a\\");
   //                                ^ preflight error: unable to parse 123a as a number
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`number_from_json.test.w 1`] = `
"ERROR: unable to parse num:
- instance is not of a type(s) number

../../../examples/tests/error/number_from_json.test.w:5:13

   
>> let a: num = num.fromJson(j.get(\\"a\\"));
   //                                ^ preflight error: unable to parse string apples as a number
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`repeat_construct_id.test.w 1`] = `
"ERROR: There is already a Construct with name 'cloud.Bucket' in $Root [env0]

hint: Every preflight object needs a unique identifier within its scope. You can assign one as shown:

> new cloud.Bucket() as \\"MyBucket\\";

For more information, see https://www.winglang.io/docs/concepts/application-tree

../../../examples/tests/error/repeat_construct_id.test.w:4:14

   let bucket1 = new cloud.Bucket();
>> let bucket2 = new cloud.Bucket();
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`repeat_construct_id2.test.w 1`] = `
"ERROR: There is already a Construct with name 'bucket-name' in $Root [env0]

hint: Every preflight object needs a unique identifier within its scope. You can assign one as shown:

> new cloud.Bucket() as \\"MyBucket\\";

For more information, see https://www.winglang.io/docs/concepts/application-tree

../../../examples/tests/error/repeat_construct_id2.test.w:8:14

   let bucket1 = new cloud.Bucket() as \\"\${make_name()}\\";
>> let bucket2 = new cloud.Bucket() as \\"\${make_name()}\\";
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`string_from_json.test.w 1`] = `
"ERROR: unable to parse string:
- instance is not of a type(s) string

../../../examples/tests/error/string_from_json.test.w:5:13

   
>> let a: str = str.fromJson(j.get(\\"a\\"));
   //                                ^ preflight error: unable to parse number 123 as a string
   
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`struct_from_json_1.test.w 1`] = `
"ERROR: unable to parse Person:
- instance.age is not of a type(s) number

../../../examples/tests/error/struct_from_json_1.test.w:11:0

   
>> Person.fromJson(j);
   //              ^ ERROR: unable to parse Person:
   // - instance.age is not of a type(s) number
   
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`struct_from_json_2.test.w 1`] = `
"ERROR: unable to parse Student:
- instance.age is not of a type(s) number
- instance requires property \\"advisor\\"

../../../examples/tests/error/struct_from_json_2.test.w:22:0

   
>> Student.fromJson(missingAdvisor);
   //              ^ ERROR: unable to parse Student:
   // - instance.age is not of a type(s) number
   // - instance requires property \\"advisor\\"
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`struct_from_json_3.test.w 1`] = `
"ERROR: unable to parse Student:
- instance.advisors[1].id is not of a type(s) string
- instance.age is not of a type(s) number

../../../examples/tests/error/struct_from_json_3.test.w:26:0

   
>> Student.fromJson(invalidAdvisorInArray);
   //              ^ ERROR: unable to parse Student:
   // - instance.age is not of a type(s) number
   // - instance.advisors[1].id is not of a type(s) string
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`struct_from_json_4.test.w 1`] = `
"ERROR: unable to parse Student:
- instance.advisors contains duplicate item

../../../examples/tests/error/struct_from_json_4.test.w:27:0

   
>> Student.fromJson(invalidAdvisorInArray);
   //              ^ ERROR: unable to parse Student:
   // - instance.advisors contains duplicate item
   
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`struct_from_json_5.test.w 1`] = `
"ERROR: unable to parse Foo:
- instance.names.c is not of a type(s) string

../../../examples/tests/error/struct_from_json_5.test.w:16:0

   
>> Foo.fromJson(jFoo);
   //           ^ ERROR: unable to parse Foo:
   // - instance.names.c is not of a type(s) string
   
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;

exports[`utilities.test.w 1`] = `
"ERROR: assertion failed: false

../../../examples/tests/error/utilities.test.w:1:0

>> assert(false);
   log(\\"W\\");
   throw \\"me\\";
   
 
 
Tests 1 failed (1)
Test Files 1 failed (1)
Duration <DURATION>"
`;
