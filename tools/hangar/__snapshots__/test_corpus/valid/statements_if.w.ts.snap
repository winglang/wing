// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`wing compile -t tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
        "source": "<ASSET_SOURCE>",
      },
    },
  },
}
`;

exports[`wing compile -t tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WING_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_if\\", plugins: $plugins });
  
  if (true) {
    const x = 2;
    const f = false;
    if ((true && ((x + 2) === 4))) {
      if ((true && ((x + 3) === 4))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((true && ((x + 3) === 6))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((false || ((x + 3) === 5))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'true'\`)})(true)};
      } else if ((!f)) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: '(!(!(!f)))'\`)})((!(!(!f))))};
      } else {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      }
    } else {
      {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
    }
  }
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require.resolve(\\"./proc.09c5e24751d9ba1246f91518f2f7f5c5d1102a09d0b1acff479ae27ad134090f/index.js\\".replace(/\\\\\\\\/g, \\"/\\"))),
    bindings: {
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`wing compile -t tf-aws > proc.09c5e24751d9ba1246f91518f2f7f5c5d1102a09d0b1acff479ae27ad134090f/index.js 1`] = `
"async handle(s) { const {  } = this; {
  if (true) {
    const x = 2;
    if ((true && ((x + 2) === 4))) {
      if ((true && ((x + 3) === 4))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((true && ((x + 3) === 6))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((false || ((x + 3) === 5))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'true'\`)})(true)};
      } else {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      }
    } else {
      {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
    }
  }
} };"
`;

exports[`wing test > stdout 1`] = `"pass ─ statements_if.w » root/test"`;
