// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`wing compile -t tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {
      "root": {
        "Default": {
          "cloud.TestRunner": {
            "TestFunctionArns": "WING_TEST_RUNNER_FUNCTION_ARNS",
          },
        },
      },
    },
  },
  "data": {
    "aws_region": {
      "root_Region_A2D17352": {
        "//": {
          "metadata": {
            "path": "root/Default/Region",
            "uniqueId": "root_Region_A2D17352",
          },
        },
      },
    },
  },
  "output": {
    "WING_TEST_RUNNER_FUNCTION_ARNS": {
      "value": "[]",
    },
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_api_gateway_deployment": {
      "root_cloudApi_api_deployment_E29F699A": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/deployment",
            "uniqueId": "root_cloudApi_api_deployment_E29F699A",
          },
        },
        "lifecycle": {
          "create_before_destroy": true,
        },
        "rest_api_id": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.id}",
        "triggers": {
          "redeployment": "a203ba79dec7077e4ead3daf0e79daa0f30c5d85",
        },
      },
    },
    "aws_api_gateway_rest_api": {
      "root_cloudApi_api_8C9FE51E": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/api",
            "uniqueId": "root_cloudApi_api_8C9FE51E",
          },
        },
        "body": "{\\"openapi\\":\\"3.0.3\\",\\"paths\\":{\\"/test/{sup:er/:annoying//path}\\":{\\"get\\":{\\"operationId\\":\\"get-test/{sup:er/:annoying//path}\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"sup:er/:annoying//path\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/{::another:annoying:path}\\":{\\"get\\":{\\"operationId\\":\\"get-test/{::another:annoying:path}\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"::another:annoying:path\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/n0t_alphanumer1cPa:th\\":{\\"get\\":{\\"operationId\\":\\"get-test/n0t_alphanumer1cPa:th\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/path/{with}/{two:invali4d#}/variables\\":{\\"get\\":{\\"operationId\\":\\"get-test/path/{with}/{two:invali4d#}/variables\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"with\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}},{\\"name\\":\\"two:invali4d#\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/path/{unclosed\\":{\\"get\\":{\\"operationId\\":\\"get-test/path/{unclosed\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/m{issplaced}\\":{\\"get\\":{\\"operationId\\":\\"get-test/m{issplaced}\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"issplaced\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/{misspla}ced\\":{\\"get\\":{\\"operationId\\":\\"get-test/{misspla}ced\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"misspla\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/{}/empty\\":{\\"get\\":{\\"operationId\\":\\"get-test/{}/empty\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test\\":{\\"get\\":{\\"operationId\\":\\"get-test\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/alphanumer1cPa_th\\":{\\"get\\":{\\"operationId\\":\\"get-test/alphanumer1cPa_th\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/regular/path\\":{\\"get\\":{\\"operationId\\":\\"get-test/regular/path\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/path/{with}/two/{variable_s}/f?bla=5&b=6\\":{\\"get\\":{\\"operationId\\":\\"get-test/path/{with}/two/{variable_s}/f?bla=5&b=6\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"with\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}},{\\"name\\":\\"variable_s\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}},\\"/test/param/is/{last}\\":{\\"get\\":{\\"operationId\\":\\"get-test/param/is/{last}\\",\\"responses\\":{\\"200\\":{\\"description\\":\\"200 response\\",\\"content\\":{}}},\\"parameters\\":[{\\"name\\":\\"last\\",\\"in\\":\\"path\\",\\"required\\":true,\\"schema\\":{\\"type\\":\\"string\\"}}],\\"x-amazon-apigateway-integration\\":{\\"uri\\":\\"arn:aws:apigateway:\${data.aws_region.root_Region_A2D17352.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.arn}/invocations\\",\\"type\\":\\"aws_proxy\\",\\"httpMethod\\":\\"POST\\",\\"responses\\":{\\"default\\":{\\"statusCode\\":\\"200\\"}},\\"passthroughBehavior\\":\\"when_no_match\\",\\"contentHandling\\":\\"CONVERT_TO_TEXT\\"}}}}}",
        "name": "api-c895068c",
      },
    },
    "aws_api_gateway_stage": {
      "root_cloudApi_api_stage_57D6284A": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/stage",
            "uniqueId": "root_cloudApi_api_stage_57D6284A",
          },
        },
        "deployment_id": "\${aws_api_gateway_deployment.root_cloudApi_api_deployment_E29F699A.id}",
        "rest_api_id": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.id}",
        "stage_name": "prod",
      },
    },
    "aws_iam_role": {
      "root_cloudApi_cloudApiOnRequeste46e5cb7_IamRole_15046B29": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/cloud.Api-OnRequest-e46e5cb7/IamRole",
            "uniqueId": "root_cloudApi_cloudApiOnRequeste46e5cb7_IamRole_15046B29",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudApi_cloudApiOnRequeste46e5cb7_IamRolePolicy_0281983F": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/cloud.Api-OnRequest-e46e5cb7/IamRolePolicy",
            "uniqueId": "root_cloudApi_cloudApiOnRequeste46e5cb7_IamRolePolicy_0281983F",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_cloudApi_cloudApiOnRequeste46e5cb7_IamRole_15046B29.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudApi_cloudApiOnRequeste46e5cb7_IamRolePolicyAttachment_3D2A6333": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/cloud.Api-OnRequest-e46e5cb7/IamRolePolicyAttachment",
            "uniqueId": "root_cloudApi_cloudApiOnRequeste46e5cb7_IamRolePolicyAttachment_3D2A6333",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudApi_cloudApiOnRequeste46e5cb7_IamRole_15046B29.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/cloud.Api-OnRequest-e46e5cb7/Default",
            "uniqueId": "root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud-Api-OnRequest-e46e5cb7-c8fd44c0",
          },
        },
        "function_name": "cloud-Api-OnRequest-e46e5cb7-c8fd44c0",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudApi_cloudApiOnRequeste46e5cb7_IamRole_15046B29.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudApi_cloudApiOnRequeste46e5cb7_Code_42BF847C.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudApi_cloudApiOnRequeste46e5cb7_S3Object_69EE2256.key}",
        "timeout": 30,
        "vpc_config": {
          "security_group_ids": [],
          "subnet_ids": [],
        },
      },
    },
    "aws_lambda_permission": {
      "root_cloudApi_api_permissionGET07951ede_249FE441": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-07951ede",
            "uniqueId": "root_cloudApi_api_permissionGET07951ede_249FE441",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/m{issplaced}",
        "statement_id": "AllowExecutionFromAPIGateway-GET-07951ede",
      },
      "root_cloudApi_api_permissionGET16ebe06a_BB5BEA20": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-16ebe06a",
            "uniqueId": "root_cloudApi_api_permissionGET16ebe06a_BB5BEA20",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/path/{with}/{two:invali4d#}/variables",
        "statement_id": "AllowExecutionFromAPIGateway-GET-16ebe06a",
      },
      "root_cloudApi_api_permissionGET499a6b13_8994286D": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-499a6b13",
            "uniqueId": "root_cloudApi_api_permissionGET499a6b13_8994286D",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/{sup:er/:annoying//path}",
        "statement_id": "AllowExecutionFromAPIGateway-GET-499a6b13",
      },
      "root_cloudApi_api_permissionGET4f9e0421_17C291C0": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-4f9e0421",
            "uniqueId": "root_cloudApi_api_permissionGET4f9e0421_17C291C0",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/{misspla}ced",
        "statement_id": "AllowExecutionFromAPIGateway-GET-4f9e0421",
      },
      "root_cloudApi_api_permissionGET8d6a8a39_56BCB29B": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-8d6a8a39",
            "uniqueId": "root_cloudApi_api_permissionGET8d6a8a39_56BCB29B",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/regular/path",
        "statement_id": "AllowExecutionFromAPIGateway-GET-8d6a8a39",
      },
      "root_cloudApi_api_permissionGET8dfdf611_255A0960": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-8dfdf611",
            "uniqueId": "root_cloudApi_api_permissionGET8dfdf611_255A0960",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/alphanumer1cPa_th",
        "statement_id": "AllowExecutionFromAPIGateway-GET-8dfdf611",
      },
      "root_cloudApi_api_permissionGET9d1bf5b8_3C04C4C4": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-9d1bf5b8",
            "uniqueId": "root_cloudApi_api_permissionGET9d1bf5b8_3C04C4C4",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/n0t_alphanumer1cPa:th",
        "statement_id": "AllowExecutionFromAPIGateway-GET-9d1bf5b8",
      },
      "root_cloudApi_api_permissionGETb53ce5f6_3164D41C": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-b53ce5f6",
            "uniqueId": "root_cloudApi_api_permissionGETb53ce5f6_3164D41C",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/param/is/{last}",
        "statement_id": "AllowExecutionFromAPIGateway-GET-b53ce5f6",
      },
      "root_cloudApi_api_permissionGETd53c4dff_B4647AFF": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-d53c4dff",
            "uniqueId": "root_cloudApi_api_permissionGETd53c4dff_B4647AFF",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/path/{unclosed",
        "statement_id": "AllowExecutionFromAPIGateway-GET-d53c4dff",
      },
      "root_cloudApi_api_permissionGETe5cd4eeb_4001D435": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-e5cd4eeb",
            "uniqueId": "root_cloudApi_api_permissionGETe5cd4eeb_4001D435",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/path/{with}/two/{variable_s}/f?bla=5&b=6",
        "statement_id": "AllowExecutionFromAPIGateway-GET-e5cd4eeb",
      },
      "root_cloudApi_api_permissionGETe8d09b4f_716EA8C2": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-e8d09b4f",
            "uniqueId": "root_cloudApi_api_permissionGETe8d09b4f_716EA8C2",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test",
        "statement_id": "AllowExecutionFromAPIGateway-GET-e8d09b4f",
      },
      "root_cloudApi_api_permissionGETf5c474aa_27C4B43A": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-f5c474aa",
            "uniqueId": "root_cloudApi_api_permissionGETf5c474aa_27C4B43A",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/{::another:annoying:path}",
        "statement_id": "AllowExecutionFromAPIGateway-GET-f5c474aa",
      },
      "root_cloudApi_api_permissionGETf687b472_5E672097": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/api/permission-GET-f687b472",
            "uniqueId": "root_cloudApi_api_permissionGETf687b472_5E672097",
          },
        },
        "action": "lambda:InvokeFunction",
        "function_name": "\${aws_lambda_function.root_cloudApi_cloudApiOnRequeste46e5cb7_489FDB7E.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "\${aws_api_gateway_rest_api.root_cloudApi_api_8C9FE51E.execution_arn}/*/GET/test/{}/empty",
        "statement_id": "AllowExecutionFromAPIGateway-GET-f687b472",
      },
    },
    "aws_s3_bucket": {
      "root_cloudApi_cloudApiOnRequeste46e5cb7_Code_42BF847C": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/cloud.Api-OnRequest-e46e5cb7/Code",
            "uniqueId": "root_cloudApi_cloudApiOnRequeste46e5cb7_Code_42BF847C",
          },
        },
        "bucket_prefix": "code-c8f42a3b-",
      },
    },
    "aws_s3_object": {
      "root_cloudApi_cloudApiOnRequeste46e5cb7_S3Object_69EE2256": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/cloud.Api/cloud.Api-OnRequest-e46e5cb7/S3Object",
            "uniqueId": "root_cloudApi_cloudApiOnRequeste46e5cb7_S3Object_69EE2256",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudApi_cloudApiOnRequeste46e5cb7_Code_42BF847C.bucket}",
        "key": "<ASSET_KEY>",
        "source": "<ASSET_SOURCE>",
      },
    },
  },
}
`;

exports[`wing compile -t tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WING_SYNTH_DIR ?? \\".\\";
const $wing_is_test = process.env.WING_IS_TEST === \\"true\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		case \\"awscdk\\":
			return $stdlib.awscdk.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $AppBase = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class $Root extends $stdlib.core.Resource {
  constructor(scope, id) {
    super(scope, id);
    const api = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Api\\",this,\\"cloud.Api\\");
    const handler = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
  code: $stdlib.core.NodeJsCode.fromFile(require.resolve(\\"./proc.f147f5c99766733e101720dc103517b5d60d7f61985c7f624f7364ffb249bad0/index.js\\".replace(/\\\\\\\\/g, \\"/\\"))),
  bindings: {
  }
});
    try {
	{
  (api.get(\\"/test/{sup:er/:annoying//path}\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/{sup:er/:annoying//path}. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/{sup:er/:annoying//path}. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/{::another:annoying:path}\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/{::another:annoying:path}. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/{::another:annoying:path}. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/n0t_alphanumer1cPa:th\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/n0t_alphanumer1cPa:th. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/n0t_alphanumer1cPa:th. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/path/{with}/{two:invali4d#}/variables\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/path/{with}/{two:invali4d#}/variables. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/path/{with}/{two:invali4d#}/variables. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/path/{unclosed\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/path/{unclosed. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/path/{unclosed. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/m{issplaced}\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/m{issplaced}. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/m{issplaced}. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/{misspla}ced\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/{misspla}ced. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/{misspla}ced. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    try {
	{
  (api.get(\\"/test/{}/empty\\",handler));
}
} catch ($error_error) {
	const error = $error_error.message;
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(error === \\"Invalid route /test/{}/empty. Routes and params should consist of alpha-numeric characters only.\\")'\`)})((error === \\"Invalid route /test/{}/empty. Routes and params should consist of alpha-numeric characters only.\\"))};
}
} finally {
	
}
    (api.get(\\"/test\\",handler));
    (api.get(\\"/test/alphanumer1cPa_th\\",handler));
    (api.get(\\"/test/regular/path\\",handler));
    (api.get(\\"/test/path/{with}/two/{variable_s}/f?bla=5&b=6\\",handler));
    (api.get(\\"/test/param/is/{last}\\",handler));
  }
}

class $App extends $AppBase {
  constructor() {
    super({ outdir: $outdir, name: \\"api_valid_path\\", plugins: $plugins, isTestEnvironment: $wing_is_test });
    if ($wing_is_test) {
      new $Root(this, \\"env0\\");
      const $test_runner = this.testRunner;
      const $tests = $test_runner.findTests();
      for (let $i = 1; $i < $tests.length; $i++) {
        new $Root(this, \\"env\\" + $i);
      }
    } else {
      new $Root(this, \\"Default\\");
    }
  }
}

new $App().synth();"
`;

exports[`wing compile -t tf-aws > proc.f147f5c99766733e101720dc103517b5d60d7f61985c7f624f7364ffb249bad0/index.js 1`] = `
"async handle(req) { const {  } = this; {
  return {
  \\"body\\": \\"ok\\",
  \\"status\\": 200,}
  ;
} };"
`;

exports[`wing test -t sim > stdout 1`] = `
"- Compiling to sim...
✔ Compiling to sim...
pass ─ api_valid_path.wsim (no tests)"
`;
