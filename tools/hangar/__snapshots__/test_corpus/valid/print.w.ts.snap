// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`wing compile -t tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {
      "root": {
        "Default": {
          "cloud.TestRunner": {
            "TestFunctionArns": "WING_TEST_RUNNER_FUNCTION_ARNS",
          },
        },
      },
    },
  },
  "output": {
    "WING_TEST_RUNNER_FUNCTION_ARNS": {
      "value": "[[\\"root/Default/Default/test:log1\\",\\"\${aws_lambda_function.root_testlog1_F98C8031.arn}\\"],[\\"root/Default/Default/test:log2\\",\\"\${aws_lambda_function.root_testlog2_B951F90D.arn}\\"]]",
    },
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_testlog1_IamRole_3D62ABEB": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log1/IamRole",
            "uniqueId": "root_testlog1_IamRole_3D62ABEB",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testlog2_IamRole_7773EE80": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log2/IamRole",
            "uniqueId": "root_testlog2_IamRole_7773EE80",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_testlog1_IamRolePolicy_E3942901": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log1/IamRolePolicy",
            "uniqueId": "root_testlog1_IamRolePolicy_E3942901",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_testlog1_IamRole_3D62ABEB.name}",
      },
      "root_testlog2_IamRolePolicy_F59DDE76": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log2/IamRolePolicy",
            "uniqueId": "root_testlog2_IamRolePolicy_F59DDE76",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_testlog2_IamRole_7773EE80.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_testlog1_IamRolePolicyAttachment_EA81CDB3": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log1/IamRolePolicyAttachment",
            "uniqueId": "root_testlog1_IamRolePolicyAttachment_EA81CDB3",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testlog1_IamRole_3D62ABEB.name}",
      },
      "root_testlog2_IamRolePolicyAttachment_D424C0BD": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log2/IamRolePolicyAttachment",
            "uniqueId": "root_testlog2_IamRolePolicyAttachment_D424C0BD",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testlog2_IamRole_7773EE80.name}",
      },
    },
    "aws_lambda_function": {
      "root_testlog1_F98C8031": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log1/Default",
            "uniqueId": "root_testlog1_F98C8031",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-log1-c8333bd5",
          },
        },
        "function_name": "test-log1-c8333bd5",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testlog1_IamRole_3D62ABEB.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testlog1_Code_49F9C67F.bucket}",
        "s3_key": "\${aws_s3_object.root_testlog1_S3Object_95AE7AEC.key}",
        "timeout": 30,
        "vpc_config": {
          "security_group_ids": [],
          "subnet_ids": [],
        },
      },
      "root_testlog2_B951F90D": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log2/Default",
            "uniqueId": "root_testlog2_B951F90D",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-log2-c89ee849",
          },
        },
        "function_name": "test-log2-c89ee849",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testlog2_IamRole_7773EE80.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testlog2_Code_F54FF962.bucket}",
        "s3_key": "\${aws_s3_object.root_testlog2_S3Object_93F5CD8E.key}",
        "timeout": 30,
        "vpc_config": {
          "security_group_ids": [],
          "subnet_ids": [],
        },
      },
    },
    "aws_s3_bucket": {
      "root_testlog1_Code_49F9C67F": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log1/Code",
            "uniqueId": "root_testlog1_Code_49F9C67F",
          },
        },
        "bucket_prefix": "code-c84d326c-",
      },
      "root_testlog2_Code_F54FF962": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log2/Code",
            "uniqueId": "root_testlog2_Code_F54FF962",
          },
        },
        "bucket_prefix": "code-c86426d8-",
      },
    },
    "aws_s3_object": {
      "root_testlog1_S3Object_95AE7AEC": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log1/S3Object",
            "uniqueId": "root_testlog1_S3Object_95AE7AEC",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testlog1_Code_49F9C67F.bucket}",
        "key": "<ASSET_KEY>",
        "source": "<ASSET_SOURCE>",
      },
      "root_testlog2_S3Object_93F5CD8E": {
        "//": {
          "metadata": {
            "path": "root/Default/Default/test:log2/S3Object",
            "uniqueId": "root_testlog2_S3Object_93F5CD8E",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testlog2_Code_F54FF962.bucket}",
        "key": "<ASSET_KEY>",
        "source": "<ASSET_SOURCE>",
      },
    },
  },
}
`;

exports[`wing compile -t tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WING_SYNTH_DIR ?? \\".\\";
const $wing_is_test = process.env.WING_IS_TEST === \\"true\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		case \\"awscdk\\":
			return $stdlib.awscdk.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $AppBase = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class $Root extends $stdlib.core.Resource {
  constructor(scope, id) {
    super(scope, id);
    {console.log(\\"preflight log\\")};
    this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:log1\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
      code: $stdlib.core.NodeJsCode.fromFile(require.resolve(\\"./proc.a4d16ad74e509f7ba53bb94a76d85ecfca8334031a4d57904b76d1b4fde85163/index.js\\".replace(/\\\\\\\\/g, \\"/\\"))),
      bindings: {
      }
    })
    );
    this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:log2\\",new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
      code: $stdlib.core.NodeJsCode.fromFile(require.resolve(\\"./proc.be3fb7aaa77c217758a5cd7be43b3bb17d3f8d89ee3a8532005b78396dc4de64/index.js\\".replace(/\\\\\\\\/g, \\"/\\"))),
      bindings: {
      }
    })
    );
  }
}
class $App extends $AppBase {
  constructor() {
    super({ outdir: $outdir, name: \\"print\\", plugins: $plugins, isTestEnvironment: $wing_is_test });
    if ($wing_is_test) {
      new $Root(this, \\"env0\\");
      const $test_runner = this.testRunner;
      const $tests = $test_runner.findTests();
      for (let $i = 1; $i < $tests.length; $i++) {
        new $Root(this, \\"env\\" + $i);
      }
    } else {
      new $Root(this, \\"Default\\");
    }
  }
}
new $App().synth();
"
`;

exports[`wing compile -t tf-aws > proc.a4d16ad74e509f7ba53bb94a76d85ecfca8334031a4d57904b76d1b4fde85163/index.js 1`] = `
"async handle() {
  const {  } = this;
  {console.log(\\"inflight log 1.1\\")};
  {console.log(\\"inflight log 1.2\\")};
}
"
`;

exports[`wing compile -t tf-aws > proc.be3fb7aaa77c217758a5cd7be43b3bb17d3f8d89ee3a8532005b78396dc4de64/index.js 1`] = `
"async handle() {
  const {  } = this;
  {console.log(\\"inflight log 2.1\\")};
  {console.log(\\"inflight log 2.2\\")};
}
"
`;

exports[`wing test -t sim > stdout 1`] = `
"- Compiling to sim...
preflight log
preflight log
✔ Compiling to sim...
pass ┌ print.wsim » root/env0/test:log1
     │ inflight log 1.1
     └ inflight log 1.2
pass ┌ print.wsim » root/env1/test:log2
     │ inflight log 2.1
     └ inflight log 2.2"
`;
