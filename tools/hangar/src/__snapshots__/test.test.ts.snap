// Vitest Snapshot v1

exports[`anon_function.w > wing test --target sim > stdout 1`] = `"pass | anon_function.w | (no inflight tests)"`;

exports[`asynchronous_model_implicit_await_in_functions.w > wing test --target sim > stdout 1`] = `"pass | asynchronous_model_implicit_await_in_functions.w | (no inflight tests)"`;

exports[`capture_containers.w > wing test --target sim > stdout 1`] = `"pass | capture_containers.w | root/test"`;

exports[`capture_containers_of_resources.w > wing test --target sim > stdout 1`] = `"pass | capture_containers_of_resources.w | root/test"`;

exports[`capture_in_binary.w > wing test --target sim > stdout 1`] = `"pass | capture_in_binary.w | root/test"`;

exports[`capture_primitives.w > wing test --target sim > stdout 1`] = `"pass | capture_primitives.w | (no inflight tests)"`;

exports[`capture_resource_and_data.w > wing test --target sim > stdout 1`] = `"pass | capture_resource_and_data.w | root/test"`;

exports[`captures.w > wing test --target sim > stdout 1`] = `"pass | captures.w | (no inflight tests)"`;

exports[`container_types.w > wing test --target sim > stdout 1`] = `"pass | container_types.w | (no inflight tests)"`;

exports[`enums.w > wing test --target sim > stdout 1`] = `"pass | enums.w | (no inflight tests)"`;

exports[`expressions_binary_operators.w > wing test --target sim > stdout 1`] = `"pass | expressions_binary_operators.w | (no inflight tests)"`;

exports[`expressions_string_interpolation.w > wing test --target sim > stdout 1`] = `"pass | expressions_string_interpolation.w | (no inflight tests)"`;

exports[`file_counter.w > wing test --target sim > stdout 1`] = `"pass | file_counter.w | (no inflight tests)"`;

exports[`for_loop.w > wing test --target sim > stdout 1`] = `"pass | for_loop.w | (no inflight tests)"`;

exports[`forward_decl.w > wing test --target sim > stdout 1`] = `"pass | forward_decl.w | (no inflight tests)"`;

exports[`hello.w > wing test --target sim > stdout 1`] = `"pass | hello.w | (no inflight tests)"`;

exports[`identical_inflights.w > wing test --target sim > stdout 1`] = `"pass | identical_inflights.w | (no inflight tests)"`;

exports[`mut_container_types.w > wing test --target sim > stdout 1`] = `"pass | mut_container_types.w | (no inflight tests)"`;

exports[`primitive_methods.w > wing test --target sim > stdout 1`] = `"pass | primitive_methods.w | (no inflight tests)"`;

exports[`print.w > wing test --target sim > stdout 1`] = `"pass | print.w | (no inflight tests)"`;

exports[`reassignment.w > wing test --target sim > stdout 1`] = `"pass | reassignment.w | (no inflight tests)"`;

exports[`resource.w > wing test --target sim > stdout 1`] = `"pass | resource.w | (no inflight tests)"`;

exports[`statements_if.w > wing test --target sim > stdout 1`] = `"pass | statements_if.w | root/test"`;

exports[`statements_variable_declarations.w > wing test --target sim > stdout 1`] = `"pass | statements_variable_declarations.w | (no inflight tests)"`;

exports[`std_containers.w > wing test --target sim > stdout 1`] = `"pass | std_containers.w | (no inflight tests)"`;

exports[`test_bucket.w > wing test --target sim > stdout 1`] = `
"pass | test_bucket.w | root/test:get
pass | test_bucket.w | root/test:put"
`;

exports[`while.w > wing test --target sim > stdout 1`] = `"pass | while.w | (no inflight tests)"`;

exports[`while_loop_await.w > wing test --target sim > stdout 1`] = `"pass | while_loop_await.w | (no inflight tests)"`;
