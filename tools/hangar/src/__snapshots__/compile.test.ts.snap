// Vitest Snapshot v1

exports[`anon_function.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`anon_function.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"anon_function\\", plugins: $plugins });
  
  const myfunc =  (x) =>  {
  	{
    {console.log(\`\${x}\`)};
    x = (x + 1);
    if ((x > 3.14)) {
      return;
    }
    (myfunc(x));
  }
  };
  (myfunc(1));
  (( (x) =>  {
  	{
    {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === 1)'\`)})((x === 1))};
  }
  })(1));
}
}
new MyApp().synth();"
`;

exports[`asynchronous_model_implicit_await_in_functions.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(s) { const { str_to_str } = this; {
  (await str_to_str.invoke(\\"one\\"));
  {console.log((await str_to_str.invoke(\\"two\\")))};
} };"
`;

exports[`asynchronous_model_implicit_await_in_functions.w > wing compile --target tf-aws > index.js 2`] = `
"async handle(s) { const {  } = this; {
} };"
`;

exports[`asynchronous_model_implicit_await_in_functions.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_func_IamRole_EE572BCE": {
        "//": {
          "metadata": {
            "path": "root/Default/func/IamRole",
            "uniqueId": "root_func_IamRole_EE572BCE",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_strtostr_IamRole_305ACAF8": {
        "//": {
          "metadata": {
            "path": "root/Default/str_to_str/IamRole",
            "uniqueId": "root_strtostr_IamRole_305ACAF8",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_func_IamRolePolicy_3AC5101F": {
        "//": {
          "metadata": {
            "path": "root/Default/func/IamRolePolicy",
            "uniqueId": "root_func_IamRolePolicy_3AC5101F",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"lambda:InvokeFunction\\"],\\"Resource\\":[\\"\${aws_lambda_function.root_strtostr_05420EE8.arn}\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_func_IamRole_EE572BCE.name}",
      },
      "root_strtostr_IamRolePolicy_B80B33C4": {
        "//": {
          "metadata": {
            "path": "root/Default/str_to_str/IamRolePolicy",
            "uniqueId": "root_strtostr_IamRolePolicy_B80B33C4",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_strtostr_IamRole_305ACAF8.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_func_IamRolePolicyAttachment_AD2DD410": {
        "//": {
          "metadata": {
            "path": "root/Default/func/IamRolePolicyAttachment",
            "uniqueId": "root_func_IamRolePolicyAttachment_AD2DD410",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_func_IamRole_EE572BCE.name}",
      },
      "root_strtostr_IamRolePolicyAttachment_C5B57BBD": {
        "//": {
          "metadata": {
            "path": "root/Default/str_to_str/IamRolePolicyAttachment",
            "uniqueId": "root_strtostr_IamRolePolicyAttachment_C5B57BBD",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_strtostr_IamRole_305ACAF8.name}",
      },
    },
    "aws_lambda_function": {
      "root_func_0444AFD0": {
        "//": {
          "metadata": {
            "path": "root/Default/func/Default",
            "uniqueId": "root_func_0444AFD0",
          },
        },
        "environment": {
          "variables": {
            "FUNCTION_NAME_8ca853c9": "\${aws_lambda_function.root_strtostr_05420EE8.arn}",
            "WING_FUNCTION_NAME": "func-c8cf78f6",
          },
        },
        "function_name": "func-c8cf78f6",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_func_IamRole_EE572BCE.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_func_Code_58BA0E0E.bucket}",
        "s3_key": "\${aws_s3_object.root_func_S3Object_F6163647.key}",
        "timeout": 30,
      },
      "root_strtostr_05420EE8": {
        "//": {
          "metadata": {
            "path": "root/Default/str_to_str/Default",
            "uniqueId": "root_strtostr_05420EE8",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "str_to_str-c8891c85",
          },
        },
        "function_name": "str_to_str-c8891c85",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_strtostr_IamRole_305ACAF8.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_strtostr_Code_5BA38746.bucket}",
        "s3_key": "\${aws_s3_object.root_strtostr_S3Object_C6E06A09.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_func_Code_58BA0E0E": {
        "//": {
          "metadata": {
            "path": "root/Default/func/Code",
            "uniqueId": "root_func_Code_58BA0E0E",
          },
        },
        "bucket_prefix": "code-c80d7959-",
      },
      "root_strtostr_Code_5BA38746": {
        "//": {
          "metadata": {
            "path": "root/Default/str_to_str/Code",
            "uniqueId": "root_strtostr_Code_5BA38746",
          },
        },
        "bucket_prefix": "code-c8b8906a-",
      },
    },
    "aws_s3_object": {
      "root_func_S3Object_F6163647": {
        "//": {
          "metadata": {
            "path": "root/Default/func/S3Object",
            "uniqueId": "root_func_S3Object_F6163647",
          },
        },
        "bucket": "\${aws_s3_bucket.root_func_Code_58BA0E0E.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`asynchronous_model_implicit_await_in_functions.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"asynchronous_model_implicit_await_in_functions\\", plugins: $plugins });
  
  const q = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\");
  const str_to_str = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"str_to_str\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.8eb95bcbc154530931e15fc418c8b1fe991095671409552099ea1aa596999ede/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  }));
  const func = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"func\\",new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.2241fd974faa47c8b8d27f5a3e172f473ca36c6b44cb328a58655fd2d0aac7d7/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      str_to_str: {
        obj: str_to_str,
        ops: [\\"invoke\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`bring_cdktf.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_s3_bucket": {
      "root_Bucket_966015A6": {
        "//": {
          "metadata": {
            "path": "root/Default/Bucket",
            "uniqueId": "root_Bucket_966015A6",
          },
        },
        "bucket_prefix": "hello",
        "versioning": {
          "enabled": true,
        },
      },
    },
  },
}
`;

exports[`bring_cdktf.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const aws = require(\\"@cdktf/provider-aws\\");
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"bring_cdktf\\", plugins: $plugins });
  
  this.node.root.new(\\"@cdktf/provider-aws.s3Bucket.S3Bucket\\",aws.s3Bucket.S3Bucket,this,\\"Bucket\\",{ bucketPrefix: \\"hello\\", versioning: {
  \\"enabled\\": true,
  \\"mfa_delete\\": true,}
   });
}
}
new MyApp().synth();"
`;

exports[`bring_fs.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`bring_fs.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
const fs = require('@winglang/sdk').fs;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"bring_fs\\", plugins: $plugins });
  
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  this.node.root.new(\\"@winglang/sdk.fs.TextFile\\",fs.TextFile,this,\\"fs.TextFile\\",\\"/tmp/test.txt\\");
}
}
new MyApp().synth();"
`;

exports[`bring_jsii.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(m) { const { greeting } = this; {
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(greeting === \\"Hello, wingnuts\\")'\`)})((greeting === \\"Hello, wingnuts\\"))};
} };"
`;

exports[`bring_jsii.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_testsayhello_IamRole_CD3CFB9C": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/IamRole",
            "uniqueId": "root_testsayhello_IamRole_CD3CFB9C",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_testsayhello_IamRolePolicy_265A46FB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/IamRolePolicy",
            "uniqueId": "root_testsayhello_IamRolePolicy_265A46FB",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_testsayhello_IamRole_CD3CFB9C.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_testsayhello_IamRolePolicyAttachment_1B179C34": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/IamRolePolicyAttachment",
            "uniqueId": "root_testsayhello_IamRolePolicyAttachment_1B179C34",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testsayhello_IamRole_CD3CFB9C.name}",
      },
    },
    "aws_lambda_function": {
      "root_testsayhello_8E3F8CF7": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/Default",
            "uniqueId": "root_testsayhello_8E3F8CF7",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-say_hello-c867d9d9",
          },
        },
        "function_name": "test-say_hello-c867d9d9",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testsayhello_IamRole_CD3CFB9C.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testsayhello_Code_D4453363.bucket}",
        "s3_key": "\${aws_s3_object.root_testsayhello_S3Object_A9281CAB.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_testsayhello_Code_D4453363": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/Code",
            "uniqueId": "root_testsayhello_Code_D4453363",
          },
        },
        "bucket_prefix": "code-c89e1bce-",
      },
    },
    "aws_s3_object": {
      "root_testsayhello_S3Object_A9281CAB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/S3Object",
            "uniqueId": "root_testsayhello_S3Object_A9281CAB",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testsayhello_Code_D4453363.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`bring_jsii.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
const stuff = require(\\"jsii-code-samples\\");
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"bring_jsii\\", plugins: $plugins });
  
  const hello = new stuff.HelloWorld();
  const greeting = (hello.sayHello(\\"wingnuts\\"));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:say_hello\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.5d209e0c3acca40c825662cab73c204803d9dd9f7903de90d0da6dc99ea7fa35/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      greeting: {
        obj: greeting,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`bring_jsii_path.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(m) { const { greeting } = this; {
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(greeting === \\"Hello, wingnuts\\")'\`)})((greeting === \\"Hello, wingnuts\\"))};
} };"
`;

exports[`bring_jsii_path.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_testsayhello_IamRole_CD3CFB9C": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/IamRole",
            "uniqueId": "root_testsayhello_IamRole_CD3CFB9C",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_testsayhello_IamRolePolicy_265A46FB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/IamRolePolicy",
            "uniqueId": "root_testsayhello_IamRolePolicy_265A46FB",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_testsayhello_IamRole_CD3CFB9C.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_testsayhello_IamRolePolicyAttachment_1B179C34": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/IamRolePolicyAttachment",
            "uniqueId": "root_testsayhello_IamRolePolicyAttachment_1B179C34",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testsayhello_IamRole_CD3CFB9C.name}",
      },
    },
    "aws_lambda_function": {
      "root_testsayhello_8E3F8CF7": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/Default",
            "uniqueId": "root_testsayhello_8E3F8CF7",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-say_hello-c867d9d9",
          },
        },
        "function_name": "test-say_hello-c867d9d9",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testsayhello_IamRole_CD3CFB9C.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testsayhello_Code_D4453363.bucket}",
        "s3_key": "\${aws_s3_object.root_testsayhello_S3Object_A9281CAB.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_testsayhello_Code_D4453363": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/Code",
            "uniqueId": "root_testsayhello_Code_D4453363",
          },
        },
        "bucket_prefix": "code-c89e1bce-",
      },
    },
    "aws_s3_object": {
      "root_testsayhello_S3Object_A9281CAB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:say_hello/S3Object",
            "uniqueId": "root_testsayhello_S3Object_A9281CAB",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testsayhello_Code_D4453363.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`bring_jsii_path.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
const jsii_code_samples = require(\\"./node_modules/jsii-code-samples\\");
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"bring_jsii_path\\", plugins: $plugins });
  
  const hello = new jsii_code_samples.HelloWorld();
  const greeting = (hello.sayHello(\\"wingnuts\\"));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:say_hello\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.5d209e0c3acca40c825662cab73c204803d9dd9f7903de90d0da6dc99ea7fa35/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      greeting: {
        obj: greeting,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`bring_projen.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`bring_projen.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const projen = require(\\"projen\\");
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"bring_projen\\", plugins: $plugins });
  
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(projen.LogLevel.OFF !== projen.LogLevel.VERBOSE)'\`)})((projen.LogLevel.OFF !== projen.LogLevel.VERBOSE))};
}
}
new MyApp().synth();"
`;

exports[`bucket_keys.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { b } = this; {
  (await b.put(\\"foo\\",\\"text\\"));
  (await b.put(\\"foo/\\",\\"text\\"));
  (await b.put(\\"foo/bar\\",\\"text\\"));
  (await b.put(\\"foo/bar/\\",\\"text\\"));
  (await b.put(\\"foo/bar/baz\\",\\"text\\"));
  const objs = (await b.list());
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await objs.at(0)) === \\"foo\\")'\`)})(((await objs.at(0)) === \\"foo\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await objs.at(1)) === \\"foo/\\")'\`)})(((await objs.at(1)) === \\"foo/\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await objs.at(2)) === \\"foo/bar\\")'\`)})(((await objs.at(2)) === \\"foo/bar\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await objs.at(3)) === \\"foo/bar/\\")'\`)})(((await objs.at(3)) === \\"foo/bar/\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await objs.at(4)) === \\"foo/bar/baz\\")'\`)})(((await objs.at(4)) === \\"foo/bar/baz\\"))};
} };"
`;

exports[`bucket_keys.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`bucket_keys.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"bucket_keys\\", plugins: $plugins });
  
  const b = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.6228e26a5981501feaae450d2628c682bfebb15974f5cc021606bb6e273636e0/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      b: {
        obj: b,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`capture_containers.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(s) { const { arr, arr_of_map, j, my_map, my_set } = this; {
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await arr.at(0)) === \\"hello\\")'\`)})(((await arr.at(0)) === \\"hello\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await arr.at(1)) === \\"world\\")'\`)})(((await arr.at(1)) === \\"world\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr.length === 2)'\`)})((arr.length === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(await my_set.has(\\"my\\"))'\`)})((await my_set.has(\\"my\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(my_set.size === 2)'\`)})((my_set.size === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"world\\" in (my_map))'\`)})((\\"world\\" in (my_map)))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(my_map).length === 2)'\`)})((Object.keys(my_map).length === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"bang\\" in ((await arr_of_map.at(0))))'\`)})((\\"bang\\" in ((await arr_of_map.at(0)))))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((j)[\\"b\\"] === \\"world\\")'\`)})(((j)[\\"b\\"] === \\"world\\"))};
} };"
`;

exports[`capture_containers.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`capture_containers.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_containers\\", plugins: $plugins });
  
  const arr = Object.freeze([\\"hello\\", \\"world\\"]);
  const my_set = Object.freeze(new Set([\\"my\\", \\"my\\", \\"set\\"]));
  const my_map = Object.freeze({\\"hello\\":123,\\"world\\":999});
  const arr_of_map = Object.freeze([Object.freeze({\\"bang\\":123})]);
  const j = Object.freeze({\\"a\\":\\"hello\\",\\"b\\":\\"world\\"});
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.dc7e5dc23da309970778fe7db4c795e3a6ae63c0d0ddc5e1780d4e2daadf67e1/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      arr: {
        obj: arr,
        ops: []
      },
      arr_of_map: {
        obj: arr_of_map,
        ops: []
      },
      j: {
        obj: j,
        ops: []
      },
      my_map: {
        obj: my_map,
        ops: []
      },
      my_set: {
        obj: my_set,
        ops: []
      },
    }
  });
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",handler);
}
}
new MyApp().synth();"
`;

exports[`capture_containers_of_resources.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(s) { const { arr, map, set } = this; {
  const b1 = (await arr.at(0));
  const b2 = (await arr.at(1));
  const q = (map)[\\"my_queue\\"];
  (await b1.put(\\"file1.txt\\",\\"boom\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await b2.list()).length === 0)'\`)})(((await b2.list()).length === 0))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await b1.get(\\"file1.txt\\")) === \\"boom\\")'\`)})(((await b1.get(\\"file1.txt\\")) === \\"boom\\"))};
  (await q.push(\\"hello\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(await set.has(\\"foo\\"))'\`)})((await set.has(\\"foo\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(set.size === 2)'\`)})((set.size === 2))};
} };"
`;

exports[`capture_containers_of_resources.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_12a95bb8": "\${aws_s3_bucket.root_b1_A5C8D4B7.bucket}",
            "BUCKET_NAME_fa6445bb": "\${aws_s3_bucket.root_b2_26383A0E.bucket}",
            "QUEUE_URL_31e95cbd": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.url}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_b1_A5C8D4B7": {
        "//": {
          "metadata": {
            "path": "root/Default/b1/Default",
            "uniqueId": "root_b1_A5C8D4B7",
          },
        },
        "bucket_prefix": "b1-c88fb896-",
      },
      "root_b2_26383A0E": {
        "//": {
          "metadata": {
            "path": "root/Default/b2/Default",
            "uniqueId": "root_b2_26383A0E",
          },
        },
        "bucket_prefix": "b2-c844cd88-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_b1_PublicAccessBlock_8B468FE2": {
        "//": {
          "metadata": {
            "path": "root/Default/b1/PublicAccessBlock",
            "uniqueId": "root_b1_PublicAccessBlock_8B468FE2",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_b1_A5C8D4B7.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_b2_PublicAccessBlock_665E72FF": {
        "//": {
          "metadata": {
            "path": "root/Default/b2/PublicAccessBlock",
            "uniqueId": "root_b2_PublicAccessBlock_665E72FF",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_b2_26383A0E.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_b1_Encryption_98BA3084": {
        "//": {
          "metadata": {
            "path": "root/Default/b1/Encryption",
            "uniqueId": "root_b1_Encryption_98BA3084",
          },
        },
        "bucket": "\${aws_s3_bucket.root_b1_A5C8D4B7.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_b2_Encryption_096FF85A": {
        "//": {
          "metadata": {
            "path": "root/Default/b2/Encryption",
            "uniqueId": "root_b2_Encryption_096FF85A",
          },
        },
        "bucket": "\${aws_s3_bucket.root_b2_26383A0E.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`capture_containers_of_resources.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_containers_of_resources\\", plugins: $plugins });
  
  const arr = Object.freeze([this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"b1\\"), this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"b2\\")]);
  const map = Object.freeze({\\"my_queue\\":this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\")});
  const set = Object.freeze(new Set([\\"foo\\", \\"foo\\", \\"bar\\"]));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.e204fa6fba10aa68396c0fe4d920796b1ec739609b648739fe4ae94d0621db6d/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      arr: {
        obj: arr,
        ops: []
      },
      map: {
        obj: map,
        ops: []
      },
      set: {
        obj: set,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`capture_in_binary.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(e) { const { b, x } = this; {
  (await b.put(\\"file\\",\\"foo\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await b.get(\\"file\\")) === \\"foo\\")'\`)})(((await b.get(\\"file\\")) === \\"foo\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(12 === x)'\`)})((12 === x))};
} };"
`;

exports[`capture_in_binary.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`capture_in_binary.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_in_binary\\", plugins: $plugins });
  
  const b = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const x = 12;
  const handler2 = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.d3cc1deae5ea8972097ff15c11d688f395bd17117453789488a005b829eea245/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      b: {
        obj: b,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      x: {
        obj: x,
        ops: []
      },
    }
  });
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",handler2);
}
}
new MyApp().synth();"
`;

exports[`capture_primitives.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(s) { const { my_bool, my_dur, my_num, my_second_bool, my_str } = this; {
  {console.log(my_str)};
  const n = my_num;
  {console.log(\`\${n}\`)};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(my_second_bool === false)'\`)})((my_second_bool === false))};
  if (my_bool) {
    {console.log(\\"bool=true\\")};
  } else {
    {console.log(\\"bool=false\\")};
  }
  const min = my_dur.minutes;
  const sec = my_dur.seconds;
  const hr = my_dur.hours;
  const split = (await \`min=\${min} sec=\${sec} hr=\${hr}\`.split(\\" \\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(split.length === 3)'\`)})((split.length === 3))};
} };"
`;

exports[`capture_primitives.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud-Function-c8d2eca1",
          },
        },
        "function_name": "cloud-Function-c8d2eca1",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Code_2F6A7948.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudFunction_Code_2F6A7948": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/Code",
            "uniqueId": "root_cloudFunction_Code_2F6A7948",
          },
        },
        "bucket_prefix": "code-c8d4206f-",
      },
    },
    "aws_s3_object": {
      "root_cloudFunction_S3Object_C8435368": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/S3Object",
            "uniqueId": "root_cloudFunction_S3Object_C8435368",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudFunction_Code_2F6A7948.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`capture_primitives.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_primitives\\", plugins: $plugins });
  
  const my_str = \\"hello, string\\";
  const my_num = 1234;
  const my_bool = true;
  const my_second_bool = false;
  const my_dur = $stdlib.std.Duration.fromSeconds(600);
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.275873c041545c7a2de55149fb73b77f5b75da61d16914ceadd71c3445173d97/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      my_bool: {
        obj: my_bool,
        ops: []
      },
      my_dur: {
        obj: my_dur,
        ops: []
      },
      my_num: {
        obj: my_num,
        ops: []
      },
      my_second_bool: {
        obj: my_second_bool,
        ops: []
      },
      my_str: {
        obj: my_str,
        ops: []
      },
    }
  });
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"cloud.Function\\",handler);
}
}
new MyApp().synth();"
`;

exports[`capture_resource_and_data.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(e) { const { data, queue, res } = this; {
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(data.size === 3)'\`)})((data.size === 3))};
  (await res.put(\\"file.txt\\",\\"world\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await res.get(\\"file.txt\\")) === \\"world\\")'\`)})(((await res.get(\\"file.txt\\")) === \\"world\\"))};
  (await queue.push(\\"spirulina\\"));
} };"
`;

exports[`capture_resource_and_data.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"sqs:SendMessage\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"sqs:PurgeQueue\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "QUEUE_URL_31e95cbd": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.url}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`capture_resource_and_data.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_resource_and_data\\", plugins: $plugins });
  
  const data = Object.freeze(new Set([1, 2, 3]));
  const res = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const queue = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\");
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.10149a479ee5940e90f4621a2bca78dda7429636b1f235fcd785b3e33c131537/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      data: {
        obj: data,
        ops: []
      },
      queue: {
        obj: queue,
        ops: [\\"approx_size\\",\\"purge\\",\\"push\\"]
      },
      res: {
        obj: res,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
    }
  });
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",handler);
}
}
new MyApp().synth();"
`;

exports[`capture_resource_with_no_inflight.w > wing compile --target tf-aws > A.inflight.js 1`] = `
"export class A_inflight  {
constructor({ field }) {

  this.field = field;
}
}"
`;

exports[`capture_resource_with_no_inflight.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { a } = this; {
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"hey\\" === a.field)'\`)})((\\"hey\\" === a.field))};
} };"
`;

exports[`capture_resource_with_no_inflight.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`capture_resource_with_no_inflight.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_resource_with_no_inflight\\", plugins: $plugins });
  
  class A extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.field = \\"hey\\";
  }
  }
  	
  	_toInflight() {
  	const field_client = this._lift(this.field);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/A.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).A_inflight({field: \${field_client}}))\`);
  }
  }
  
  const a = new A(this,\\"A\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.b771192b636450edefdc8f4b596a6372d5b2520efa1fcdb75c51589c12a10c59/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      a: {
        obj: a,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`captures.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(event) { const { bucket1, bucket2, bucket3 } = this; {
  (await bucket1.put(\\"file.txt\\",\\"data\\"));
  (await bucket2.get(\\"file.txt\\"));
  (await bucket2.get(\\"file2.txt\\"));
  (await bucket3.get(\\"file3.txt\\"));
  for (const stuff of (await bucket1.list())) {
    {console.log(stuff)};
  }
} };"
`;

exports[`captures.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_AnotherFunction_IamRole_09A4D8EF": {
        "//": {
          "metadata": {
            "path": "root/Default/AnotherFunction/IamRole",
            "uniqueId": "root_AnotherFunction_IamRole_09A4D8EF",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRole",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_AnotherFunction_IamRolePolicy_5B37F663": {
        "//": {
          "metadata": {
            "path": "root/Default/AnotherFunction/IamRolePolicy",
            "uniqueId": "root_AnotherFunction_IamRolePolicy_5B37F663",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_AnotherFunction_IamRole_09A4D8EF.name}",
      },
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
      "root_cloudQueueOnMessagee46e5cb7_IamRolePolicy_99F6B872": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRolePolicy",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRolePolicy_99F6B872",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"sqs:ReceiveMessage\\",\\"sqs:ChangeMessageVisibility\\",\\"sqs:GetQueueUrl\\",\\"sqs:DeleteMessage\\",\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}\\",\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}\\",\\"\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_AnotherFunction_IamRolePolicyAttachment_8AF040CB": {
        "//": {
          "metadata": {
            "path": "root/Default/AnotherFunction/IamRolePolicyAttachment",
            "uniqueId": "root_AnotherFunction_IamRolePolicyAttachment_8AF040CB",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_AnotherFunction_IamRole_09A4D8EF.name}",
      },
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
      "root_cloudQueueOnMessagee46e5cb7_IamRolePolicyAttachment_D3D5C118": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRolePolicyAttachment",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRolePolicyAttachment_D3D5C118",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.name}",
      },
    },
    "aws_lambda_event_source_mapping": {
      "root_cloudQueue_EventSourceMapping_A2041279": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue/EventSourceMapping",
            "uniqueId": "root_cloudQueue_EventSourceMapping_A2041279",
          },
        },
        "batch_size": 5,
        "event_source_arn": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}",
        "function_name": "\${aws_lambda_function.root_cloudQueueOnMessagee46e5cb7_C394DE2A.function_name}",
      },
    },
    "aws_lambda_function": {
      "root_AnotherFunction_1D5A4455": {
        "//": {
          "metadata": {
            "path": "root/Default/AnotherFunction/Default",
            "uniqueId": "root_AnotherFunction_1D5A4455",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_0c557d45": "\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.bucket}",
            "BUCKET_NAME_21bd2572": "\${aws_s3_bucket.root_PublicBucket_73AE6C59.bucket}",
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "AnotherFunction-c88d2a81",
          },
        },
        "function_name": "AnotherFunction-c88d2a81",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_AnotherFunction_IamRole_09A4D8EF.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_AnotherFunction_Code_B0183137.bucket}",
        "s3_key": "\${aws_s3_object.root_AnotherFunction_S3Object_5AD7E879.key}",
        "timeout": 30,
      },
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_0c557d45": "\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.bucket}",
            "BUCKET_NAME_21bd2572": "\${aws_s3_bucket.root_PublicBucket_73AE6C59.bucket}",
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "cloud-Function-c8d2eca1",
          },
        },
        "function_name": "cloud-Function-c8d2eca1",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Code_2F6A7948.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
        "timeout": 30,
      },
      "root_cloudQueueOnMessagee46e5cb7_C394DE2A": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/Default",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_C394DE2A",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_0c557d45": "\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.bucket}",
            "BUCKET_NAME_21bd2572": "\${aws_s3_bucket.root_PublicBucket_73AE6C59.bucket}",
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "cloud-Queue-OnMessage-e46e5cb7-c86cd0c0",
          },
        },
        "function_name": "cloud-Queue-OnMessage-e46e5cb7-c86cd0c0",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_AnotherFunction_Code_B0183137": {
        "//": {
          "metadata": {
            "path": "root/Default/AnotherFunction/Code",
            "uniqueId": "root_AnotherFunction_Code_B0183137",
          },
        },
        "bucket_prefix": "code-c8326137-",
      },
      "root_PrivateBucket_82B4DCC5": {
        "//": {
          "metadata": {
            "path": "root/Default/PrivateBucket/Default",
            "uniqueId": "root_PrivateBucket_82B4DCC5",
          },
        },
        "bucket_prefix": "privatebucket-c8a9b08c-",
      },
      "root_PublicBucket_73AE6C59": {
        "//": {
          "metadata": {
            "path": "root/Default/PublicBucket/Default",
            "uniqueId": "root_PublicBucket_73AE6C59",
          },
        },
        "bucket_prefix": "publicbucket-c8fea5d9-",
      },
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_cloudFunction_Code_2F6A7948": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/Code",
            "uniqueId": "root_cloudFunction_Code_2F6A7948",
          },
        },
        "bucket_prefix": "code-c8d4206f-",
      },
      "root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/Code",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0",
          },
        },
        "bucket_prefix": "code-c8b80a9a-",
      },
    },
    "aws_s3_bucket_policy": {
      "root_PublicBucket_PublicPolicy_98DDAE96": {
        "//": {
          "metadata": {
            "path": "root/Default/PublicBucket/PublicPolicy",
            "uniqueId": "root_PublicBucket_PublicPolicy_98DDAE96",
          },
        },
        "bucket": "\${aws_s3_bucket.root_PublicBucket_73AE6C59.bucket}",
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Principal\\":\\"*\\",\\"Action\\":[\\"s3:GetObject\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_PublicBucket_73AE6C59.arn}/*\\"]}]}",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_PrivateBucket_PublicAccessBlock_DB813250": {
        "//": {
          "metadata": {
            "path": "root/Default/PrivateBucket/PublicAccessBlock",
            "uniqueId": "root_PrivateBucket_PublicAccessBlock_DB813250",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_PrivateBucket_Encryption_F9F2144A": {
        "//": {
          "metadata": {
            "path": "root/Default/PrivateBucket/Encryption",
            "uniqueId": "root_PrivateBucket_Encryption_F9F2144A",
          },
        },
        "bucket": "\${aws_s3_bucket.root_PrivateBucket_82B4DCC5.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_PublicBucket_Encryption_FB9A8400": {
        "//": {
          "metadata": {
            "path": "root/Default/PublicBucket/Encryption",
            "uniqueId": "root_PublicBucket_Encryption_FB9A8400",
          },
        },
        "bucket": "\${aws_s3_bucket.root_PublicBucket_73AE6C59.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_AnotherFunction_S3Object_5AD7E879": {
        "//": {
          "metadata": {
            "path": "root/Default/AnotherFunction/S3Object",
            "uniqueId": "root_AnotherFunction_S3Object_5AD7E879",
          },
        },
        "bucket": "\${aws_s3_bucket.root_AnotherFunction_Code_B0183137.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`captures.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"captures\\", plugins: $plugins });
  
  const bucket1 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const bucket2 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"PublicBucket\\",{
  \\"public\\": true,}
  );
  const bucket3 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"PrivateBucket\\",{ public: false });
  const queue = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\");
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.5f0e4e25898a72c973f063e92444f7572d58a18cdd38b3fb3a575af6adf7440f/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      bucket1: {
        obj: bucket1,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      bucket2: {
        obj: bucket2,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      bucket3: {
        obj: bucket3,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
    }
  });
  (queue.onMessage(handler,{ batchSize: 5 }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"cloud.Function\\",handler,{ env: Object.freeze({}) });
  const empty_env = Object.freeze({});
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"AnotherFunction\\",handler,{ env: empty_env });
}
}
new MyApp().synth();"
`;

exports[`container_types.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_s3_bucket": {
      "root_bucket1_3A77B9B4": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket1/Default",
            "uniqueId": "root_bucket1_3A77B9B4",
          },
        },
        "bucket_prefix": "bucket1-c81ed215-",
      },
      "root_bucket2_E39F70EE": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket2/Default",
            "uniqueId": "root_bucket2_E39F70EE",
          },
        },
        "bucket_prefix": "bucket2-c83a0be6-",
      },
      "root_bucket3_A0C568EA": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket3/Default",
            "uniqueId": "root_bucket3_A0C568EA",
          },
        },
        "bucket_prefix": "bucket3-c8b6c706-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_bucket1_PublicAccessBlock_6C5071C0": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket1/PublicAccessBlock",
            "uniqueId": "root_bucket1_PublicAccessBlock_6C5071C0",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket2_PublicAccessBlock_BC328E84": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket2/PublicAccessBlock",
            "uniqueId": "root_bucket2_PublicAccessBlock_BC328E84",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket3_PublicAccessBlock_CF2593D4": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket3/PublicAccessBlock",
            "uniqueId": "root_bucket3_PublicAccessBlock_CF2593D4",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_bucket1_Encryption_33CABC1A": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket1/Encryption",
            "uniqueId": "root_bucket1_Encryption_33CABC1A",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket2_Encryption_A83E82F9": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket2/Encryption",
            "uniqueId": "root_bucket2_Encryption_A83E82F9",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket3_Encryption_A2A51E22": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket3/Encryption",
            "uniqueId": "root_bucket3_Encryption_A2A51E22",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`container_types.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"container_types\\", plugins: $plugins });
  
  const bucket1 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"bucket1\\");
  const bucket2 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"bucket2\\");
  const bucket3 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"bucket3\\");
  const empty_array = Object.freeze([]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(empty_array.length === 0)'\`)})((empty_array.length === 0))};
  const empty_array2 = [];
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(empty_array2.length === 0)'\`)})((empty_array2.length === 0))};
  const arr1 = Object.freeze([1, 2, 3]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr1.length === 3)'\`)})((arr1.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr1.at(1)) === 2)'\`)})(((arr1.at(1)) === 2))};
  const arr2 = Object.freeze([\\"1\\", \\"2\\", \\"3\\"]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr2.length === 3)'\`)})((arr2.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr2.at(1)) === \\"2\\")'\`)})(((arr2.at(1)) === \\"2\\"))};
  const arr3 = Object.freeze([1, 2, 3]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr3.length === 3)'\`)})((arr3.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr3.at(1)) === 2)'\`)})(((arr3.at(1)) === 2))};
  const arr4 = Object.freeze([1, 2, 3]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr4.length === 3)'\`)})((arr4.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr4.at(1)) === 2)'\`)})(((arr4.at(1)) === 2))};
  const arr5 = Object.freeze([bucket1, bucket2, bucket3]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr5.length === 3)'\`)})((arr5.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr5.at(1)) === bucket2)'\`)})(((arr5.at(1)) === bucket2))};
  const arr6 = Object.freeze([bucket1, bucket2, bucket3]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr6.length === 3)'\`)})((arr6.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr6.at(1)) === bucket2)'\`)})(((arr6.at(1)) === bucket2))};
  const arr7 = arr4;
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr7.length === 3)'\`)})((arr7.length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr7.at(1)) === 2)'\`)})(((arr7.at(1)) === 2))};
  const empty_map = Object.freeze({});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(empty_map).length === 0)'\`)})((Object.keys(empty_map).length === 0))};
  const empty_map2 = {};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(empty_map2).length === 0)'\`)})((Object.keys(empty_map2).length === 0))};
  const m1 = Object.freeze({\\"a\\":1,\\"b\\":2,\\"c\\":3});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m1).length === 3)'\`)})((Object.keys(m1).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m1)[\\"b\\"] === 2)'\`)})(((m1)[\\"b\\"] === 2))};
  const m2 = Object.freeze({\\"a\\":1,\\"b\\":2,\\"c\\":3});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m2).length === 3)'\`)})((Object.keys(m2).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m2)[\\"b\\"] === 2)'\`)})(((m2)[\\"b\\"] === 2))};
  const m3 = Object.freeze({\\"a\\":1,\\"b\\":2,\\"c\\":3});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m3).length === 3)'\`)})((Object.keys(m3).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m3)[\\"b\\"] === 2)'\`)})(((m3)[\\"b\\"] === 2))};
  const m4 = Object.freeze({\\"a\\":1,\\"b\\":2,\\"c\\":3});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m4).length === 3)'\`)})((Object.keys(m4).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m4)[\\"b\\"] === 2)'\`)})(((m4)[\\"b\\"] === 2))};
  const m5 = Object.freeze({\\"a\\":bucket1,\\"b\\":bucket2,\\"c\\":bucket3});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m5).length === 3)'\`)})((Object.keys(m5).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m5)[\\"b\\"] === bucket2)'\`)})(((m5)[\\"b\\"] === bucket2))};
  const m6 = Object.freeze({\\"a\\":bucket1,\\"b\\":bucket2,\\"c\\":bucket3});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m6).length === 3)'\`)})((Object.keys(m6).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m6)[\\"b\\"] === bucket2)'\`)})(((m6)[\\"b\\"] === bucket2))};
  const m7 = m1;
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m7).length === 3)'\`)})((Object.keys(m7).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m7)[\\"b\\"] === 2)'\`)})(((m7)[\\"b\\"] === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"b\\" in (m7))'\`)})((\\"b\\" in (m7)))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((\\"boom\\" in (m4)) === false)'\`)})(((\\"boom\\" in (m4)) === false))};
  const empty_set = Object.freeze(new Set([]));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(empty_set.size === 0)'\`)})((empty_set.size === 0))};
  const empty_set2 = new Set([]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(empty_set2.size === 0)'\`)})((empty_set2.size === 0))};
  const s2 = Object.freeze(new Set([1, 2, 3]));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s2.size === 3)'\`)})((s2.size === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s2.has(1))'\`)})((s2.has(1)))};
  const s3 = Object.freeze(new Set([1, 2, 3]));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s3.size === 3)'\`)})((s3.size === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s3.has(1))'\`)})((s3.has(1)))};
  const s4 = Object.freeze(new Set([1, 2, 3]));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s4.size === 3)'\`)})((s4.size === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s4.has(1))'\`)})((s4.has(1)))};
  const s6 = Object.freeze(new Set([bucket1, bucket2, bucket3]));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s6.size === 3)'\`)})((s6.size === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s6.has(bucket2))'\`)})((s6.has(bucket2)))};
  const s7 = s2;
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s7.size === 3)'\`)})((s7.size === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s7.has(1))'\`)})((s7.has(1)))};
}
}
new MyApp().synth();"
`;

exports[`enums.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`enums.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"enums\\", plugins: $plugins });
  
  const SomeEnum = Object.freeze((function (SomeEnum) {
    SomeEnum[SomeEnum[\\"ONE\\"] = 0] = \\"ONE\\";
    SomeEnum[SomeEnum[\\"TWO\\"] = 1] = \\"TWO\\";
    SomeEnum[SomeEnum[\\"THREE\\"] = 2] = \\"THREE\\";
    return SomeEnum;
  })({}));
  const one = SomeEnum.ONE;
  const two = SomeEnum.TWO;
}
}
new MyApp().synth();"
`;

exports[`expressions_binary_operators.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`expressions_binary_operators.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"expressions_binary_operators\\", plugins: $plugins });
  
  const x = (-1);
  const y = (2 * x);
  const z = ((x + y) - 1);
  const xyz = (((y * y) / (x * x)) * z);
  const xf = 1;
  const yf = ((-20.22) * xf);
  const zf = ((xf + yf) - (-0.01));
  const fxzy = (5 ** (2 ** 3));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(fxzy === 390625)'\`)})((fxzy === 390625))};
  const xyzf = Math.trunc(501 / (99 + 1));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(xyzf === 5)'\`)})((xyzf === 5))};
  const xyznf = Math.trunc((-501) / (99 + 1));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(xyznf === (-5))'\`)})((xyznf === (-5)))};
  const xyznfj = Math.trunc(501.9 / ((-99.1) - 0.91));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(xyznfj === (-5))'\`)})((xyznfj === (-5)))};
  const xynfj = Math.trunc((-501.9) / ((-99.1) - 0.91));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(xynfj === 5)'\`)})((xynfj === 5))};
}
}
new MyApp().synth();"
`;

exports[`expressions_string_interpolation.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`expressions_string_interpolation.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"expressions_string_interpolation\\", plugins: $plugins });
  
  const regular_string = \\"str\\\\n\\\\\\"\\";
  const empty_string = \\"\\";
  const number = 1;
  const cool_string = \`cool \\\\\\"\\\\\${\${regular_string}}\\\\\\" test\`;
  const really_cool_string = \`\${number}\${empty_string}\\\\n\${cool_string}\\\\n\\\\\${empty_string}\${\\"string-in-string\\"}!\`;
  const begining_with_cool_strings = \`\${regular_string} \${number} <- cool\`;
  const ending_with_cool_strings = \`cool -> \${regular_string} \${number}\`;
}
}
new MyApp().synth();"
`;

exports[`file_counter.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(body) { const { bucket, counter } = this; {
  const next = (await counter.inc());
  const key = \`myfile-\${\\"hi\\"}.txt\`;
  (await bucket.put(key,body));
} };"
`;

exports[`file_counter.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_dynamodb_table": {
      "root_cloudCounter_E0AC1263": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Counter/Default",
            "uniqueId": "root_cloudCounter_E0AC1263",
          },
        },
        "attribute": [
          {
            "name": "id",
            "type": "S",
          },
        ],
        "billing_mode": "PAY_PER_REQUEST",
        "hash_key": "id",
        "name": "wing-counter-cloud.Counter-c866f225",
      },
    },
    "aws_iam_role": {
      "root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRole",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudQueueOnMessagee46e5cb7_IamRolePolicy_99F6B872": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRolePolicy",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRolePolicy_99F6B872",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"sqs:ReceiveMessage\\",\\"sqs:ChangeMessageVisibility\\",\\"sqs:GetQueueUrl\\",\\"sqs:DeleteMessage\\",\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"dynamodb:UpdateItem\\"],\\"Resource\\":\\"\${aws_dynamodb_table.root_cloudCounter_E0AC1263.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"dynamodb:GetItem\\"],\\"Resource\\":\\"\${aws_dynamodb_table.root_cloudCounter_E0AC1263.arn}\\",\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudQueueOnMessagee46e5cb7_IamRolePolicyAttachment_D3D5C118": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRolePolicyAttachment",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRolePolicyAttachment_D3D5C118",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.name}",
      },
    },
    "aws_lambda_event_source_mapping": {
      "root_cloudQueue_EventSourceMapping_A2041279": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue/EventSourceMapping",
            "uniqueId": "root_cloudQueue_EventSourceMapping_A2041279",
          },
        },
        "batch_size": 1,
        "event_source_arn": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}",
        "function_name": "\${aws_lambda_function.root_cloudQueueOnMessagee46e5cb7_C394DE2A.function_name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudQueueOnMessagee46e5cb7_C394DE2A": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/Default",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_C394DE2A",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "DYNAMODB_TABLE_NAME_49baa65c": "\${aws_dynamodb_table.root_cloudCounter_E0AC1263.name}",
            "WING_FUNCTION_NAME": "cloud-Queue-OnMessage-e46e5cb7-c86cd0c0",
          },
        },
        "function_name": "cloud-Queue-OnMessage-e46e5cb7-c86cd0c0",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/Code",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0",
          },
        },
        "bucket_prefix": "code-c8b80a9a-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/S3Object",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`file_counter.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"file_counter\\", plugins: $plugins });
  
  const bucket = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const counter = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Counter\\",this,\\"cloud.Counter\\",{ initial: 100 });
  const queue = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\",{ timeout: $stdlib.std.Duration.fromSeconds(10) });
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.1ece6a476239c44d64d8b687b9e4389715198c49564defb8766e8b85b0f54620/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      bucket: {
        obj: bucket,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      counter: {
        obj: counter,
        ops: [\\"dec\\",\\"inc\\",\\"peek\\",\\"reset\\"]
      },
    }
  });
  (queue.onMessage(handler));
}
}
new MyApp().synth();"
`;

exports[`for_loop.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`for_loop.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"for_loop\\", plugins: $plugins });
  
  const words = Object.freeze([\\"wing\\", \\"lang\\", \\"dang\\"]);
  const unique_numbers = Object.freeze(new Set([1, 2, 3]));
  for (const word of words) {
    for (const number of unique_numbers) {
      {((cond) => {if (!cond) throw new Error(\`assertion failed: '(number > 0)'\`)})((number > 0))};
      {console.log(\`\${word}: \${number}\`)};
    }
  }
}
}
new MyApp().synth();"
`;

exports[`forward_decl.w > wing compile --target tf-aws > R.inflight.js 1`] = `
"export class R_inflight  {
constructor({ f }) {

  this.f = f;
}
}"
`;

exports[`forward_decl.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`forward_decl.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"forward_decl\\", plugins: $plugins });
  
  class R extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
  }
  }
  	 method2()  {
  	{
    (this.method1());
    {console.log(\`\${this.f}\`)};
    (this.method2());
  }
  }
   method1()  {
  	{
  }
  }
  	_toInflight() {
  	const f_client = this._lift(this.f);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/R.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).R_inflight({f: \${f_client}}))\`);
  }
  }
  
  const x = \\"hi\\";
  if (true) {
    {console.log(\`\${x}\`)};
    const y = new R(this,\\"R\\");
  }
}
}
new MyApp().synth();"
`;

exports[`hello.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(message) { const { bucket } = this; {
  (await bucket.put(\\"wing.txt\\",\`Hello, \${message}\`));
} };"
`;

exports[`hello.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRole",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudQueueOnMessagee46e5cb7_IamRolePolicy_99F6B872": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRolePolicy",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRolePolicy_99F6B872",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"sqs:ReceiveMessage\\",\\"sqs:ChangeMessageVisibility\\",\\"sqs:GetQueueUrl\\",\\"sqs:DeleteMessage\\",\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudQueueOnMessagee46e5cb7_IamRolePolicyAttachment_D3D5C118": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/IamRolePolicyAttachment",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_IamRolePolicyAttachment_D3D5C118",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.name}",
      },
    },
    "aws_lambda_event_source_mapping": {
      "root_cloudQueue_EventSourceMapping_A2041279": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue/EventSourceMapping",
            "uniqueId": "root_cloudQueue_EventSourceMapping_A2041279",
          },
        },
        "batch_size": 1,
        "event_source_arn": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}",
        "function_name": "\${aws_lambda_function.root_cloudQueueOnMessagee46e5cb7_C394DE2A.function_name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudQueueOnMessagee46e5cb7_C394DE2A": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/Default",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_C394DE2A",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "cloud-Queue-OnMessage-e46e5cb7-c86cd0c0",
          },
        },
        "function_name": "cloud-Queue-OnMessage-e46e5cb7-c86cd0c0",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudQueueOnMessagee46e5cb7_IamRole_D8F85094.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/Code",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0",
          },
        },
        "bucket_prefix": "code-c8b80a9a-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-e46e5cb7/S3Object",
            "uniqueId": "root_cloudQueueOnMessagee46e5cb7_S3Object_E583CB6B",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagee46e5cb7_Code_A7B6C6A0.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`hello.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"hello\\", plugins: $plugins });
  
  const bucket = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const queue = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\");
  (queue.onMessage(new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.211d46e8ec3b5ce3e93872fcb29755356fb3566f5016eae5fcd6ec0f670ab580/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      bucket: {
        obj: bucket,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
    }
  })));
}
}
new MyApp().synth();"
`;

exports[`identical_inflights.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const {  } = this; {
} };"
`;

exports[`identical_inflights.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`identical_inflights.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"identical_inflights\\", plugins: $plugins });
  
  const x = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.8eb95bcbc154530931e15fc418c8b1fe991095671409552099ea1aa596999ede/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  });
  const y = new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.8eb95bcbc154530931e15fc418c8b1fe991095671409552099ea1aa596999ede/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  });
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_external.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ b, n }) {

  this.b = b;
  this.n = n;
}
async  test()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await this.b.list()).length === 0)'\`)})(((await this.b.list()).length === 0))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.n === 12)'\`)})((this.n === 12))};
}
}}"
`;

exports[`inflight_ref_external.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_external.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_external.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_external\\", plugins: $plugins });
  
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, b, n) {
  	super(scope, id);
  {
    this.b = b;
    this.n = n;
  }
  }
  	
  	_toInflight() {
  	const b_client = this._lift(this.b);
  const n_client = this._lift(this.n);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({b: \${b_client}, n: \${n_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.b\\": { ops: [\\"list\\"] },\\"this.n\\": { ops: [] }});
  const my = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const f = new Test(this,\\"Test\\",my,12);
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_inflight_field.w > wing compile --target tf-aws > Foo.inflight.js 1`] = `
"export class Foo_inflight  {
constructor({  }) {


}
async  set_field(v)  {
	{
  this.inflight_field = (v * 10);
}
}
async  get_field()  {
	{
  return this.inflight_field;
}
}}"
`;

exports[`inflight_ref_inflight_field.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.set_field(123));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await f.get_field()) === 1230)'\`)})(((await f.get_field()) === 1230))};
} };"
`;

exports[`inflight_ref_inflight_field.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_inflight_field.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_inflight_field\\", plugins: $plugins });
  
  class Foo extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
  }
  }
  	
  	_toInflight() {
  	
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Foo.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Foo_inflight({}))\`);
  }
  }
  Foo._annotateInflight(\\"set_field\\", {});
  Foo._annotateInflight(\\"get_field\\", {});
  const f = new Foo(this,\\"Foo\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.ef866f1d1f55245bd0673c32e84f0500ca60a72f43baa3d446a83445a7f65861/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"get_field\\",\\"set_field\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_primitive.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ my_arr, my_num, my_str }) {

  this.my_arr = my_arr;
  this.my_num = my_num;
  this.my_str = my_str;
}
async  test()  {
	{
  const y = (this.my_num + 456);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(y === 579)'\`)})((y === 579))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.my_str === \\"hello\\")'\`)})((this.my_str === \\"hello\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await this.my_arr.at(1)) === \\"bing\\")'\`)})(((await this.my_arr.at(1)) === \\"bing\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.my_arr.length === 2)'\`)})((this.my_arr.length === 2))};
}
}}"
`;

exports[`inflight_ref_primitive.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_primitive.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_primitive.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_primitive\\", plugins: $plugins });
  
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.my_str = \\"hello\\";
    this.my_num = 123;
    this.my_arr = Object.freeze([\\"bang\\", \\"bing\\"]);
  }
  }
  	
  	_toInflight() {
  	const my_arr_client = this._lift(this.my_arr);
  const my_num_client = this._lift(this.my_num);
  const my_str_client = this._lift(this.my_str);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({my_arr: \${my_arr_client}, my_num: \${my_num_client}, my_str: \${my_str_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.my_arr\\": { ops: [\\"at\\",\\"length\\"] },\\"this.my_num\\": { ops: [] },\\"this.my_str\\": { ops: [] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_resource.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ b }) {

  this.b = b;
}
async  test()  {
	{
  (await this.b.put(\\"hello\\",\\"world\\"));
}
}}"
`;

exports[`inflight_ref_resource.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_resource.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_Test_cloudBucket_8208F150.arn}\\",\\"\${aws_s3_bucket.root_Test_cloudBucket_8208F150.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_7f08500e": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_Test_cloudBucket_8208F150": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/Default",
            "uniqueId": "root_Test_cloudBucket_8208F150",
          },
        },
        "bucket_prefix": "cloud-bucket-c88130da-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_Test_cloudBucket_PublicAccessBlock_94819ECF": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_Test_cloudBucket_PublicAccessBlock_94819ECF",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_Test_cloudBucket_Encryption_CC613733": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/Encryption",
            "uniqueId": "root_Test_cloudBucket_Encryption_CC613733",
          },
        },
        "bucket": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_resource.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_resource\\", plugins: $plugins });
  
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.b = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  }
  }
  	
  	_toInflight() {
  	const b_client = this._lift(this.b);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({b: \${b_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.b\\": { ops: [\\"put\\"] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_resource_collection.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ array }) {

  this.array = array;
}
async  test()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await (await this.array.at(0)).list()).length === 0)'\`)})(((await (await this.array.at(0)).list()).length === 0))};
}
}}"
`;

exports[`inflight_ref_resource_collection.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_resource_collection.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_7f08500e": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_Test_cloudBucket_8208F150": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/Default",
            "uniqueId": "root_Test_cloudBucket_8208F150",
          },
        },
        "bucket_prefix": "cloud-bucket-c88130da-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_Test_cloudBucket_PublicAccessBlock_94819ECF": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_Test_cloudBucket_PublicAccessBlock_94819ECF",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_Test_cloudBucket_Encryption_CC613733": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/Encryption",
            "uniqueId": "root_Test_cloudBucket_Encryption_CC613733",
          },
        },
        "bucket": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_resource_collection.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_resource_collection\\", plugins: $plugins });
  
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.array = Object.freeze([this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\")]);
  }
  }
  	
  	_toInflight() {
  	const array_client = this._lift(this.array);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({array: \${array_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.array\\": { ops: [\\"at\\"] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_resource_field.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ my_field }) {

  this.my_field = my_field;
}
async  test()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.my_field === \\"hello\\")'\`)})((this.my_field === \\"hello\\"))};
}
}}"
`;

exports[`inflight_ref_resource_field.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_resource_field.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_resource_field.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_resource_field\\", plugins: $plugins });
  
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.my_field = \\"hello\\";
  }
  }
  	
  	_toInflight() {
  	const my_field_client = this._lift(this.my_field);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({my_field: \${my_field_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.my_field\\": { ops: [] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_resource_sub_method.w > wing compile --target tf-aws > Another.inflight.js 1`] = `
"export class Another_inflight  {
constructor({ my_queue }) {

  this.my_queue = my_queue;
}
async  inflight_returns_resource()  {
	{
  return this.my_queue;
}
}}"
`;

exports[`inflight_ref_resource_sub_method.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ another }) {

  this.another = another;
}
async  test()  {
	{
  const q = (await this.another.inflight_returns_resource());
  (await q.push(\\"push!\\"));
}
}}"
`;

exports[`inflight_ref_resource_sub_method.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_resource_sub_method.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "QUEUE_URL_de2218c1": "\${aws_sqs_queue.root_Test_Another_cloudQueue_02574A51.url}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_resource_sub_method.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_resource_sub_method\\", plugins: $plugins });
  
  class Another extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.my_queue = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\");
  }
  }
  	
  	_toInflight() {
  	const my_queue_client = this._lift(this.my_queue);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Another.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Another_inflight({my_queue: \${my_queue_client}}))\`);
  }
  }
  Another._annotateInflight(\\"inflight_returns_resource\\", {\\"this.my_queue\\": { ops: [] }});
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.another = new Another(this,\\"Another\\");
  }
  }
  	
  	_toInflight() {
  	const another_client = this._lift(this.another);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({another: \${another_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.another\\": { ops: [\\"inflight_returns_resource\\"] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_resource_userdefined.w > wing compile --target tf-aws > Another.inflight.js 1`] = `
"export class Another_inflight  {
constructor({  }) {


}
async  func()  {
	{
  return \\"hello\\";
}
}}"
`;

exports[`inflight_ref_resource_userdefined.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ another }) {

  this.another = another;
}
async  test()  {
	{
  const res = (await this.another.func());
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(res === \\"hello\\")'\`)})((res === \\"hello\\"))};
}
}}"
`;

exports[`inflight_ref_resource_userdefined.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_resource_userdefined.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_resource_userdefined.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_resource_userdefined\\", plugins: $plugins });
  
  class Another extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
  }
  }
  	
  	_toInflight() {
  	
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Another.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Another_inflight({}))\`);
  }
  }
  Another._annotateInflight(\\"func\\", {});
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.another = new Another(this,\\"Another\\");
  }
  }
  	
  	_toInflight() {
  	const another_client = this._lift(this.another);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({another: \${another_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.another\\": { ops: [\\"func\\"] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`inflight_ref_unknown_op.w > wing compile --target tf-aws > Test.inflight.js 1`] = `
"export class Test_inflight  {
constructor({ b }) {

  this.b = b;
}
async  test()  {
	{
  const x = this.b;
  (await x.put(\\"hello\\",\\"world\\"));
}
}}"
`;

exports[`inflight_ref_unknown_op.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { f } = this; {
  (await f.test());
} };"
`;

exports[`inflight_ref_unknown_op.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_7f08500e": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_Test_cloudBucket_8208F150": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/Default",
            "uniqueId": "root_Test_cloudBucket_8208F150",
          },
        },
        "bucket_prefix": "cloud-bucket-c88130da-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_Test_cloudBucket_PublicAccessBlock_94819ECF": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_Test_cloudBucket_PublicAccessBlock_94819ECF",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_Test_cloudBucket_Encryption_CC613733": {
        "//": {
          "metadata": {
            "path": "root/Default/Test/cloud.Bucket/Encryption",
            "uniqueId": "root_Test_cloudBucket_Encryption_CC613733",
          },
        },
        "bucket": "\${aws_s3_bucket.root_Test_cloudBucket_8208F150.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`inflight_ref_unknown_op.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"inflight_ref_unknown_op\\", plugins: $plugins });
  
  class Test extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.b = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  }
  }
  	
  	_toInflight() {
  	const b_client = this._lift(this.b);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Test.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Test_inflight({b: \${b_client}}))\`);
  }
  }
  Test._annotateInflight(\\"test\\", {\\"this.b\\": { ops: [] }});
  const f = new Test(this,\\"Test\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.80a17b6f758da66f2a7690bf5a9478936a9921da3421819b7a8bf7e1cfde82ed/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      f: {
        obj: f,
        ops: [\\"test\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`json.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`json.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"json\\", plugins: $plugins });
  
  const json_number = 123;
  const json_bool = true;
  const json_array = [1, 2, 3];
  const json_obj = Object.freeze({\\"boom\\":123});
  const json_mut_obj = {\\"boom boom\\":{\\"hello\\":1233},\\"hello\\":123,\\"world\\":[1, \\"cat\\", 3]};
  const message = \\"Coolness\\";
  ((obj, args) => { obj[args[0]] = args[1]; })(json_mut_obj, [\\"hello\\",message]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((json_mut_obj)[\\"hello\\"] === message)'\`)})(((json_mut_obj)[\\"hello\\"] === message))};
  const some_number = 999;
  const some_json = {\\"x\\":some_number};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((some_json)[\\"x\\"] === some_number)'\`)})(((some_json)[\\"x\\"] === some_number))};
  ((obj, args) => { obj[args[0]] = args[1]; })(some_json, [\\"x\\",111]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((some_json)[\\"x\\"] === 111)'\`)})(((some_json)[\\"x\\"] === 111))};
  const x = Object.freeze({\\"cool\\":\\"beans\\"});
  const nested_json = {\\"a\\":\\"hello\\",\\"b\\":{\\"c\\":\\"world\\",\\"d\\":{\\"bar\\":123,\\"foo\\":\\"foo\\"}}};
  ((obj, args) => { obj[args[0]] = args[1]; })(((nested_json)[\\"b\\"])[\\"d\\"], [\\"foo\\",\\"tastic\\"]);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((((nested_json)[\\"b\\"])[\\"d\\"])[\\"foo\\"] === \\"tastic\\")'\`)})(((((nested_json)[\\"b\\"])[\\"d\\"])[\\"foo\\"] === \\"tastic\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((((nested_json)[\\"b\\"])[\\"d\\"])[\\"bar\\"] === 123)'\`)})(((((nested_json)[\\"b\\"])[\\"d\\"])[\\"bar\\"] === 123))};
  const arr = [1, 2, \\"buckle\\", \\"my\\", \\"shoe\\", 3, 4, [\\"shut\\", \\"the\\", \\"door\\"]];
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr)[0] === 1)'\`)})(((arr)[0] === 1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr)[2] === \\"buckle\\")'\`)})(((arr)[2] === \\"buckle\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(((arr)[7])[0] === \\"shut\\")'\`)})((((arr)[7])[0] === \\"shut\\"))};
}
}
new MyApp().synth();"
`;

exports[`json_bucket.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(msg) { const { b, file_name } = this; {
  const x = (await b.getJson(file_name));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(((((x)[\\"persons\\"])[0])[\\"fears\\"])[1] === \\"failure\\")'\`)})((((((x)[\\"persons\\"])[0])[\\"fears\\"])[1] === \\"failure\\"))};
} };"
`;

exports[`json_bucket.w > wing compile --target tf-aws > index.js 2`] = `
"async handle(msg) { const { b, file_name, get_json, j } = this; {
  (await b.putJson(file_name,j));
  (await get_json.invoke(msg));
} };"
`;

exports[`json_bucket.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testput_IamRole_1BBF32A6": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/IamRole",
            "uniqueId": "root_testput_IamRole_1BBF32A6",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
      "root_testput_IamRolePolicy_98659F09": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/IamRolePolicy",
            "uniqueId": "root_testput_IamRolePolicy_98659F09",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"lambda:InvokeFunction\\"],\\"Resource\\":[\\"\${aws_lambda_function.root_cloudFunction_6A57BA0A.arn}\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testput_IamRole_1BBF32A6.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
      "root_testput_IamRolePolicyAttachment_E73FB6BB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/IamRolePolicyAttachment",
            "uniqueId": "root_testput_IamRolePolicyAttachment_E73FB6BB",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testput_IamRole_1BBF32A6.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "cloud-Function-c8d2eca1",
          },
        },
        "function_name": "cloud-Function-c8d2eca1",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Code_2F6A7948.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
        "timeout": 30,
      },
      "root_testput_449428F9": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/Default",
            "uniqueId": "root_testput_449428F9",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "FUNCTION_NAME_5bb84dfa": "\${aws_lambda_function.root_cloudFunction_6A57BA0A.arn}",
            "WING_FUNCTION_NAME": "test-put-c899ce9b",
          },
        },
        "function_name": "test-put-c899ce9b",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testput_IamRole_1BBF32A6.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testput_Code_DE7653AD.bucket}",
        "s3_key": "\${aws_s3_object.root_testput_S3Object_30BF1DDD.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_cloudFunction_Code_2F6A7948": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/Code",
            "uniqueId": "root_cloudFunction_Code_2F6A7948",
          },
        },
        "bucket_prefix": "code-c8d4206f-",
      },
      "root_testput_Code_DE7653AD": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/Code",
            "uniqueId": "root_testput_Code_DE7653AD",
          },
        },
        "bucket_prefix": "code-c8ab7128-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_cloudFunction_S3Object_C8435368": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Function/S3Object",
            "uniqueId": "root_cloudFunction_S3Object_C8435368",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudFunction_Code_2F6A7948.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`json_bucket.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"json_bucket\\", plugins: $plugins });
  
  const b = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const file_name = \\"file.json\\";
  const j = Object.freeze({\\"persons\\":[{\\"age\\":30,\\"fears\\":[\\"heights\\", \\"failure\\"],\\"name\\":\\"hasan\\"}]});
  const get_json = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"cloud.Function\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.1dabd42192b8d28a57f44a84b644a18eb6fedb868257af123181c0ecec2c2a70/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      b: {
        obj: b,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      file_name: {
        obj: file_name,
        ops: []
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:put\\",new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.742d4f24b17fb7f7f831acbd15487b30d36ad90d44229b79672a09f910cb6619/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      b: {
        obj: b,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      file_name: {
        obj: file_name,
        ops: []
      },
      get_json: {
        obj: get_json,
        ops: [\\"invoke\\"]
      },
      j: {
        obj: j,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`mut_container_types.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_s3_bucket": {
      "root_bucket1_3A77B9B4": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket1/Default",
            "uniqueId": "root_bucket1_3A77B9B4",
          },
        },
        "bucket_prefix": "bucket1-c81ed215-",
      },
      "root_bucket2_E39F70EE": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket2/Default",
            "uniqueId": "root_bucket2_E39F70EE",
          },
        },
        "bucket_prefix": "bucket2-c83a0be6-",
      },
      "root_bucket3_A0C568EA": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket3/Default",
            "uniqueId": "root_bucket3_A0C568EA",
          },
        },
        "bucket_prefix": "bucket3-c8b6c706-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_bucket1_PublicAccessBlock_6C5071C0": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket1/PublicAccessBlock",
            "uniqueId": "root_bucket1_PublicAccessBlock_6C5071C0",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket2_PublicAccessBlock_BC328E84": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket2/PublicAccessBlock",
            "uniqueId": "root_bucket2_PublicAccessBlock_BC328E84",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket3_PublicAccessBlock_CF2593D4": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket3/PublicAccessBlock",
            "uniqueId": "root_bucket3_PublicAccessBlock_CF2593D4",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_bucket1_Encryption_33CABC1A": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket1/Encryption",
            "uniqueId": "root_bucket1_Encryption_33CABC1A",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket2_Encryption_A83E82F9": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket2/Encryption",
            "uniqueId": "root_bucket2_Encryption_A83E82F9",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket3_Encryption_A2A51E22": {
        "//": {
          "metadata": {
            "path": "root/Default/bucket3/Encryption",
            "uniqueId": "root_bucket3_Encryption_A2A51E22",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`mut_container_types.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"mut_container_types\\", plugins: $plugins });
  
  const bucket1 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"bucket1\\");
  const bucket2 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"bucket2\\");
  const bucket3 = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"bucket3\\");
  const arr1 = [\\"a\\", \\"b\\", \\"c\\"];
  const arr2 = [1, 2, 3];
  const arr3 = [bucket1, bucket2];
  const arr4 = arr1;
  (arr1.push(\\"a\\"));
  (arr2.push(4));
  (arr3.push(bucket3));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr2.pop()) === 4)'\`)})(((arr2.pop()) === 4))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(arr1.length === 4)'\`)})((arr1.length === 4))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((arr4.at(0)) === \\"a\\")'\`)})(((arr4.at(0)) === \\"a\\"))};
  const s1 = new Set([1, 2, 3, 3]);
  const s2 = new Set([\\"hello\\", \\"world\\", \\"hello\\"]);
  const s3 = new Set([bucket1, bucket2, bucket2]);
  (s1.add(5));
  (s2.add(\\"bye\\"));
  (s3.add(bucket3));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s2.has(\\"bye\\"))'\`)})((s2.has(\\"bye\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s2.has(\\"hello\\"))'\`)})((s2.has(\\"hello\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s3.has(bucket2))'\`)})((s3.has(bucket2)))};
  const m1 = {\\"hello\\":\\"world\\"};
  const m2 = {\\"hello\\":123};
  const m3 = {\\"b1\\":bucket1,\\"b2\\":bucket2};
  const m4 = m1;
  const m5 = {\\"goodbye\\":\\"world\\"};
  const m6 = {\\"a\\":m1,\\"b\\":m5};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"hello\\" in (m1))'\`)})((\\"hello\\" in (m1)))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m2).length === 1)'\`)})((Object.keys(m2).length === 1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m3)[\\"b1\\"] === bucket1)'\`)})(((m3)[\\"b1\\"] === bucket1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m4).length === 1)'\`)})((Object.keys(m4).length === 1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(((m6)[\\"a\\"])[\\"hello\\"] === \\"world\\")'\`)})((((m6)[\\"a\\"])[\\"hello\\"] === \\"world\\"))};
  ((obj, args) => { obj[args[0]] = args[1]; })(m1, [\\"hello\\",\\"goodbye\\"]);
  ((obj, args) => { obj[args[0]] = args[1]; })(m6, [\\"a\\",{\\"foo\\":\\"bar\\"}]);
  ((map) => { for(const k in map){delete map[k]}; })(m2);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(m2).length === 0)'\`)})((Object.keys(m2).length === 0))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((m1)[\\"hello\\"] === \\"goodbye\\")'\`)})(((m1)[\\"hello\\"] === \\"goodbye\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(((m6)[\\"a\\"])[\\"foo\\"] === \\"bar\\")'\`)})((((m6)[\\"a\\"])[\\"foo\\"] === \\"bar\\"))};
}
}
new MyApp().synth();"
`;

exports[`primitive_methods.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`primitive_methods.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"primitive_methods\\", plugins: $plugins });
  
  const dur = $stdlib.std.Duration.fromSeconds(60);
  const dur2 = $stdlib.std.Duration.fromSeconds(600);
  const f =  (d) =>  {
  	{
  }
  };
  const stringy = \`\${dur.minutes}:\${dur.seconds}\`;
  {console.log(stringy)};
  if ((stringy.includes(\\"60\\") && (((stringy.split(\\":\\")).at(0)) === \\"60\\"))) {
    {console.log(\`\${stringy.length}!\`)};
  }
}
}
new MyApp().synth();"
`;

exports[`print.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const {  } = this; {
  {console.log(\\"inflight print 2.1\\")};
  {console.log(\\"inflight print 2.2\\")};
} };"
`;

exports[`print.w > wing compile --target tf-aws > index.js 2`] = `
"async handle() { const {  } = this; {
  {console.log(\\"inflight print 1.1\\")};
  {console.log(\\"inflight print 1.2\\")};
} };"
`;

exports[`print.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_testprint1_IamRole_AC783F9C": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print1/IamRole",
            "uniqueId": "root_testprint1_IamRole_AC783F9C",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testprint2_IamRole_1A5A4191": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print2/IamRole",
            "uniqueId": "root_testprint2_IamRole_1A5A4191",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_testprint1_IamRolePolicy_806AD6C3": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print1/IamRolePolicy",
            "uniqueId": "root_testprint1_IamRolePolicy_806AD6C3",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_testprint1_IamRole_AC783F9C.name}",
      },
      "root_testprint2_IamRolePolicy_D459BDAF": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print2/IamRolePolicy",
            "uniqueId": "root_testprint2_IamRolePolicy_D459BDAF",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_testprint2_IamRole_1A5A4191.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_testprint1_IamRolePolicyAttachment_E361420B": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print1/IamRolePolicyAttachment",
            "uniqueId": "root_testprint1_IamRolePolicyAttachment_E361420B",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testprint1_IamRole_AC783F9C.name}",
      },
      "root_testprint2_IamRolePolicyAttachment_00548F9A": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print2/IamRolePolicyAttachment",
            "uniqueId": "root_testprint2_IamRolePolicyAttachment_00548F9A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testprint2_IamRole_1A5A4191.name}",
      },
    },
    "aws_lambda_function": {
      "root_testprint1_86EB7ADD": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print1/Default",
            "uniqueId": "root_testprint1_86EB7ADD",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-print1-c85e6495",
          },
        },
        "function_name": "test-print1-c85e6495",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testprint1_IamRole_AC783F9C.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testprint1_Code_EF1D7786.bucket}",
        "s3_key": "\${aws_s3_object.root_testprint1_S3Object_BF976A20.key}",
        "timeout": 30,
      },
      "root_testprint2_C35721E6": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print2/Default",
            "uniqueId": "root_testprint2_C35721E6",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-print2-c864b24f",
          },
        },
        "function_name": "test-print2-c864b24f",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testprint2_IamRole_1A5A4191.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testprint2_Code_0F714597.bucket}",
        "s3_key": "\${aws_s3_object.root_testprint2_S3Object_22A6E03D.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_testprint1_Code_EF1D7786": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print1/Code",
            "uniqueId": "root_testprint1_Code_EF1D7786",
          },
        },
        "bucket_prefix": "code-c8dcf8b8-",
      },
      "root_testprint2_Code_0F714597": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print2/Code",
            "uniqueId": "root_testprint2_Code_0F714597",
          },
        },
        "bucket_prefix": "code-c8d35efe-",
      },
    },
    "aws_s3_object": {
      "root_testprint1_S3Object_BF976A20": {
        "//": {
          "metadata": {
            "path": "root/Default/test:print1/S3Object",
            "uniqueId": "root_testprint1_S3Object_BF976A20",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testprint1_Code_EF1D7786.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`print.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"print\\", plugins: $plugins });
  
  {console.log(\\"preflight print\\")};
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:print1\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.5d5065e7d4d5abb68575b6b618fc014e76b4159c3240fef327354a5900bb9fa6/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:print2\\",new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.44e74a6db41cb5fd5b35696592c6a747e9831b228b4d1ce62b6e65f43dee835d/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`reassignment.w > wing compile --target tf-aws > R.inflight.js 1`] = `
"export class R_inflight  {
constructor({ f1 }) {

  this.f1 = f1;
}
}"
`;

exports[`reassignment.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`reassignment.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"reassignment\\", plugins: $plugins });
  
  class R extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    if (true) {
      this.f = 1;
      this.f1 = 0;
    }
  }
  }
  	 inc()  {
  	{
    this.f = (this.f + 1);
  }
  }
  	_toInflight() {
  	const f1_client = this._lift(this.f1);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/R.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).R_inflight({f1: \${f1_client}}))\`);
  }
  }
  
  let x = 5;
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === 5)'\`)})((x === 5))};
  x = (x + 1);
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === 6)'\`)})((x === 6))};
  const r = new R(this,\\"R\\");
  (r.inc());
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(r.f === 2)'\`)})((r.f === 2))};
  const f =  (arg) =>  {
  	{
    arg = 0;
    return arg;
  }
  };
  const y = 1;
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((f(y)) === 0)'\`)})(((f(y)) === 0))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(y === 1)'\`)})((y === 1))};
}
}
new MyApp().synth();"
`;

exports[`resource.w > wing compile --target tf-aws > Bar.inflight.js 1`] = `
"export class Bar_inflight  {
constructor({ b, foo, name }) {

  this.b = b;
  this.foo = foo;
  this.name = name;
}
async  my_method()  {
	{
  (await this.foo.foo_inc());
  (await this.b.put(\\"foo\\",\`counter is: \${(await this.foo.foo_get())}\`));
  return (await this.b.get(\\"foo\\"));
}
}}"
`;

exports[`resource.w > wing compile --target tf-aws > Foo.inflight.js 1`] = `
"export class Foo_inflight  {
constructor({ c }) {

  this.c = c;
}
async  foo_inc()  {
	{
  (await this.c.inc());
}
}
async  foo_get()  {
	{
  return (await this.c.peek());
}
}}"
`;

exports[`resource.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { bucket, res } = this; {
  const s = (await res.my_method());
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s === \\"counter is: 1\\")'\`)})((s === \\"counter is: 1\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await bucket.list()).length === 1)'\`)})(((await bucket.list()).length === 1))};
} };"
`;

exports[`resource.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_dynamodb_table": {
      "root_Bar_Foo_cloudCounter_616CF239": {
        "//": {
          "metadata": {
            "path": "root/Default/Bar/Foo/cloud.Counter/Default",
            "uniqueId": "root_Bar_Foo_cloudCounter_616CF239",
          },
        },
        "attribute": [
          {
            "name": "id",
            "type": "S",
          },
        ],
        "billing_mode": "PAY_PER_REQUEST",
        "hash_key": "id",
        "name": "wing-counter-cloud.Counter-c8ef80ad",
      },
    },
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"dynamodb:UpdateItem\\"],\\"Resource\\":\\"\${aws_dynamodb_table.root_Bar_Foo_cloudCounter_616CF239.arn}\\",\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"dynamodb:GetItem\\"],\\"Resource\\":\\"\${aws_dynamodb_table.root_Bar_Foo_cloudCounter_616CF239.arn}\\",\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "DYNAMODB_TABLE_NAME_c7446906": "\${aws_dynamodb_table.root_Bar_Foo_cloudCounter_616CF239.name}",
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`resource.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"resource\\", plugins: $plugins });
  
  class Foo extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.c = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Counter\\",this,\\"cloud.Counter\\");
  }
  }
  	
  	_toInflight() {
  	const c_client = this._lift(this.c);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Foo.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Foo_inflight({c: \${c_client}}))\`);
  }
  }
  Foo._annotateInflight(\\"foo_inc\\", {\\"this.c\\": { ops: [\\"inc\\"] }});
  Foo._annotateInflight(\\"foo_get\\", {\\"this.c\\": { ops: [\\"peek\\"] }});
  class Bar extends $stdlib.core.Resource {
  	constructor(scope, id, name, b) {
  	super(scope, id);
  {
    this.name = name;
    this.b = b;
    this.foo = new Foo(this,\\"Foo\\");
  }
  }
  	
  	_toInflight() {
  	const b_client = this._lift(this.b);
  const foo_client = this._lift(this.foo);
  const name_client = this._lift(this.name);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Bar.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Bar_inflight({b: \${b_client}, foo: \${foo_client}, name: \${name_client}}))\`);
  }
  }
  Bar._annotateInflight(\\"my_method\\", {\\"this.b\\": { ops: [\\"get\\",\\"put\\"] },\\"this.foo\\": { ops: [\\"foo_get\\",\\"foo_inc\\"] }});
  const bucket = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  const res = new Bar(this,\\"Bar\\",\\"Arr\\",bucket);
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.e50bc85b13df379286b4aa72aa88788422e26d9146adbc9bba989a8a59253a73/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      bucket: {
        obj: bucket,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
      res: {
        obj: res,
        ops: [\\"my_method\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`statements_if.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(s) { const {  } = this; {
  if (true) {
    const x = 2;
    if ((true && ((x + 2) === 4))) {
      if ((true && ((x + 3) === 4))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((true && ((x + 3) === 6))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((false || ((x + 3) === 5))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'true'\`)})(true)};
      } else {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      }
    } else {
      {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
    }
  }
} };"
`;

exports[`statements_if.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`statements_if.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_if\\", plugins: $plugins });
  
  if (true) {
    const x = 2;
    const f = false;
    if ((true && ((x + 2) === 4))) {
      if ((true && ((x + 3) === 4))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((true && ((x + 3) === 6))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      } else if ((false || ((x + 3) === 5))) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'true'\`)})(true)};
      } else if ((!f)) {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: '(!(!(!f)))'\`)})((!(!(!f))))};
      } else {
        {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
      }
    } else {
      {((cond) => {if (!cond) throw new Error(\`assertion failed: 'false'\`)})(false)};
    }
  }
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.09c5e24751d9ba1246f91518f2f7f5c5d1102a09d0b1acff479ae27ad134090f/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`statements_variable_declarations.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`statements_variable_declarations.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_variable_declarations\\", plugins: $plugins });
  
  const x = 2;
  const y = x;
}
}
new MyApp().synth();"
`;

exports[`static_members.w > wing compile --target tf-aws > Foo.inflight.js 1`] = `
"export class Foo_inflight  {
constructor({ instance_field }) {

  this.instance_field = instance_field;
}
async static get_123()  {
	{
  return 123;
}
}}"
`;

exports[`static_members.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(s) { const {  } = this; {
  class InflightClass
  {
   constructor()  {
  	{
  }
  }
  
   inflight_method()  {
  	{
    return \\"Inflight method\\";
  }
  }
  static static_inflight_method()  {
  	{
    return \\"Static inflight method\\";
  }
  }
  }
  const inflight_class = new InflightClass();
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await inflight_class.inflight_method()) === \\"Inflight method\\")'\`)})(((await inflight_class.inflight_method()) === \\"Inflight method\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await InflightClass.static_inflight_method()) === \\"Static inflight method\\")'\`)})(((await InflightClass.static_inflight_method()) === \\"Static inflight method\\"))};
} };"
`;

exports[`static_members.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_test_IamRole_6CDC2D16": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRole",
            "uniqueId": "root_test_IamRole_6CDC2D16",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_test_IamRolePolicy_474A6820": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicy",
            "uniqueId": "root_test_IamRolePolicy_474A6820",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_test_IamRolePolicyAttachment_1102A28A": {
        "//": {
          "metadata": {
            "path": "root/Default/test/IamRolePolicyAttachment",
            "uniqueId": "root_test_IamRolePolicyAttachment_1102A28A",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.name}",
      },
    },
    "aws_lambda_function": {
      "root_test_AAE85061": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Default",
            "uniqueId": "root_test_AAE85061",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-c8b6eece",
          },
        },
        "function_name": "test-c8b6eece",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_test_IamRole_6CDC2D16.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "s3_key": "\${aws_s3_object.root_test_S3Object_A16CD789.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_test_Code_2D131EC2": {
        "//": {
          "metadata": {
            "path": "root/Default/test/Code",
            "uniqueId": "root_test_Code_2D131EC2",
          },
        },
        "bucket_prefix": "code-c883c33b-",
      },
    },
    "aws_s3_object": {
      "root_test_S3Object_A16CD789": {
        "//": {
          "metadata": {
            "path": "root/Default/test/S3Object",
            "uniqueId": "root_test_S3Object_A16CD789",
          },
        },
        "bucket": "\${aws_s3_bucket.root_test_Code_2D131EC2.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`static_members.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"static_members\\", plugins: $plugins });
  
  class Foo extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.instance_field = 100;
  }
  }
  	static m()  {
  	{
    return 99;
  }
  }
  	_toInflight() {
  	const instance_field_client = this._lift(this.instance_field);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/Foo.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).Foo_inflight({instance_field: \${instance_field_client}}))\`);
  }
  }
  Foo._annotateInflight(\\"get_123\\", {});
  const foo = new Foo(this,\\"Foo\\");
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(foo.instance_field === 100)'\`)})((foo.instance_field === 100))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((Foo.m()) === 99)'\`)})(((Foo.m()) === 99))};
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.8b58045c72709175549d51937a233ff65ac5e5aa12e83837daf5ea7baf9f224b/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`std_containers.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`std_containers.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"std_containers\\", plugins: $plugins });
  
  const s_array = Object.freeze([\\"one\\", \\"two\\"]);
  const mut_array = [...(s_array)];
  (mut_array.push(\\"three\\"));
  const immut_array = Object.freeze([...(mut_array)]);
  const s = (s_array.at(1));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s === \\"two\\")'\`)})((s === \\"two\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s_array.at(1)) === \\"two\\")'\`)})(((s_array.at(1)) === \\"two\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s_array.length === 2)'\`)})((s_array.length === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(immut_array.length === 3)'\`)})((immut_array.length === 3))};
  const s_array2 = Object.freeze([\\"if\\", \\"you\\", \\"build\\", \\"it\\"]);
  const s_array3 = Object.freeze([\\"he\\", \\"will\\", \\"come\\", \\"for\\", \\"you\\"]);
  const merged_array = (s_array2.concat(s_array3));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(merged_array.length === 9)'\`)})((merged_array.length === 9))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((merged_array.at(5)) === \\"will\\")'\`)})(((merged_array.at(5)) === \\"will\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 'merged_array.includes(\\"build\\")'\`)})(merged_array.includes(\\"build\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(!merged_array.includes(\\"bring\\"))'\`)})((!merged_array.includes(\\"bring\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(merged_array.indexOf(\\"you\\") === 1)'\`)})((merged_array.indexOf(\\"you\\") === 1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((merged_array.join(\\" \\")) === \\"if you build it he will come for you\\")'\`)})(((merged_array.join(\\" \\")) === \\"if you build it he will come for you\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((merged_array.join()) === \\"if,you,build,it,he,will,come,for,you\\")'\`)})(((merged_array.join()) === \\"if,you,build,it,he,will,come,for,you\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(merged_array.lastIndexOf(\\"you\\") === 8)'\`)})((merged_array.lastIndexOf(\\"you\\") === 8))};
  const mut_array2 = [\\"how\\", \\"does\\", \\"that\\", \\"look\\"];
  const merged_mut_array = (mut_array.concat(mut_array2));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(merged_mut_array.length === 7)'\`)})((merged_mut_array.length === 7))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((merged_mut_array.at(5)) === \\"that\\")'\`)})(((merged_mut_array.at(5)) === \\"that\\"))};
  const s_set = Object.freeze(new Set([\\"one\\", \\"two\\"]));
  const mut_set = new Set(s_set);
  (mut_set.add(\\"three\\"));
  const immut_set = Object.freeze(new Set(mut_set));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s_set.has(\\"one\\"))'\`)})((s_set.has(\\"one\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s_set.size === 2)'\`)})((s_set.size === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(immut_set.size === 3)'\`)})((immut_set.size === 3))};
  const s_map = Object.freeze({\\"one\\":1,\\"two\\":2});
  const nested_map = Object.freeze({\\"a\\":Object.freeze({\\"b\\":Object.freeze({\\"c\\":\\"hello\\"})})});
  const mut_map = {...(s_map)};
  ((obj, args) => { obj[args[0]] = args[1]; })(mut_map, [\\"five\\",5]);
  const immut_map = Object.freeze({...(mut_map)});
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s_map)[\\"one\\"] === 1)'\`)})(((s_map)[\\"one\\"] === 1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(s_map).length === 2)'\`)})((Object.keys(s_map).length === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(Object.keys(immut_map).length === 3)'\`)})((Object.keys(immut_map).length === 3))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((((nested_map)[\\"a\\"])[\\"b\\"])[\\"c\\"] === \\"hello\\")'\`)})(((((nested_map)[\\"a\\"])[\\"b\\"])[\\"c\\"] === \\"hello\\"))};
}
}
new MyApp().synth();"
`;

exports[`std_string.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { s1, s2 } = this; {
  {console.log(\`index of \\\\\\"s\\\\\\" in s1 is \${s1.indexOf(\\"s\\")}\`)};
  {console.log((await (await s1.split(\\" \\")).at(1)))};
  {console.log((await s1.concat(s2)))};
} };"
`;

exports[`std_string.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_teststring_IamRole_A23B11BC": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/IamRole",
            "uniqueId": "root_teststring_IamRole_A23B11BC",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_teststring_IamRolePolicy_E68C254E": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/IamRolePolicy",
            "uniqueId": "root_teststring_IamRolePolicy_E68C254E",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_teststring_IamRole_A23B11BC.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_teststring_IamRolePolicyAttachment_CF9D26FE": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/IamRolePolicyAttachment",
            "uniqueId": "root_teststring_IamRolePolicyAttachment_CF9D26FE",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_teststring_IamRole_A23B11BC.name}",
      },
    },
    "aws_lambda_function": {
      "root_teststring_0FD8A9C3": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/Default",
            "uniqueId": "root_teststring_0FD8A9C3",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "test-string-c8b12930",
          },
        },
        "function_name": "test-string-c8b12930",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_teststring_IamRole_A23B11BC.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_teststring_Code_042172E8.bucket}",
        "s3_key": "\${aws_s3_object.root_teststring_S3Object_9049C921.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_teststring_Code_042172E8": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/Code",
            "uniqueId": "root_teststring_Code_042172E8",
          },
        },
        "bucket_prefix": "code-c8c4d274-",
      },
    },
    "aws_s3_object": {
      "root_teststring_S3Object_9049C921": {
        "//": {
          "metadata": {
            "path": "root/Default/test:string/S3Object",
            "uniqueId": "root_teststring_S3Object_9049C921",
          },
        },
        "bucket": "\${aws_s3_bucket.root_teststring_Code_042172E8.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`std_string.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"std_string\\", plugins: $plugins });
  
  const s1 = \\"some string\\";
  const s2 = \\"s are immutable\\";
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s1.length === 11)'\`)})((s1.length === 11))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.at(7)) === \\"r\\")'\`)})(((s1.at(7)) === \\"r\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.concat(s2)) === \\"some strings are immutable\\")'\`)})(((s1.concat(s2)) === \\"some strings are immutable\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 's1.includes(\\"some\\")'\`)})(s1.includes(\\"some\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(!\\"some\\".includes(s1))'\`)})((!\\"some\\".includes(s1)))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 's1.endsWith(\\"string\\")'\`)})(s1.endsWith(\\"string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(s1.indexOf(\\"s\\") === 0)'\`)})((s1.indexOf(\\"s\\") === 0))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"Some String\\".toLocaleLowerCase() === \\"some string\\")'\`)})((\\"Some String\\".toLocaleLowerCase() === \\"some string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(((s1.split(\\" \\")).at(0)) === \\"some\\")'\`)})((((s1.split(\\" \\")).at(0)) === \\"some\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: 's1.startsWith(\\"some\\")'\`)})(s1.startsWith(\\"some\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.substring(5)) === \\"string\\")'\`)})(((s1.substring(5)) === \\"string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((s1.substring(5,7)) === \\"st\\")'\`)})(((s1.substring(5,7)) === \\"st\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((\\"   some string   \\".trim()) === \\"some string\\")'\`)})(((\\"   some string   \\".trim()) === \\"some string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(\\"Some String\\".toLocaleUpperCase() === \\"SOME STRING\\")'\`)})((\\"Some String\\".toLocaleUpperCase() === \\"SOME STRING\\"))};
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:string\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.0fb01e81c63b003d77d6245e36ba84561e3e2d3268e69a7c975f81cfe7565fac/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      s1: {
        obj: s1,
        ops: []
      },
      s2: {
        obj: s2,
        ops: []
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`test_bucket.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(_) { const { b } = this; {
  (await b.put(\\"hello.txt\\",\\"world\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await b.get(\\"hello.txt\\")) === \\"world\\")'\`)})(((await b.get(\\"hello.txt\\")) === \\"world\\"))};
} };"
`;

exports[`test_bucket.w > wing compile --target tf-aws > index.js 2`] = `
"async handle(_) { const { b } = this; {
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await b.list()).length === 0)'\`)})(((await b.list()).length === 0))};
  (await b.put(\\"hello.txt\\",\\"world\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await b.list()).length === 1)'\`)})(((await b.list()).length === 1))};
} };"
`;

exports[`test_bucket.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_testget_IamRole_DD77F38A": {
        "//": {
          "metadata": {
            "path": "root/Default/test:get/IamRole",
            "uniqueId": "root_testget_IamRole_DD77F38A",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testput_IamRole_1BBF32A6": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/IamRole",
            "uniqueId": "root_testput_IamRole_1BBF32A6",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_testget_IamRolePolicy_2CFB696B": {
        "//": {
          "metadata": {
            "path": "root/Default/test:get/IamRolePolicy",
            "uniqueId": "root_testget_IamRolePolicy_2CFB696B",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testget_IamRole_DD77F38A.name}",
      },
      "root_testput_IamRolePolicy_98659F09": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/IamRolePolicy",
            "uniqueId": "root_testput_IamRolePolicy_98659F09",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testput_IamRole_1BBF32A6.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_testget_IamRolePolicyAttachment_1BD905A8": {
        "//": {
          "metadata": {
            "path": "root/Default/test:get/IamRolePolicyAttachment",
            "uniqueId": "root_testget_IamRolePolicyAttachment_1BD905A8",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testget_IamRole_DD77F38A.name}",
      },
      "root_testput_IamRolePolicyAttachment_E73FB6BB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/IamRolePolicyAttachment",
            "uniqueId": "root_testput_IamRolePolicyAttachment_E73FB6BB",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testput_IamRole_1BBF32A6.name}",
      },
    },
    "aws_lambda_function": {
      "root_testget_D2443E25": {
        "//": {
          "metadata": {
            "path": "root/Default/test:get/Default",
            "uniqueId": "root_testget_D2443E25",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "test-get-c8e58069",
          },
        },
        "function_name": "test-get-c8e58069",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testget_IamRole_DD77F38A.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testget_Code_EC989716.bucket}",
        "s3_key": "\${aws_s3_object.root_testget_S3Object_071392B9.key}",
        "timeout": 30,
      },
      "root_testput_449428F9": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/Default",
            "uniqueId": "root_testput_449428F9",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "test-put-c899ce9b",
          },
        },
        "function_name": "test-put-c899ce9b",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testput_IamRole_1BBF32A6.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testput_Code_DE7653AD.bucket}",
        "s3_key": "\${aws_s3_object.root_testput_S3Object_30BF1DDD.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
        "bucket_prefix": "cloud-bucket-c87175e7-",
      },
      "root_testget_Code_EC989716": {
        "//": {
          "metadata": {
            "path": "root/Default/test:get/Code",
            "uniqueId": "root_testget_Code_EC989716",
          },
        },
        "bucket_prefix": "code-c8071909-",
      },
      "root_testput_Code_DE7653AD": {
        "//": {
          "metadata": {
            "path": "root/Default/test:put/Code",
            "uniqueId": "root_testput_Code_DE7653AD",
          },
        },
        "bucket_prefix": "code-c8ab7128-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_testget_S3Object_071392B9": {
        "//": {
          "metadata": {
            "path": "root/Default/test:get/S3Object",
            "uniqueId": "root_testget_S3Object_071392B9",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testget_Code_EC989716.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`test_bucket.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"test_bucket\\", plugins: $plugins });
  
  const b = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:put\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.9f10a129b90bc1328dcb1e6194e3902931d1011d95e46825362ef5b06ec17380/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      b: {
        obj: b,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:get\\",new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.1b9abefaef8ce4230db863000273d2c12bacb97e33ac10e6c8b50341e415fdac/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      b: {
        obj: b,
        ops: [\\"delete\\",\\"get\\",\\"get_json\\",\\"list\\",\\"put\\",\\"put_json\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`try_catch.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`try_catch.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"try_catch\\", plugins: $plugins });
  
  let x = \\"\\";
  try {
  	{
    {((msg) => {throw new Error(msg)})(\\"hello\\")};
    x = \\"no way I got here\\";
  }
  } catch ($error_e) {
  	const e = $error_e.message;
  	{
    {((cond) => {if (!cond) throw new Error(\`assertion failed: '(e === \\"hello\\")'\`)})((e === \\"hello\\"))};
    x = \\"caught\\";
  }
  } finally {
  	{
    {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === \\"caught\\")'\`)})((x === \\"caught\\"))};
    x = \\"finally\\";
  };
  }
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === \\"finally\\")'\`)})((x === \\"finally\\"))};
  try {
  	{
    x = \\"I got here\\";
  }
  } catch ($error_e) {
  	const e = $error_e.message;
  	{
    x = \\"caught\\";
  }
  } finally {
  	{
    {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === \\"I got here\\")'\`)})((x === \\"I got here\\"))};
    x = \\"finally\\";
  };
  }
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === \\"finally\\")'\`)})((x === \\"finally\\"))};
  try {
  	{
    {((msg) => {throw new Error(msg)})(\\"hello\\")};
  }
  } catch  {
  	
  	
  } finally {
  	{
    x = \\"finally with no catch\\";
  };
  }
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === \\"finally with no catch\\")'\`)})((x === \\"finally with no catch\\"))};
  try {
  	{
  }
  } catch  {
  	
  	
  } finally {
  	{
    x = \\"finally with no catch and no exception\\";
  };
  }
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(x === \\"finally with no catch and no exception\\")'\`)})((x === \\"finally with no catch and no exception\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((( () =>  {
  	{
    try {
    	{
    }
    } catch  {
    	
    	
    } finally {
    	{
      return 1;
    };
    }
  }
  })()) === 1)'\`)})(((( () =>  {
  	{
    try {
    	{
    }
    } catch  {
    	
    	
    } finally {
    	{
      return 1;
    };
    }
  }
  })()) === 1))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((( () =>  {
  	{
    try {
    	{
      {((msg) => {throw new Error(msg)})(\\"\\")};
    }
    } catch  {
    	
    	{
      return 2;
    }
    } finally {
    	
    }
  }
  })()) === 2)'\`)})(((( () =>  {
  	{
    try {
    	{
      {((msg) => {throw new Error(msg)})(\\"\\")};
    }
    } catch  {
    	
    	{
      return 2;
    }
    } finally {
    	
    }
  }
  })()) === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((( () =>  {
  	{
    try {
    	{
      return 3;
    }
    } catch  {
    	
    	
    } finally {
    	{
    };
    }
  }
  })()) === 3)'\`)})(((( () =>  {
  	{
    try {
    	{
      return 3;
    }
    } catch  {
    	
    	
    } finally {
    	{
    };
    }
  }
  })()) === 3))};
}
}
new MyApp().synth();"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > MyResource.inflight.js 1`] = `
"export class MyResource_inflight  {
constructor({ array_of_queues, array_of_str, map_of_num, my_bool, my_num, my_resource, my_str, set_of_str }) {

  this.array_of_queues = array_of_queues;
  this.array_of_str = array_of_str;
  this.map_of_num = map_of_num;
  this.my_bool = my_bool;
  this.my_num = my_num;
  this.my_resource = my_resource;
  this.my_str = my_str;
  this.set_of_str = set_of_str;
}
async  capture_resource()  {
	{
  (await this.my_resource.put(\\"f1.txt\\",\\"f1\\"));
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await this.my_resource.get(\\"f1.txt\\")) === \\"f1\\")'\`)})(((await this.my_resource.get(\\"f1.txt\\")) === \\"f1\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await this.my_resource.list()).length === 1)'\`)})(((await this.my_resource.list()).length === 1))};
}
}
async  capture_primitives()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.my_str === \\"my_string\\")'\`)})((this.my_str === \\"my_string\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.my_num === 42)'\`)})((this.my_num === 42))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.my_bool === true)'\`)})((this.my_bool === true))};
}
}
async  capture_array()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(this.array_of_str.length === 2)'\`)})((this.array_of_str.length === 2))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await this.array_of_str.at(0)) === \\"s1\\")'\`)})(((await this.array_of_str.at(0)) === \\"s1\\"))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((await this.array_of_str.at(1)) === \\"s2\\")'\`)})(((await this.array_of_str.at(1)) === \\"s2\\"))};
}
}
async  capture_map()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((this.map_of_num)[\\"k1\\"] === 11)'\`)})(((this.map_of_num)[\\"k1\\"] === 11))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '((this.map_of_num)[\\"k2\\"] === 22)'\`)})(((this.map_of_num)[\\"k2\\"] === 22))};
}
}
async  capture_set()  {
	{
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(await this.set_of_str.has(\\"s1\\"))'\`)})((await this.set_of_str.has(\\"s1\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(await this.set_of_str.has(\\"s2\\"))'\`)})((await this.set_of_str.has(\\"s2\\")))};
  {((cond) => {if (!cond) throw new Error(\`assertion failed: '(!(await this.set_of_str.has(\\"s3\\")))'\`)})((!(await this.set_of_str.has(\\"s3\\"))))};
}
}
async  capture_array_of_queues()  {
	{
  (await (await this.array_of_queues.at(0)).push(\\"q1\\"));
  (await (await this.array_of_queues.at(1)).push(\\"q2\\"));
}
}}"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > index.js 1`] = `
"async handle() { const { r } = this; {
  (await r.capture_array_of_queues());
} };"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > index.js 2`] = `
"async handle() { const { r } = this; {
  (await r.capture_primitives());
} };"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > index.js 3`] = `
"async handle() { const { r } = this; {
  (await r.capture_map());
} };"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > index.js 4`] = `
"async handle() { const { r } = this; {
  (await r.capture_resource());
} };"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > index.js 5`] = `
"async handle() { const { r } = this; {
  (await r.capture_set());
} };"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > index.js 6`] = `
"async handle() { const { r } = this; {
  (await r.capture_array());
} };"
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_testcapturearray_IamRole_0E03D456": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array/IamRole",
            "uniqueId": "root_testcapturearray_IamRole_0E03D456",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testcapturearrayofqueues_IamRole_223C9195": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array_of_queues/IamRole",
            "uniqueId": "root_testcapturearrayofqueues_IamRole_223C9195",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testcapturemap_IamRole_1B5F9F5E": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_map/IamRole",
            "uniqueId": "root_testcapturemap_IamRole_1B5F9F5E",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testcaptureprimitives_IamRole_67F1EAC9": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_primitives/IamRole",
            "uniqueId": "root_testcaptureprimitives_IamRole_67F1EAC9",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testcaptureresource_IamRole_69F520A4": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_resource/IamRole",
            "uniqueId": "root_testcaptureresource_IamRole_69F520A4",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
      "root_testcaptureset_IamRole_1FCDC76B": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_set/IamRole",
            "uniqueId": "root_testcaptureset_IamRole_1FCDC76B",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_testcapturearray_IamRolePolicy_FBEBD531": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array/IamRolePolicy",
            "uniqueId": "root_testcapturearray_IamRolePolicy_FBEBD531",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testcapturearray_IamRole_0E03D456.name}",
      },
      "root_testcapturearrayofqueues_IamRolePolicy_C28D32CE": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array_of_queues/IamRolePolicy",
            "uniqueId": "root_testcapturearrayofqueues_IamRolePolicy_C28D32CE",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testcapturearrayofqueues_IamRole_223C9195.name}",
      },
      "root_testcapturemap_IamRolePolicy_8E51A860": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_map/IamRolePolicy",
            "uniqueId": "root_testcapturemap_IamRolePolicy_8E51A860",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testcapturemap_IamRole_1B5F9F5E.name}",
      },
      "root_testcaptureprimitives_IamRolePolicy_E3C1E921": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_primitives/IamRolePolicy",
            "uniqueId": "root_testcaptureprimitives_IamRolePolicy_E3C1E921",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testcaptureprimitives_IamRole_67F1EAC9.name}",
      },
      "root_testcaptureresource_IamRolePolicy_86C59E76": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_resource/IamRolePolicy",
            "uniqueId": "root_testcaptureresource_IamRolePolicy_86C59E76",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testcaptureresource_IamRole_69F520A4.name}",
      },
      "root_testcaptureset_IamRolePolicy_D409E226": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_set/IamRolePolicy",
            "uniqueId": "root_testcaptureset_IamRolePolicy_D409E226",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}\\",\\"\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.arn}/*\\"],\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_testcaptureset_IamRole_1FCDC76B.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_testcapturearray_IamRolePolicyAttachment_C9E8AD0C": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array/IamRolePolicyAttachment",
            "uniqueId": "root_testcapturearray_IamRolePolicyAttachment_C9E8AD0C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testcapturearray_IamRole_0E03D456.name}",
      },
      "root_testcapturearrayofqueues_IamRolePolicyAttachment_35651451": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array_of_queues/IamRolePolicyAttachment",
            "uniqueId": "root_testcapturearrayofqueues_IamRolePolicyAttachment_35651451",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testcapturearrayofqueues_IamRole_223C9195.name}",
      },
      "root_testcapturemap_IamRolePolicyAttachment_CF9F2BD2": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_map/IamRolePolicyAttachment",
            "uniqueId": "root_testcapturemap_IamRolePolicyAttachment_CF9F2BD2",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testcapturemap_IamRole_1B5F9F5E.name}",
      },
      "root_testcaptureprimitives_IamRolePolicyAttachment_962C5CDE": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_primitives/IamRolePolicyAttachment",
            "uniqueId": "root_testcaptureprimitives_IamRolePolicyAttachment_962C5CDE",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testcaptureprimitives_IamRole_67F1EAC9.name}",
      },
      "root_testcaptureresource_IamRolePolicyAttachment_5E6259D6": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_resource/IamRolePolicyAttachment",
            "uniqueId": "root_testcaptureresource_IamRolePolicyAttachment_5E6259D6",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testcaptureresource_IamRole_69F520A4.name}",
      },
      "root_testcaptureset_IamRolePolicyAttachment_69E9E796": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_set/IamRolePolicyAttachment",
            "uniqueId": "root_testcaptureset_IamRolePolicyAttachment_69E9E796",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_testcaptureset_IamRole_1FCDC76B.name}",
      },
    },
    "aws_lambda_function": {
      "root_testcapturearray_85E4D097": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array/Default",
            "uniqueId": "root_testcapturearray_85E4D097",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_51ee81c0": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
            "QUEUE_URL_409f9855": "\${aws_sqs_queue.root_MyResource_q2_A7C72267.url}",
            "QUEUE_URL_5a2f5a6e": "\${aws_sqs_queue.root_MyResource_q1_3171D68C.url}",
            "WING_FUNCTION_NAME": "test-capture_array-c84da7f0",
          },
        },
        "function_name": "test-capture_array-c84da7f0",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testcapturearray_IamRole_0E03D456.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testcapturearray_Code_013E59DB.bucket}",
        "s3_key": "\${aws_s3_object.root_testcapturearray_S3Object_56C01E37.key}",
        "timeout": 30,
      },
      "root_testcapturearrayofqueues_B444E46D": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array_of_queues/Default",
            "uniqueId": "root_testcapturearrayofqueues_B444E46D",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_51ee81c0": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
            "QUEUE_URL_409f9855": "\${aws_sqs_queue.root_MyResource_q2_A7C72267.url}",
            "QUEUE_URL_5a2f5a6e": "\${aws_sqs_queue.root_MyResource_q1_3171D68C.url}",
            "WING_FUNCTION_NAME": "test-capture_array_of_queues-c8f52b65",
          },
        },
        "function_name": "test-capture_array_of_queues-c8f52b65",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testcapturearrayofqueues_IamRole_223C9195.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testcapturearrayofqueues_Code_D7325F27.bucket}",
        "s3_key": "\${aws_s3_object.root_testcapturearrayofqueues_S3Object_C899E4CF.key}",
        "timeout": 30,
      },
      "root_testcapturemap_7AEC532C": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_map/Default",
            "uniqueId": "root_testcapturemap_7AEC532C",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_51ee81c0": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
            "QUEUE_URL_409f9855": "\${aws_sqs_queue.root_MyResource_q2_A7C72267.url}",
            "QUEUE_URL_5a2f5a6e": "\${aws_sqs_queue.root_MyResource_q1_3171D68C.url}",
            "WING_FUNCTION_NAME": "test-capture_map-c8002cff",
          },
        },
        "function_name": "test-capture_map-c8002cff",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testcapturemap_IamRole_1B5F9F5E.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testcapturemap_Code_5F6F5256.bucket}",
        "s3_key": "\${aws_s3_object.root_testcapturemap_S3Object_3618C235.key}",
        "timeout": 30,
      },
      "root_testcaptureprimitives_11A0A604": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_primitives/Default",
            "uniqueId": "root_testcaptureprimitives_11A0A604",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_51ee81c0": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
            "QUEUE_URL_409f9855": "\${aws_sqs_queue.root_MyResource_q2_A7C72267.url}",
            "QUEUE_URL_5a2f5a6e": "\${aws_sqs_queue.root_MyResource_q1_3171D68C.url}",
            "WING_FUNCTION_NAME": "test-capture_primitives-c8a111ce",
          },
        },
        "function_name": "test-capture_primitives-c8a111ce",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testcaptureprimitives_IamRole_67F1EAC9.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testcaptureprimitives_Code_966F0D4F.bucket}",
        "s3_key": "\${aws_s3_object.root_testcaptureprimitives_S3Object_FC670079.key}",
        "timeout": 30,
      },
      "root_testcaptureresource_369B2B56": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_resource/Default",
            "uniqueId": "root_testcaptureresource_369B2B56",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_51ee81c0": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
            "QUEUE_URL_409f9855": "\${aws_sqs_queue.root_MyResource_q2_A7C72267.url}",
            "QUEUE_URL_5a2f5a6e": "\${aws_sqs_queue.root_MyResource_q1_3171D68C.url}",
            "WING_FUNCTION_NAME": "test-capture_resource-c829c6e3",
          },
        },
        "function_name": "test-capture_resource-c829c6e3",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testcaptureresource_IamRole_69F520A4.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testcaptureresource_Code_EC29DF7A.bucket}",
        "s3_key": "\${aws_s3_object.root_testcaptureresource_S3Object_3988F6DC.key}",
        "timeout": 30,
      },
      "root_testcaptureset_140F1255": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_set/Default",
            "uniqueId": "root_testcaptureset_140F1255",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_51ee81c0": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
            "QUEUE_URL_409f9855": "\${aws_sqs_queue.root_MyResource_q2_A7C72267.url}",
            "QUEUE_URL_5a2f5a6e": "\${aws_sqs_queue.root_MyResource_q1_3171D68C.url}",
            "WING_FUNCTION_NAME": "test-capture_set-c849421f",
          },
        },
        "function_name": "test-capture_set-c849421f",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_testcaptureset_IamRole_1FCDC76B.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_testcaptureset_Code_E2484ABD.bucket}",
        "s3_key": "\${aws_s3_object.root_testcaptureset_S3Object_86C9A729.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_MyResource_cloudBucket_AF30D75E": {
        "//": {
          "metadata": {
            "path": "root/Default/MyResource/cloud.Bucket/Default",
            "uniqueId": "root_MyResource_cloudBucket_AF30D75E",
          },
        },
        "bucket_prefix": "cloud-bucket-c8f3d54f-",
      },
      "root_testcapturearray_Code_013E59DB": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array/Code",
            "uniqueId": "root_testcapturearray_Code_013E59DB",
          },
        },
        "bucket_prefix": "code-c87e637c-",
      },
      "root_testcapturearrayofqueues_Code_D7325F27": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array_of_queues/Code",
            "uniqueId": "root_testcapturearrayofqueues_Code_D7325F27",
          },
        },
        "bucket_prefix": "code-c8433a86-",
      },
      "root_testcapturemap_Code_5F6F5256": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_map/Code",
            "uniqueId": "root_testcapturemap_Code_5F6F5256",
          },
        },
        "bucket_prefix": "code-c80e6a8e-",
      },
      "root_testcaptureprimitives_Code_966F0D4F": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_primitives/Code",
            "uniqueId": "root_testcaptureprimitives_Code_966F0D4F",
          },
        },
        "bucket_prefix": "code-c83bb55b-",
      },
      "root_testcaptureresource_Code_EC29DF7A": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_resource/Code",
            "uniqueId": "root_testcaptureresource_Code_EC29DF7A",
          },
        },
        "bucket_prefix": "code-c8b99a85-",
      },
      "root_testcaptureset_Code_E2484ABD": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_set/Code",
            "uniqueId": "root_testcaptureset_Code_E2484ABD",
          },
        },
        "bucket_prefix": "code-c8c60189-",
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_MyResource_cloudBucket_PublicAccessBlock_953F0137": {
        "//": {
          "metadata": {
            "path": "root/Default/MyResource/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_MyResource_cloudBucket_PublicAccessBlock_953F0137",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_MyResource_cloudBucket_Encryption_1E1FD60D": {
        "//": {
          "metadata": {
            "path": "root/Default/MyResource/cloud.Bucket/Encryption",
            "uniqueId": "root_MyResource_cloudBucket_Encryption_1E1FD60D",
          },
        },
        "bucket": "\${aws_s3_bucket.root_MyResource_cloudBucket_AF30D75E.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_testcapturearray_S3Object_56C01E37": {
        "//": {
          "metadata": {
            "path": "root/Default/test:capture_array/S3Object",
            "uniqueId": "root_testcapturearray_S3Object_56C01E37",
          },
        },
        "bucket": "\${aws_s3_bucket.root_testcapturearray_Code_013E59DB.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`user-defined-resources-captures.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"user-defined-resources-captures\\", plugins: $plugins });
  
  class MyResource extends $stdlib.core.Resource {
  	constructor(scope, id, ) {
  	super(scope, id);
  {
    this.my_resource = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Bucket\\",this,\\"cloud.Bucket\\");
    this.my_str = \\"my_string\\";
    this.my_num = 42;
    this.my_bool = true;
    this.array_of_str = Object.freeze([\\"s1\\", \\"s2\\"]);
    this.map_of_num = Object.freeze({\\"k1\\":11,\\"k2\\":22});
    this.set_of_str = Object.freeze(new Set([\\"s1\\", \\"s2\\", \\"s1\\"]));
    this.array_of_queues = Object.freeze([this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"q1\\"), this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"q2\\")]);
  }
  }
  	
  	_toInflight() {
  	const array_of_queues_client = this._lift(this.array_of_queues);
  const array_of_str_client = this._lift(this.array_of_str);
  const map_of_num_client = this._lift(this.map_of_num);
  const my_bool_client = this._lift(this.my_bool);
  const my_num_client = this._lift(this.my_num);
  const my_resource_client = this._lift(this.my_resource);
  const my_str_client = this._lift(this.my_str);
  const set_of_str_client = this._lift(this.set_of_str);
  	const self_client_path = require('path').resolve(__dirname, \\"clients/MyResource.inflight.js\\").replace(/\\\\\\\\/g, \\"/\\");
  	return $stdlib.core.NodeJsCode.fromInline(\`(new (require(\\"\${self_client_path}\\")).MyResource_inflight({array_of_queues: \${array_of_queues_client}, array_of_str: \${array_of_str_client}, map_of_num: \${map_of_num_client}, my_bool: \${my_bool_client}, my_num: \${my_num_client}, my_resource: \${my_resource_client}, my_str: \${my_str_client}, set_of_str: \${set_of_str_client}}))\`);
  }
  }
  MyResource._annotateInflight(\\"capture_resource\\", {\\"this.my_resource\\": { ops: [\\"get\\",\\"list\\",\\"put\\"] }});
  MyResource._annotateInflight(\\"capture_primitives\\", {\\"this.my_bool\\": { ops: [] },\\"this.my_num\\": { ops: [] },\\"this.my_str\\": { ops: [] }});
  MyResource._annotateInflight(\\"capture_array\\", {\\"this.array_of_str\\": { ops: [\\"at\\",\\"length\\"] }});
  MyResource._annotateInflight(\\"capture_map\\", {\\"this.map_of_num\\": { ops: [\\"get\\"] }});
  MyResource._annotateInflight(\\"capture_set\\", {\\"this.set_of_str\\": { ops: [\\"has\\"] }});
  MyResource._annotateInflight(\\"capture_array_of_queues\\", {\\"this.array_of_queues\\": { ops: [\\"at\\"] }});
  const r = new MyResource(this,\\"MyResource\\");
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:capture_resource\\",new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.b5e7bd6cc9f6c741c4f0afa8adc0208ccee08e6297495b1fbe29db8afb6ee789/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      r: {
        obj: r,
        ops: [\\"capture_array\\",\\"capture_array_of_queues\\",\\"capture_map\\",\\"capture_primitives\\",\\"capture_resource\\",\\"capture_set\\"]
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:capture_primitives\\",new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.1814d20e284e4a33aff014ce4391d7da7998b0cd7db8ebee477a5400763bbe7b/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      r: {
        obj: r,
        ops: [\\"capture_array\\",\\"capture_array_of_queues\\",\\"capture_map\\",\\"capture_primitives\\",\\"capture_resource\\",\\"capture_set\\"]
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:capture_array\\",new $stdlib.core.Inflight(this, \\"$Inflight3\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.c341832069b7b13603626bc26227d936f0a7d7b7da45751e3666d6f4e7fa599a/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      r: {
        obj: r,
        ops: [\\"capture_array\\",\\"capture_array_of_queues\\",\\"capture_map\\",\\"capture_primitives\\",\\"capture_resource\\",\\"capture_set\\"]
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:capture_map\\",new $stdlib.core.Inflight(this, \\"$Inflight4\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.7235e8fbf10f106318ff9c22489e4e955483c8de6b39df0dbf143fdfa4691109/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      r: {
        obj: r,
        ops: [\\"capture_array\\",\\"capture_array_of_queues\\",\\"capture_map\\",\\"capture_primitives\\",\\"capture_resource\\",\\"capture_set\\"]
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:capture_set\\",new $stdlib.core.Inflight(this, \\"$Inflight5\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.b7df534fba155b498841a75f4610f6bb576ee00e2fbe6869317adf3718597864/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      r: {
        obj: r,
        ops: [\\"capture_array\\",\\"capture_array_of_queues\\",\\"capture_map\\",\\"capture_primitives\\",\\"capture_resource\\",\\"capture_set\\"]
      },
    }
  }));
  this.node.root.newAbstract(\\"@winglang/sdk.cloud.Function\\",this,\\"test:capture_array_of_queues\\",new $stdlib.core.Inflight(this, \\"$Inflight6\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.179eef1ca19aa2bf908a3113209c3d8b96c23bac7bc35f1d6381c0f5cd2ec603/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
      r: {
        obj: r,
        ops: [\\"capture_array\\",\\"capture_array_of_queues\\",\\"capture_map\\",\\"capture_primitives\\",\\"capture_resource\\",\\"capture_set\\"]
      },
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`while.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`while.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"while\\", plugins: $plugins });
  
  while (false) {
    const x = 1;
  }
  const y = 123;
  while ((y < 0)) {
    const x = 1;
  }
}
}
new MyApp().synth();"
`;

exports[`while_loop_await.w > wing compile --target tf-aws > index.js 1`] = `
"async handle(j) { const {  } = this; {
  return (j + 1);
} };"
`;

exports[`while_loop_await.w > wing compile --target tf-aws > index.js 2`] = `
"async handle(body) { const {  } = this; {
  const i = 0;
  while (((await iterator(i)) < 3)) {
    {console.log(\`\${i}\`)};
  }
} };"
`;

exports[`while_loop_await.w > wing compile --target tf-aws > main.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.15.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudQueueOnMessageb3f3d188_IamRole_2EDE9980": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-b3f3d188/IamRole",
            "uniqueId": "root_cloudQueueOnMessageb3f3d188_IamRole_2EDE9980",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudQueueOnMessageb3f3d188_IamRolePolicy_F06A54DE": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-b3f3d188/IamRolePolicy",
            "uniqueId": "root_cloudQueueOnMessageb3f3d188_IamRolePolicy_F06A54DE",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"sqs:ReceiveMessage\\",\\"sqs:ChangeMessageVisibility\\",\\"sqs:GetQueueUrl\\",\\"sqs:DeleteMessage\\",\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudQueueOnMessageb3f3d188_IamRole_2EDE9980.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudQueueOnMessageb3f3d188_IamRolePolicyAttachment_6D0B5E93": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-b3f3d188/IamRolePolicyAttachment",
            "uniqueId": "root_cloudQueueOnMessageb3f3d188_IamRolePolicyAttachment_6D0B5E93",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudQueueOnMessageb3f3d188_IamRole_2EDE9980.name}",
      },
    },
    "aws_lambda_event_source_mapping": {
      "root_cloudQueue_EventSourceMapping_A2041279": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue/EventSourceMapping",
            "uniqueId": "root_cloudQueue_EventSourceMapping_A2041279",
          },
        },
        "batch_size": 1,
        "event_source_arn": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}",
        "function_name": "\${aws_lambda_function.root_cloudQueueOnMessageb3f3d188_29346340.function_name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudQueueOnMessageb3f3d188_29346340": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-b3f3d188/Default",
            "uniqueId": "root_cloudQueueOnMessageb3f3d188_29346340",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud-Queue-OnMessage-b3f3d188-c87e2d03",
          },
        },
        "function_name": "cloud-Queue-OnMessage-b3f3d188-c87e2d03",
        "handler": "index.handler",
        "publish": true,
        "role": "\${aws_iam_role.root_cloudQueueOnMessageb3f3d188_IamRole_2EDE9980.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudQueueOnMessageb3f3d188_Code_4D451A84.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudQueueOnMessageb3f3d188_S3Object_18BDF7F0.key}",
        "timeout": 30,
      },
    },
    "aws_s3_bucket": {
      "root_cloudQueueOnMessageb3f3d188_Code_4D451A84": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-b3f3d188/Code",
            "uniqueId": "root_cloudQueueOnMessageb3f3d188_Code_4D451A84",
          },
        },
        "bucket_prefix": "code-c8b6a338-",
      },
    },
    "aws_s3_object": {
      "root_cloudQueueOnMessageb3f3d188_S3Object_18BDF7F0": {
        "//": {
          "metadata": {
            "path": "root/Default/cloud.Queue-OnMessage-b3f3d188/S3Object",
            "uniqueId": "root_cloudQueueOnMessageb3f3d188_S3Object_18BDF7F0",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudQueueOnMessageb3f3d188_Code_4D451A84.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`while_loop_await.w > wing compile --target tf-aws > preflight.js 1`] = `
"const $stdlib = require('@winglang/sdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		case \\"tf-gcp\\":
			return $stdlib.tfgcp.App;
		case \\"tf-azure\\":
			return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/sdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"while_loop_await\\", plugins: $plugins });
  
  const queue = this.node.root.newAbstract(\\"@winglang/sdk.cloud.Queue\\",this,\\"cloud.Queue\\");
  const iterator = new $stdlib.core.Inflight(this, \\"$Inflight1\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.82d0059fdbaebaab6d1be68f497052f9d5b8662f4333952a6e9ad55f564e0c97/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  });
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.f259e8d1edc5d47946ec1a1f3aa23e59fe550255ec12b899cffb307ecf525df6/index.js\\").replace(/\\\\\\\\/g, \\"/\\")),
    bindings: {
    }
  });
  (queue.onMessage(handler));
}
}
new MyApp().synth();"
`;
