// Vitest Snapshot v1

exports[`wing compile anon_function.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile anon_function.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile anon_function.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"anon_function\\" });
  
  const myfunc = (x) => {
    {console.log(\`\${x}\`)};
    x = (x + 1);
    if ((x > 3.14)) {
      return;
    }
    (myfunc(x));
  };
  (myfunc(1));
}
}
new MyApp().synth();"
`;

exports[`wing compile capture_collections.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud.Function",
          },
        },
        "function_name": "cloud_Function",
        "handler": "index.handler",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
      },
    },
    "aws_s3_bucket": {
      "root_cloudFunction_Bucket_245CAEB7": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Bucket",
            "uniqueId": "root_cloudFunction_Bucket_245CAEB7",
          },
        },
      },
    },
    "aws_s3_object": {
      "root_cloudFunction_S3Object_C8435368": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/S3Object",
            "uniqueId": "root_cloudFunction_S3Object_C8435368",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile capture_collections.w > index.js 1`] = `
"async handle(s) { const { arr, my_set } = this; {
  {console.log((await arr.at(0)))};
  {console.log((await arr.at(1)))};
  {console.log(\`size=\${arr.length}\`)};
  const set_size = my_set.size;
  {console.log(\`set size=\${set_size}\`)};
} };"
`;

exports[`wing compile capture_collections.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile capture_collections.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_collections\\" });
  
  const arr = Object.freeze([\\"hello\\", \\"world\\"]);
  const my_set = Object.freeze(new Set([\\"my\\", \\"my\\", \\"set\\"]));
  const handler = new $stdlib.core.Inflight(this, \\"$Inflighta123982e\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.3c20ab1acd8b67a6d83d90dd501af9b8ce9985aa26cf0f644d41d33da123982e/index.js\\")),
    bindings: {
      
      data: {
        arr: arr,
        my_set: my_set,
      }
    }
  });
  new cloud.Function(this,\\"cloud.Function\\",handler);
}
}
new MyApp().synth();"
`;

exports[`wing compile capture_primitives.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud.Function",
          },
        },
        "function_name": "cloud_Function",
        "handler": "index.handler",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
      },
    },
    "aws_s3_bucket": {
      "root_cloudFunction_Bucket_245CAEB7": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Bucket",
            "uniqueId": "root_cloudFunction_Bucket_245CAEB7",
          },
        },
      },
    },
    "aws_s3_object": {
      "root_cloudFunction_S3Object_C8435368": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/S3Object",
            "uniqueId": "root_cloudFunction_S3Object_C8435368",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile capture_primitives.w > index.js 1`] = `
"async handle(s) { const { my_bool, my_dur, my_num, my_str } = this; {
  {console.log(my_str)};
  const n = my_num;
  {console.log(\`\${n}\`)};
  if (my_bool) {
    {console.log(\\"bool=true\\")};
  } else {
    {console.log(\\"bool=false\\")};
  }
  const min = my_dur.minutes;
  const sec = my_dur.seconds;
  const hr = my_dur.hours;
  {console.log(\`min=\${min} sec=\${sec} hr=\${hr}\`)};
} };"
`;

exports[`wing compile capture_primitives.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile capture_primitives.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"capture_primitives\\" });
  
  const my_str = \\"hello, string\\";
  const my_num = 1234;
  const my_bool = true;
  const my_dur = $stdlib.std.Duration.fromSeconds(600);
  const handler = new $stdlib.core.Inflight(this, \\"$Inflight53cb7ab2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.d9ddbe4c4cbf9fe35913f167f048b8fb4658daf8913df6cd090e389353cb7ab2/index.js\\")),
    bindings: {
      
      data: {
        my_bool: my_bool,
        my_dur: my_dur,
        my_num: my_num,
        my_str: my_str,
      }
    }
  });
  new cloud.Function(this,\\"cloud.Function\\",handler);
}
}
new MyApp().synth();"
`;

exports[`wing compile container_types.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_s3_bucket": {
      "root_bucket1_3A77B9B4": {
        "//": {
          "metadata": {
            "path": "root/bucket1/Default",
            "uniqueId": "root_bucket1_3A77B9B4",
          },
        },
      },
      "root_bucket2_E39F70EE": {
        "//": {
          "metadata": {
            "path": "root/bucket2/Default",
            "uniqueId": "root_bucket2_E39F70EE",
          },
        },
      },
      "root_bucket3_A0C568EA": {
        "//": {
          "metadata": {
            "path": "root/bucket3/Default",
            "uniqueId": "root_bucket3_A0C568EA",
          },
        },
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_bucket1_PublicAccessBlock_6C5071C0": {
        "//": {
          "metadata": {
            "path": "root/bucket1/PublicAccessBlock",
            "uniqueId": "root_bucket1_PublicAccessBlock_6C5071C0",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket2_PublicAccessBlock_BC328E84": {
        "//": {
          "metadata": {
            "path": "root/bucket2/PublicAccessBlock",
            "uniqueId": "root_bucket2_PublicAccessBlock_BC328E84",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket3_PublicAccessBlock_CF2593D4": {
        "//": {
          "metadata": {
            "path": "root/bucket3/PublicAccessBlock",
            "uniqueId": "root_bucket3_PublicAccessBlock_CF2593D4",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_bucket1_Encryption_33CABC1A": {
        "//": {
          "metadata": {
            "path": "root/bucket1/Encryption",
            "uniqueId": "root_bucket1_Encryption_33CABC1A",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket2_Encryption_A83E82F9": {
        "//": {
          "metadata": {
            "path": "root/bucket2/Encryption",
            "uniqueId": "root_bucket2_Encryption_A83E82F9",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket3_Encryption_A2A51E22": {
        "//": {
          "metadata": {
            "path": "root/bucket3/Encryption",
            "uniqueId": "root_bucket3_Encryption_A2A51E22",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`wing compile container_types.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile container_types.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"container_types\\" });
  
  const arr1 = Object.freeze([1, 2, 3]);
  const arr2 = Object.freeze([1, 2, 3]);
  const arr3 = Object.freeze([1, 2, 3]);
  const arr4 = Object.freeze([1, 2, 3]);
  const bucket1 = new cloud.Bucket(this,\\"bucket1\\");
  const bucket2 = new cloud.Bucket(this,\\"bucket2\\");
  const bucket3 = new cloud.Bucket(this,\\"bucket3\\");
  const arr5 = Object.freeze([bucket1, bucket2, bucket3]);
  const arr6 = Object.freeze([bucket1, bucket2, bucket3]);
  const m1 = Object.freeze({\\"a\\": 1, \\"b\\": 2, \\"c\\": 3});
  const m2 = Object.freeze({\\"a\\": 1, \\"b\\": 2, \\"c\\": 3});
  const m3 = Object.freeze({\\"a\\": 1, \\"b\\": 2, \\"c\\": 3});
  const m4 = Object.freeze({\\"a\\": 1, \\"b\\": 2, \\"c\\": 3});
  const m5 = Object.freeze({\\"a\\": bucket1, \\"b\\": bucket2, \\"c\\": bucket3});
  const m6 = Object.freeze({\\"a\\": bucket1, \\"b\\": bucket2, \\"c\\": bucket3});
  const s2 = Object.freeze(new Set([1, 2, 3]));
  const s3 = Object.freeze(new Set([1, 2, 3]));
  const s4 = Object.freeze(new Set([1, 2, 3]));
  const s6 = Object.freeze(new Set([bucket1, bucket2, bucket3]));
}
}
new MyApp().synth();"
`;

exports[`wing compile enums.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile enums.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile enums.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"enums\\" });
  
  const SomeEnum = Object.freeze((function (SomeEnum) {
    SomeEnum[SomeEnum[\\"ONE\\"] = 0] = \\"ONE\\";
    SomeEnum[SomeEnum[\\"TWO\\"] = 1] = \\"TWO\\";
    SomeEnum[SomeEnum[\\"THREE\\"] = 2] = \\"THREE\\";
    return SomeEnum;
  })({}));
  const one = SomeEnum.ONE;
  const two = SomeEnum.TWO;
}
}
new MyApp().synth();"
`;

exports[`wing compile expressions_binary_operators.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile expressions_binary_operators.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile expressions_binary_operators.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"expressions_binary_operators\\" });
  
  const x = (-1);
  const y = (2 * x);
  const z = ((x + y) - 1);
  const xyz = (((y * y) / (x * x)) * z);
  const xf = 1;
  const yf = ((-20.22) * xf);
  const zf = ((xf + yf) - (-0.01));
}
}
new MyApp().synth();"
`;

exports[`wing compile expressions_string_interpolation.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile expressions_string_interpolation.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile expressions_string_interpolation.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"expressions_string_interpolation\\" });
  
  const regular_string = \\"str\\\\n\\\\\\"\\";
  const empty_string = \\"\\";
  const number = 1;
  const cool_string = \`cool \\\\\\"\\\\\${\${regular_string}}\\\\\\" test\`;
  const really_cool_string = \`\${number}\${empty_string}\\\\n\${cool_string}\\\\n\\\\\${empty_string}\${\\"string-in-string\\"}!\`;
  const begining_with_cool_strings = \`\${regular_string} \${number} <- cool\`;
  const ending_with_cool_strings = \`cool -> \${regular_string} \${number}\`;
}
}
new MyApp().synth();"
`;

exports[`wing compile forward_decl.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile forward_decl.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile forward_decl.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"forward_decl\\" });
  
  class R
  {
  constructor() {
  }
  f;
  method2 = () => {
    (this.method1());
    {console.log(\`\${this.f}\`)};
    (this.method2());
  }
  method1 = () => {
  }
  }
  const x = \\"hi\\";
  if (true) {
    {console.log(\`\${x}\`)};
    const y = new R(this,\\"R\\");
  }
}
}
new MyApp().synth();"
`;

exports[`wing compile primitive_methods.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile primitive_methods.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile primitive_methods.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"primitive_methods\\" });
  
  const dur = $stdlib.std.Duration.fromSeconds(60);
  const stringy = \`\${dur.minutes}:\${dur.seconds}\`;
  {console.log(stringy)};
  if (((stringy.includes(\\"60\\")) && (((stringy.split(\\":\\")).at(0)) === \\"60\\"))) {
    {console.log(\`\${stringy.length}!\`)};
  }
}
}
new MyApp().synth();"
`;

exports[`wing compile print.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud.Function",
          },
        },
        "function_name": "cloud_Function",
        "handler": "index.handler",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
      },
      "root_cloudFunction_Bucket_245CAEB7": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Bucket",
            "uniqueId": "root_cloudFunction_Bucket_245CAEB7",
          },
        },
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_cloudFunction_S3Object_C8435368": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/S3Object",
            "uniqueId": "root_cloudFunction_S3Object_C8435368",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile print.w > index.js 1`] = `
"async handle(event) { const {  } = this; {
  {console.log(event)};
} };"
`;

exports[`wing compile print.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile print.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"print\\" });
  
  const bucket1 = new cloud.Bucket(this,\\"cloud.Bucket\\");
  {console.log(\\"Hello world!\\")};
  new cloud.Function(this,\\"cloud.Function\\",new $stdlib.core.Inflight(this, \\"$Inflight437a72f2\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.eeb10908f35dd17ca239f77c5c30ce7a1bd0464d804a789596c23a5b437a72f2/index.js\\")),
    bindings: {
      
      
    }
  }));
}
}
new MyApp().synth();"
`;

exports[`wing compile resource.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile resource.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile resource.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"resource\\" });
  
  class R
  {
  constructor(name) {
    this.name = name;
  }
  name;
  
  }
  const res = new R(this,\\"R\\",\\"Arr\\");
  {console.log(res.name)};
}
}
new MyApp().synth();"
`;

exports[`wing compile statements_if.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile statements_if.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile statements_if.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_if\\" });
  
  if (true) {
    const x = 2;
  }
}
}
new MyApp().synth();"
`;

exports[`wing compile statements_variable_declarations.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile statements_variable_declarations.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile statements_variable_declarations.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_variable_declarations\\" });
  
  const x = 2;
  const y = x;
}
}
new MyApp().synth();"
`;

exports[`wing compile std_containers.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile std_containers.w > index.js 1`] = `
"async handle(body) { const { s_array } = this; {
  const ss = (await s_array.at(1));
  {console.log(\`\${s_array.length}\`)};
} };"
`;

exports[`wing compile std_containers.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile std_containers.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"std_containers\\" });
  
  const s_array = Object.freeze([\\"one\\", \\"two\\", \\"three\\", \\"four\\"]);
  const s = (s_array.at(2));
  const handler = new $stdlib.core.Inflight(this, \\"$Inflightf3c444b6\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.31322868ffd7254f5a6339da1c6b1905571a70379d564da2abf4c176f3c444b6/index.js\\")),
    bindings: {
      
      data: {
        s_array: s_array,
      }
    }
  });
}
}
new MyApp().synth();"
`;

exports[`wing compile while.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile while.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile while.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"while\\" });
  
  while (false) {
    const x = 1;
  }
  const y = 123;
  while ((y < 0)) {
    const x = 1;
  }
}
}
new MyApp().synth();"
`;

exports[`wing compile while_loop_await.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.2",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudQueueOnMessage8074b1a3_IamRole_16638C11": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-8074b1a3/IamRole",
            "uniqueId": "root_cloudQueueOnMessage8074b1a3_IamRole_16638C11",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudQueueOnMessage8074b1a3_IamRolePolicy_85B1E3E1": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-8074b1a3/IamRolePolicy",
            "uniqueId": "root_cloudQueueOnMessage8074b1a3_IamRolePolicy_85B1E3E1",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"sqs:ReceiveMessage\\",\\"sqs:ChangeMessageVisibility\\",\\"sqs:GetQueueUrl\\",\\"sqs:DeleteMessage\\",\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudQueueOnMessage8074b1a3_IamRole_16638C11.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudQueueOnMessage8074b1a3_IamRolePolicyAttachment_08404984": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-8074b1a3/IamRolePolicyAttachment",
            "uniqueId": "root_cloudQueueOnMessage8074b1a3_IamRolePolicyAttachment_08404984",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudQueueOnMessage8074b1a3_IamRole_16638C11.name}",
      },
    },
    "aws_lambda_event_source_mapping": {
      "root_cloudQueue_EventSourceMapping_A2041279": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue/EventSourceMapping",
            "uniqueId": "root_cloudQueue_EventSourceMapping_A2041279",
          },
        },
        "batch_size": 1,
        "event_source_arn": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}",
        "function_name": "\${aws_lambda_function.root_cloudQueueOnMessage8074b1a3_16431E48.function_name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudQueueOnMessage8074b1a3_16431E48": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-8074b1a3/Default",
            "uniqueId": "root_cloudQueueOnMessage8074b1a3_16431E48",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud.Queue-OnMessage-8074b1a3",
          },
        },
        "function_name": "cloud_Queue-OnMessage-8074b1a3",
        "handler": "index.handler",
        "role": "\${aws_iam_role.root_cloudQueueOnMessage8074b1a3_IamRole_16638C11.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudQueueOnMessage8074b1a3_Bucket_082E383E.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudQueueOnMessage8074b1a3_S3Object_C6571977.key}",
      },
    },
    "aws_s3_bucket": {
      "root_cloudQueueOnMessage8074b1a3_Bucket_082E383E": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-8074b1a3/Bucket",
            "uniqueId": "root_cloudQueueOnMessage8074b1a3_Bucket_082E383E",
          },
        },
      },
    },
    "aws_s3_object": {
      "root_cloudQueueOnMessage8074b1a3_S3Object_C6571977": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-8074b1a3/S3Object",
            "uniqueId": "root_cloudQueueOnMessage8074b1a3_S3Object_C6571977",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudQueueOnMessage8074b1a3_Bucket_082E383E.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile while_loop_await.w > index.js 1`] = `
"async handle(j) { const {  } = this; {
  return (j + 1);
} };"
`;

exports[`wing compile while_loop_await.w > index.js 2`] = `
"async handle(body) { const {  } = this; {
  const i = 0;
  while (((await iterator(i)) < 3)) {
    {console.log(\`\${i}\`)};
  }
} };"
`;

exports[`wing compile while_loop_await.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.2",
}
`;

exports[`wing compile while_loop_await.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
    case \\"tf-azure\\":
      return $stdlib.tfazure.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"while_loop_await\\" });
  
  const queue = new cloud.Queue(this,\\"cloud.Queue\\");
  const iterator = new $stdlib.core.Inflight(this, \\"$Inflight564e0c97\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.82d0059fdbaebaab6d1be68f497052f9d5b8662f4333952a6e9ad55f564e0c97/index.js\\")),
    bindings: {
      
      
    }
  });
  const handler = new $stdlib.core.Inflight(this, \\"$Inflightcf525df6\\", {
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.f259e8d1edc5d47946ec1a1f3aa23e59fe550255ec12b899cffb307ecf525df6/index.js\\")),
    bindings: {
      
      
    }
  });
  (queue.onMessage(handler));
}
}
new MyApp().synth();"
`;
