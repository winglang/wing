// Vitest Snapshot v1

exports[`wing compile anon_function.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile anon_function.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile anon_function.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"anon_function\\" });
  
  const myfunc = (x) => {
    console.log(\`\${x}\`);
    x = (x + 1);
    if ((x > 3)) {
      return;
    }
    myfunc(x);
  };
  myfunc(1);
}
}
new MyApp().synth();"
`;

exports[`wing compile container_types.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_s3_bucket": {
      "root_bucket1_3A77B9B4": {
        "//": {
          "metadata": {
            "path": "root/bucket1/Default",
            "uniqueId": "root_bucket1_3A77B9B4",
          },
        },
      },
      "root_bucket2_E39F70EE": {
        "//": {
          "metadata": {
            "path": "root/bucket2/Default",
            "uniqueId": "root_bucket2_E39F70EE",
          },
        },
      },
      "root_bucket3_A0C568EA": {
        "//": {
          "metadata": {
            "path": "root/bucket3/Default",
            "uniqueId": "root_bucket3_A0C568EA",
          },
        },
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_bucket1_PublicAccessBlock_6C5071C0": {
        "//": {
          "metadata": {
            "path": "root/bucket1/PublicAccessBlock",
            "uniqueId": "root_bucket1_PublicAccessBlock_6C5071C0",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket2_PublicAccessBlock_BC328E84": {
        "//": {
          "metadata": {
            "path": "root/bucket2/PublicAccessBlock",
            "uniqueId": "root_bucket2_PublicAccessBlock_BC328E84",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
      "root_bucket3_PublicAccessBlock_CF2593D4": {
        "//": {
          "metadata": {
            "path": "root/bucket3/PublicAccessBlock",
            "uniqueId": "root_bucket3_PublicAccessBlock_CF2593D4",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_bucket1_Encryption_33CABC1A": {
        "//": {
          "metadata": {
            "path": "root/bucket1/Encryption",
            "uniqueId": "root_bucket1_Encryption_33CABC1A",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket1_3A77B9B4.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket2_Encryption_A83E82F9": {
        "//": {
          "metadata": {
            "path": "root/bucket2/Encryption",
            "uniqueId": "root_bucket2_Encryption_A83E82F9",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket2_E39F70EE.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
      "root_bucket3_Encryption_A2A51E22": {
        "//": {
          "metadata": {
            "path": "root/bucket3/Encryption",
            "uniqueId": "root_bucket3_Encryption_A2A51E22",
          },
        },
        "bucket": "\${aws_s3_bucket.root_bucket3_A0C568EA.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`wing compile container_types.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile container_types.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"container_types\\" });
  
  const arr1 = Object.freeze([1, 2, 3]);
  const arr2 = Object.freeze([1, 2, 3]);
  const arr3 = Object.freeze([1, 2, 3]);
  const arr4 = Object.freeze([1, 2, 3]);
  const bucket1 = new cloud.Bucket(this,\\"bucket1\\");
  const bucket2 = new cloud.Bucket(this,\\"bucket2\\");
  const bucket3 = new cloud.Bucket(this,\\"bucket3\\");
  const arr5 = Object.freeze([bucket1, bucket2, bucket3]);
}
}
new MyApp().synth();"
`;

exports[`wing compile expressions_binary_operators.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile expressions_binary_operators.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile expressions_binary_operators.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"expressions_binary_operators\\" });
  
  const x = 1;
  const y = (2 * x);
  const z = ((x + y) - 1);
  const xyz = (((y * y) / (x * x)) * z);
}
}
new MyApp().synth();"
`;

exports[`wing compile expressions_string_interpolation.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile expressions_string_interpolation.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile expressions_string_interpolation.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"expressions_string_interpolation\\" });
  
  const regular_string = \\"str\\\\n\\\\\\"\\";
  const empty_string = \\"\\";
  const number = 1;
  const cool_string = \`cool \\\\\\"\\\\\${\${regular_string}}\\\\\\" test\`;
  const really_cool_string = \`\${number}\${number}\${empty_string}\${empty_string}\\\\n\${cool_string}\${cool_string}\\\\n\\\\\${empty_string}\${\\"string-in-string\\"}!\`;
}
}
new MyApp().synth();"
`;

exports[`wing compile forward_decl.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile forward_decl.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile forward_decl.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"forward_decl\\" });
  
  class R
  {
  constructor() {
  }
  f;
  method2 = () => {
    this.method1();
    console.log(\`\${this.f}\`);
    this.method2();
  }
  method1 = () => {
  }
  }
  const x = \\"hi\\";
  if (true) {
    console.log(\`\${x}\`);
    const y = new R(this,\\"R\\");
  }
}
}
new MyApp().synth();"
`;

exports[`wing compile hello.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudQueueOnMessagef2236b9947ff57cf_IamRole_D6C82540": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-f2236b9947ff57cf/IamRole",
            "uniqueId": "root_cloudQueueOnMessagef2236b9947ff57cf_IamRole_D6C82540",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudQueueOnMessagef2236b9947ff57cf_IamRolePolicy_FFE7E6DB": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-f2236b9947ff57cf/IamRolePolicy",
            "uniqueId": "root_cloudQueueOnMessagef2236b9947ff57cf_IamRolePolicy_FFE7E6DB",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":[\\"s3:PutObject*\\",\\"s3:Abort*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:GetObject*\\",\\"s3:GetBucket*\\",\\"s3:List*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"s3:DeleteObject*\\",\\"s3:DeleteObjectVersion*\\",\\"s3:PutLifecycleConfiguration*\\"],\\"Resource\\":[\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}\\",\\"\${aws_s3_bucket.root_cloudBucket_4F3C4F53.arn}/*\\"],\\"Effect\\":\\"Allow\\"},{\\"Action\\":[\\"sqs:ReceiveMessage\\",\\"sqs:ChangeMessageVisibility\\",\\"sqs:GetQueueUrl\\",\\"sqs:DeleteMessage\\",\\"sqs:GetQueueAttributes\\"],\\"Resource\\":\\"\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}\\",\\"Effect\\":\\"Allow\\"}]}",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagef2236b9947ff57cf_IamRole_D6C82540.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudQueueOnMessagef2236b9947ff57cf_IamRolePolicyAttachment_BFEB2772": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-f2236b9947ff57cf/IamRolePolicyAttachment",
            "uniqueId": "root_cloudQueueOnMessagef2236b9947ff57cf_IamRolePolicyAttachment_BFEB2772",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagef2236b9947ff57cf_IamRole_D6C82540.name}",
      },
    },
    "aws_lambda_event_source_mapping": {
      "root_cloudQueue_EventSourceMapping_A2041279": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue/EventSourceMapping",
            "uniqueId": "root_cloudQueue_EventSourceMapping_A2041279",
          },
        },
        "batch_size": 1,
        "event_source_arn": "\${aws_sqs_queue.root_cloudQueue_E3597F7A.arn}",
        "function_name": "\${aws_lambda_function.root_cloudQueueOnMessagef2236b9947ff57cf_30A1304E.function_name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudQueueOnMessagef2236b9947ff57cf_30A1304E": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-f2236b9947ff57cf/Default",
            "uniqueId": "root_cloudQueueOnMessagef2236b9947ff57cf_30A1304E",
          },
        },
        "environment": {
          "variables": {
            "BUCKET_NAME_d755b447": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
            "WING_FUNCTION_NAME": "cloud.Queue-OnMessage-f2236b9947ff57cf",
          },
        },
        "function_name": "cloud_Queue-OnMessage-f2236b9947ff57cf",
        "handler": "index.handler",
        "role": "\${aws_iam_role.root_cloudQueueOnMessagef2236b9947ff57cf_IamRole_D6C82540.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagef2236b9947ff57cf_Bucket_580A80DD.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudQueueOnMessagef2236b9947ff57cf_S3Object_A3BC1C92.key}",
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
      },
      "root_cloudQueueOnMessagef2236b9947ff57cf_Bucket_580A80DD": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-f2236b9947ff57cf/Bucket",
            "uniqueId": "root_cloudQueueOnMessagef2236b9947ff57cf_Bucket_580A80DD",
          },
        },
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_cloudQueueOnMessagef2236b9947ff57cf_S3Object_A3BC1C92": {
        "//": {
          "metadata": {
            "path": "root/cloud.Queue-OnMessage-f2236b9947ff57cf/S3Object",
            "uniqueId": "root_cloudQueueOnMessagef2236b9947ff57cf_S3Object_A3BC1C92",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudQueueOnMessagef2236b9947ff57cf_Bucket_580A80DD.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile hello.w > index.js 1`] = `
"async function $proc({ bucket }, message) {
  bucket.put(\\"hello.txt\\",\`Hello, \${message}!\`);
  return message;
};"
`;

exports[`wing compile hello.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile hello.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"hello\\" });
  
  const bucket = new cloud.Bucket(this,\\"cloud.Bucket\\");
  const queue = new cloud.Queue(this,\\"cloud.Queue\\");
  const handler = new $stdlib.core.Inflight({
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.cefd654de30673ff4ee63c1586a3ac0e4b69217f987c07f9274ecb1c7b7e2066/index.js\\")),
    entrypoint: \\"$proc\\",
    captures: {
      bucket: {
        resource: bucket,
        methods: [\\"delete\\",\\"get\\",\\"list\\",\\"put\\"]
      },
    }
  });
  queue.onMessage(handler);
}
}
new MyApp().synth();"
`;

exports[`wing compile print.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
  "resource": {
    "aws_iam_role": {
      "root_cloudFunction_IamRole_DAEC3578": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRole",
            "uniqueId": "root_cloudFunction_IamRole_DAEC3578",
          },
        },
        "assume_role_policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Action\\":\\"sts:AssumeRole\\",\\"Principal\\":{\\"Service\\":\\"lambda.amazonaws.com\\"},\\"Effect\\":\\"Allow\\"}]}",
      },
    },
    "aws_iam_role_policy": {
      "root_cloudFunction_IamRolePolicy_AAE6C0C0": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicy",
            "uniqueId": "root_cloudFunction_IamRolePolicy_AAE6C0C0",
          },
        },
        "policy": "{\\"Version\\":\\"2012-10-17\\",\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":\\"none:null\\",\\"Resource\\":\\"*\\"}]}",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_iam_role_policy_attachment": {
      "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/IamRolePolicyAttachment",
            "uniqueId": "root_cloudFunction_IamRolePolicyAttachment_FC3D9E7C",
          },
        },
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.name}",
      },
    },
    "aws_lambda_function": {
      "root_cloudFunction_6A57BA0A": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Default",
            "uniqueId": "root_cloudFunction_6A57BA0A",
          },
        },
        "environment": {
          "variables": {
            "WING_FUNCTION_NAME": "cloud.Function",
          },
        },
        "function_name": "cloud_Function",
        "handler": "index.handler",
        "role": "\${aws_iam_role.root_cloudFunction_IamRole_DAEC3578.arn}",
        "runtime": "nodejs16.x",
        "s3_bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "s3_key": "\${aws_s3_object.root_cloudFunction_S3Object_C8435368.key}",
      },
    },
    "aws_s3_bucket": {
      "root_cloudBucket_4F3C4F53": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/Default",
            "uniqueId": "root_cloudBucket_4F3C4F53",
          },
        },
      },
      "root_cloudFunction_Bucket_245CAEB7": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/Bucket",
            "uniqueId": "root_cloudFunction_Bucket_245CAEB7",
          },
        },
      },
    },
    "aws_s3_bucket_public_access_block": {
      "root_cloudBucket_PublicAccessBlock_319C1C2E": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/PublicAccessBlock",
            "uniqueId": "root_cloudBucket_PublicAccessBlock_319C1C2E",
          },
        },
        "block_public_acls": true,
        "block_public_policy": true,
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "ignore_public_acls": true,
        "restrict_public_buckets": true,
      },
    },
    "aws_s3_bucket_server_side_encryption_configuration": {
      "root_cloudBucket_Encryption_8ED0CD9C": {
        "//": {
          "metadata": {
            "path": "root/cloud.Bucket/Encryption",
            "uniqueId": "root_cloudBucket_Encryption_8ED0CD9C",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudBucket_4F3C4F53.bucket}",
        "rule": [
          {
            "apply_server_side_encryption_by_default": {
              "sse_algorithm": "AES256",
            },
          },
        ],
      },
    },
    "aws_s3_object": {
      "root_cloudFunction_S3Object_C8435368": {
        "//": {
          "metadata": {
            "path": "root/cloud.Function/S3Object",
            "uniqueId": "root_cloudFunction_S3Object_C8435368",
          },
        },
        "bucket": "\${aws_s3_bucket.root_cloudFunction_Bucket_245CAEB7.bucket}",
        "key": "<ASSET_KEY>",
      },
    },
  },
}
`;

exports[`wing compile print.w > index.js 1`] = `
"async function $proc({  }, event) {
  console.log(event);
};"
`;

exports[`wing compile print.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile print.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"print\\" });
  
  const bucket1 = new cloud.Bucket(this,\\"cloud.Bucket\\");
  console.log(\\"Hello world!\\");
  new cloud.Function(this,\\"cloud.Function\\",new $stdlib.core.Inflight({
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, \\"proc.91c1f1c94279b3e82aa792c681ccb4640c7a071a1b60763fc83e70bf81b7f66c/index.js\\")),
    entrypoint: \\"$proc\\",
    
  }));
}
}
new MyApp().synth();"
`;

exports[`wing compile statements_if.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile statements_if.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile statements_if.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_if\\" });
  
  if (true) {
    const x = 2;
  }
}
}
new MyApp().synth();"
`;

exports[`wing compile statements_variable_declarations.w > cdk.tf.json 1`] = `
{
  "//": {
    "metadata": {
      "backend": "local",
      "stackName": "root",
      "version": "0.13.3",
    },
    "outputs": {},
  },
  "provider": {
    "aws": [
      {},
    ],
  },
}
`;

exports[`wing compile statements_variable_declarations.w > manifest.json 1`] = `
{
  "stacks": {
    "root": {
      "annotations": [],
      "constructPath": "root",
      "dependencies": [],
      "name": "root",
      "synthesizedStackPath": "stacks/root/cdk.tf.json",
      "workingDirectory": "stacks/root",
    },
  },
  "version": "0.13.3",
}
`;

exports[`wing compile statements_variable_declarations.w > preflight.js 1`] = `
"const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? \\".\\";

function __app(target) {
	switch (target) {
		case \\"sim\\":
			return $stdlib.sim.App;
		case \\"tfaws\\":
		case \\"tf-aws\\":
			return $stdlib.tfaws.App;
		default:
			throw new Error(\`Unknown WING_TARGET value: \\"\${process.env.WING_TARGET ?? \\"\\"}\\"\`);
	}
}
const $App = __app(process.env.WING_TARGET);

class MyApp extends $App {
constructor() {
  super({ outdir: $outdir, name: \\"statements_variable_declarations\\" });
  
  const x = 2;
  const y = x;
}
}
new MyApp().synth();"
`;
