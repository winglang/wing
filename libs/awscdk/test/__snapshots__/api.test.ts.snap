// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`api configured for cors 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Methods": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Origin": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Max-Age": {
                        "schema": {
                          "type": "string",
                        },
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiget05B158CAF",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "204": {
                    "description": "204 response",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                #if ($context.httpMethod == \\"OPTIONS\\")
                    {\\"statusCode\\": 204}
                #else
                    {\\"statusCode\\": 404}
                #end
              ",
                  },
                  "responses": {
                    "204": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,HEAD,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{}",
                      },
                      "statusCode": "204",
                    },
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006f966b9f7cd9b2b432eb5c29bb54b87c6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETc2e3ffa85BF93889": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiget05B158CAF",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006f966b9f7cd9b2b432eb5c29bb54b87c6",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apiget05B158CAF": {
      "DependsOn": [
        "Apiget0ServiceRole85647A81",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apiget0LogGroupB0A43FFB",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apiget0ServiceRole85647A81",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apiget0LogGroupB0A43FFB": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiget0ServiceRole85647A81": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api url can be used as environment variable 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA900631e48b71dd3d2a7c890c7b7740417862": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA900631e48b71dd3d2a7c890c7b7740417862",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Fn9270CBC0": {
      "DependsOn": [
        "FnServiceRoleB9001A96",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "API_URL": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "Apiapi93AB445C",
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "Apiapistage69F1AB31",
                  },
                  "/",
                ],
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "FnLogGroup27CC2AC8",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "FnServiceRoleB9001A96",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FnLogGroup27CC2AC8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FnServiceRoleB9001A96": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with 'name' & 'age' parameter 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/{name}/{age}": {
              "get": {
                "operationId": "get-:name/:age",
                "parameters": [
                  {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                  {
                    "in": "path",
                    "name": "age",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigetnameage0C58029A8",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90062f077666b7a242470d5f0af6cb54e2fa": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET7583b4d702B1A11B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigetnameage0C58029A8",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/{name}/{age}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90062f077666b7a242470d5f0af6cb54e2fa",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigetnameage0C58029A8": {
      "DependsOn": [
        "Apigetnameage0ServiceRole637C878A",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigetnameage0LogGroup06FA8F29",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigetnameage0ServiceRole637C878A",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigetnameage0LogGroup06FA8F29": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigetnameage0ServiceRole637C878A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with 'name' parameter 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/{name}": {
              "get": {
                "operationId": "get-:name",
                "parameters": [
                  {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigetname024AEE843",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006af4d0414e5191b586ce98d28f6b78244": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET8602bc8a990956A4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigetname024AEE843",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/{name}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006af4d0414e5191b586ce98d28f6b78244",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigetname024AEE843": {
      "DependsOn": [
        "Apigetname0ServiceRole01C11C6D",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigetname0LogGroup8430423E",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigetname0ServiceRole01C11C6D",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigetname0LogGroup8430423E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigetname0ServiceRole01C11C6D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with CONNECT route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "connect": {
                "operationId": "connect",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiconnect0BF1F155E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90062eecb976b06b1a8aede012adc45cedd4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionCONNECTc2e3ffa848E50D94": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiconnect0BF1F155E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/CONNECT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90062eecb976b06b1a8aede012adc45cedd4",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apiconnect0BF1F155E": {
      "DependsOn": [
        "Apiconnect0ServiceRole72DE9AEA",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apiconnect0LogGroup1650F1E1",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apiconnect0ServiceRole72DE9AEA",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apiconnect0LogGroup1650F1E1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiconnect0ServiceRole72DE9AEA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with DELETE route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "delete": {
                "operationId": "delete",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apidelete05373B3FD",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006f5b6f478b64f41255a52bc405b0b1f59": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionDELETEc2e3ffa888232744": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apidelete05373B3FD",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/DELETE/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006f5b6f478b64f41255a52bc405b0b1f59",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apidelete05373B3FD": {
      "DependsOn": [
        "Apidelete0ServiceRoleF822533F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apidelete0LogGroupD287E557",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apidelete0ServiceRoleF822533F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apidelete0LogGroupD287E557": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apidelete0ServiceRoleF822533F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with GET route at root 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiget05B158CAF",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90065584d3a19d622308711306be2c779d45": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETc2e3ffa85BF93889": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiget05B158CAF",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90065584d3a19d622308711306be2c779d45",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apiget05B158CAF": {
      "DependsOn": [
        "Apiget0ServiceRole85647A81",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apiget0LogGroupB0A43FFB",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apiget0ServiceRole85647A81",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apiget0LogGroupB0A43FFB": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiget0ServiceRole85647A81": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with GET routes with common prefix 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "get": {
                "operationId": "get-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellobat0AB6CDABB",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90067fe01ea071d08877f82be426b7fa297b": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET01d4e10b58D09124": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellobat0AB6CDABB",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90067fe01ea071d08877f82be426b7fa297b",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigethellobat0AB6CDABB": {
      "DependsOn": [
        "Apigethellobat0ServiceRoleE86D800F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethellobat0LogGroup462CC819",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethellobat0ServiceRoleE86D800F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethellobat0LogGroup462CC819": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethellobat0ServiceRoleE86D800F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apigethellofoo0A3E97F8E": {
      "DependsOn": [
        "Apigethellofoo0ServiceRoleA704F0C6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethellofoo0LogGroup02F88FE3",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethellofoo0ServiceRoleA704F0C6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethellofoo0LogGroup02F88FE3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethellofoo0ServiceRoleA704F0C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with GET routes with different prefix 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/foo/bar": {
              "get": {
                "operationId": "get-foo/bar",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigetfoobar0F9B27558",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006add14f5c19c807f63950eb89ae528da3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET14d002e84040D816": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigetfoobar0F9B27558",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/foo/bar",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006add14f5c19c807f63950eb89ae528da3",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigetfoobar0F9B27558": {
      "DependsOn": [
        "Apigetfoobar0ServiceRole11654E02",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigetfoobar0LogGroup83F006C8",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigetfoobar0ServiceRole11654E02",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigetfoobar0LogGroup83F006C8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigetfoobar0ServiceRole11654E02": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apigethellofoo0A3E97F8E": {
      "DependsOn": [
        "Apigethellofoo0ServiceRoleA704F0C6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethellofoo0LogGroup02F88FE3",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethellofoo0ServiceRoleA704F0C6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethellofoo0LogGroup02F88FE3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethellofoo0ServiceRoleA704F0C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with HEAD route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "head": {
                "operationId": "head",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apihead0567E4746",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90064c4722c2255408b195925a72a6c54a91": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionHEADc2e3ffa84EAE7826": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apihead0567E4746",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/HEAD/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90064c4722c2255408b195925a72a6c54a91",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apihead0567E4746": {
      "DependsOn": [
        "Apihead0ServiceRole60493D0D",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apihead0LogGroup1D4A092E",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apihead0ServiceRole60493D0D",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apihead0LogGroup1D4A092E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apihead0ServiceRole60493D0D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with OPTIONS route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "options": {
                "operationId": "options",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apioptions0E2B8210C",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006c72b16e492265df5697b564498a0bda0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionOPTIONSc2e3ffa8A347CDD2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apioptions0E2B8210C",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/OPTIONS/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006c72b16e492265df5697b564498a0bda0",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apioptions0E2B8210C": {
      "DependsOn": [
        "Apioptions0ServiceRole6285E621",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apioptions0LogGroup9252C37D",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apioptions0ServiceRole6285E621",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apioptions0LogGroup9252C37D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apioptions0ServiceRole6285E621": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with PATCH route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "patch": {
                "operationId": "patch",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apipatch0E9C679B3",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA900622411480af77d5aa223a4a205574ac7a": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionPATCHc2e3ffa81B1A24AB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apipatch0E9C679B3",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/PATCH/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA900622411480af77d5aa223a4a205574ac7a",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apipatch0E9C679B3": {
      "DependsOn": [
        "Apipatch0ServiceRole0AAEF497",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apipatch0LogGroupB991FA81",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apipatch0ServiceRole0AAEF497",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apipatch0LogGroupB991FA81": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apipatch0ServiceRole0AAEF497": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with POST route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "post": {
                "operationId": "post",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apipost088A4293C",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006b51b5d701a7af604832597fab4d8cceb": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionPOSTc2e3ffa84BF1BB79": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apipost088A4293C",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006b51b5d701a7af604832597fab4d8cceb",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apipost088A4293C": {
      "DependsOn": [
        "Apipost0ServiceRoleA5827E1D",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apipost0LogGroup0EB50BDA",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apipost0ServiceRoleA5827E1D",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apipost0LogGroup0EB50BDA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apipost0ServiceRoleA5827E1D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with PUT route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "put": {
                "operationId": "put",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiput09BCAF5CB",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA900643b5463773184a42423009af11510ad4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionPUTc2e3ffa832C407B6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiput09BCAF5CB",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA900643b5463773184a42423009af11510ad4",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apiput09BCAF5CB": {
      "DependsOn": [
        "Apiput0ServiceRoleFF8694DA",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apiput0LogGroupD231D4EA",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apiput0ServiceRoleFF8694DA",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apiput0LogGroupD231D4EA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiput0ServiceRoleFF8694DA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple GET route and one lambda 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "get": {
                "operationId": "get-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006b8d83dac42ae9c9165969e69aa7ca2c6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET01d4e10b58D09124": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006b8d83dac42ae9c9165969e69aa7ca2c6",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigethellofoo0A3E97F8E": {
      "DependsOn": [
        "Apigethellofoo0ServiceRoleA704F0C6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethellofoo0LogGroup02F88FE3",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethellofoo0ServiceRoleA704F0C6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethellofoo0LogGroup02F88FE3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethellofoo0ServiceRoleA704F0C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple methods and multiple lambda 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "post": {
                "operationId": "post-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiposthellobat0392011F7",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006797d89cd0cd50502221d9b261ead2166": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionPOST01d4e10b1C72C9D7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiposthellobat0392011F7",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/POST/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006797d89cd0cd50502221d9b261ead2166",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigethellofoo0A3E97F8E": {
      "DependsOn": [
        "Apigethellofoo0ServiceRoleA704F0C6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethellofoo0LogGroup02F88FE3",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethellofoo0ServiceRoleA704F0C6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethellofoo0LogGroup02F88FE3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethellofoo0ServiceRoleA704F0C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiposthellobat0392011F7": {
      "DependsOn": [
        "Apiposthellobat0ServiceRoleE59F22E7",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apiposthellobat0LogGroup4E1A6722",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apiposthellobat0ServiceRoleE59F22E7",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apiposthellobat0LogGroup4E1A6722": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiposthellobat0ServiceRoleE59F22E7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple methods and one lambda 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "post": {
                "operationId": "post-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethellofoo0A3E97F8E",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006a3018bfd9f41f9f0d3210e1e3fbf2b66": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionPOST01d4e10b1C72C9D7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethellofoo0A3E97F8E",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/POST/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006a3018bfd9f41f9f0d3210e1e3fbf2b66",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigethellofoo0A3E97F8E": {
      "DependsOn": [
        "Apigethellofoo0ServiceRoleA704F0C6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethellofoo0LogGroup02F88FE3",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethellofoo0ServiceRoleA704F0C6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethellofoo0LogGroup02F88FE3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethellofoo0ServiceRoleA704F0C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple methods on same route 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiget05B158CAF",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
              "put": {
                "operationId": "put",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apiget05B158CAF",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90069d73ac8bd0a03c2fa1129cdb39ac09e2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETc2e3ffa85BF93889": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiget05B158CAF",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionPUTc2e3ffa832C407B6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apiget05B158CAF",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90069d73ac8bd0a03c2fa1129cdb39ac09e2",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apiget05B158CAF": {
      "DependsOn": [
        "Apiget0ServiceRole85647A81",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apiget0LogGroupB0A43FFB",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apiget0ServiceRole85647A81",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apiget0LogGroupB0A43FFB": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiget0ServiceRole85647A81": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with path parameter 1`] = `
{
  "Outputs": {
    "ApiEndpointUrl473FEE9F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Apiapi93AB445C",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "Apiapistage69F1AB31",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/{world}": {
              "get": {
                "operationId": "get-hello/:world",
                "parameters": [
                  {
                    "in": "path",
                    "name": "world",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "Apigethelloworld0919C7F7F",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006a7a2bebf9e729cdf383b0ef6e3972bac": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET0781b9f92555BD3C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "Apigethelloworld0919C7F7F",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/*/GET/hello/{world}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006a7a2bebf9e729cdf383b0ef6e3972bac",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Apigethelloworld0919C7F7F": {
      "DependsOn": [
        "Apigethelloworld0ServiceRoleC56A0ACC",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "Apigethelloworld0LogGroupDD091C4B",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "Apigethelloworld0ServiceRoleC56A0ACC",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "Apigethelloworld0LogGroupDD091C4B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Apigethelloworld0ServiceRoleC56A0ACC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
