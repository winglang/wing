// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`schedule behavior with cron 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Schedule251B1F83": {
      "Properties": {
        "ScheduleExpression": "cron(0/1 * ? * * *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScheduleOnTick059D62C99",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScheduleAllowEventRulemyprojectScheduleOnTick0FF908B3EE22FC7ED": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ScheduleOnTick059D62C99",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Schedule251B1F83",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleOnTick059D62C99": {
      "DependsOn": [
        "ScheduleOnTick0ServiceRole37EF1AE1",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ScheduleOnTick0LogGroup389684B1",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "ScheduleOnTick0ServiceRole37EF1AE1",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleOnTick0LogGroup389684B1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ScheduleOnTick0ServiceRole37EF1AE1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`schedule behavior with rate 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Schedule251B1F83": {
      "Properties": {
        "ScheduleExpression": "rate(2 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScheduleOnTick059D62C99",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScheduleAllowEventRulemyprojectScheduleOnTick0FF908B3EE22FC7ED": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ScheduleOnTick059D62C99",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Schedule251B1F83",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleOnTick059D62C99": {
      "DependsOn": [
        "ScheduleOnTick0ServiceRole37EF1AE1",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ScheduleOnTick0LogGroup389684B1",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "ScheduleOnTick0ServiceRole37EF1AE1",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleOnTick0LogGroup389684B1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ScheduleOnTick0ServiceRole37EF1AE1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`schedule with two functions 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Schedule251B1F83": {
      "Properties": {
        "ScheduleExpression": "cron(0/1 * ? * * *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScheduleOnTick059D62C99",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScheduleAllowEventRulemyprojectScheduleOnTick0FF908B3EE22FC7ED": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ScheduleOnTick059D62C99",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Schedule251B1F83",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleOnTick059D62C99": {
      "DependsOn": [
        "ScheduleOnTick0ServiceRole37EF1AE1",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ScheduleOnTick0LogGroup389684B1",
          },
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "ScheduleOnTick0ServiceRole37EF1AE1",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleOnTick0LogGroup389684B1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ScheduleOnTick0ServiceRole37EF1AE1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
