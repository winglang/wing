{
  "tasks": {
    "api-check": {
      "name": "api-check",
      "steps": [
        {
          "exec": "wing-api-check"
        }
      ]
    },
    "api-check:watch": {
      "name": "api-check:watch",
      "steps": [
        {
          "exec": "wing-api-check --watch"
        }
      ]
    },
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "bump": {
      "name": "bump",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": "dist/changelog.md",
        "BUMPFILE": "dist/version.txt",
        "RELEASETAG": "dist/releasetag.txt",
        "RELEASE_TAG_PREFIX": ""
      },
      "steps": [
        {
          "exec": "pnpm version ${PROJEN_BUMP_VERSION:-0.0.0} --allow-same-version"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compat": {
      "name": "compat",
      "description": "Perform API compatibility check against latest version",
      "steps": [
        {
          "exec": "jsii-diff npm:$(node -p \"require('./package.json').name\") -k --ignore-file .compatignore || (echo \"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\" && exit 1)"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "jsii --silence-warnings=reserved-word"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "ts-node --project tsconfig.dev.json .projenrc.ts"
        }
      ]
    },
    "docgen": {
      "name": "docgen",
      "description": "Generate API.md from .jsii manifest",
      "steps": [
        {
          "exec": "cp -r src/cloud/*.md ../../docs/docs/04-standard-library/01-cloud/"
        },
        {
          "exec": "cp -r src/ex/*.md ../../docs/docs/04-standard-library/02-ex/"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule std"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/03-std"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the std module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/03-std/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/03-std/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule http"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/04-http"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the http module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/04-http/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/04-http/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule util"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/05-util"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the util module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/05-util/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/05-util/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule aws"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/06-aws"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the aws module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/06-aws/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/06-aws/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule math"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/07-math"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the math module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/07-math/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/07-math/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule regex"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/08-regex"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the regex module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/08-regex/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/08-regex/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule sim"
        },
        {
          "exec": "mkdir -p ../../docs/docs/04-standard-library/09-sim"
        },
        {
          "exec": "echo '---\ntitle: API reference\nid: api-reference\ndescription: Wing standard library API reference for the sim module\nkeywords: [Wing sdk, sdk, Wing API Reference]\nhide_title: true\nsidebar_position: 100\n---\n\n<!-- This file is automatically generated. Do not edit manually. -->\n' > ../../docs/docs/04-standard-library/09-sim/api-reference.md"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/09-sim/api-reference.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/api"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/api.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/bucket"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/bucket.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/counter"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/counter.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/domain"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/domain.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/function"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/function.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/on-deploy"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/on-deploy.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/queue"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/queue.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/schedule"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/schedule.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/secret"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/secret.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/service"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/service.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/topic"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/topic.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule cloud/website"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/01-cloud/website.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule ex/dynamodb-table"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/02-ex/dynamodb-table.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule ex/react-app"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/02-ex/react-app.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule ex/redis"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/02-ex/redis.md"
        },
        {
          "exec": "jsii-docgen -o API.md -l wing --submodule ex/table"
        },
        {
          "exec": "cat API.md >> ../../docs/docs/04-standard-library/02-ex/table.md"
        },
        {
          "exec": "rm API.md"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools projenrc .projenrc.ts"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "bump-pack -b"
        }
      ]
    },
    "package-all": {
      "name": "package-all",
      "description": "Packages artifacts for all target languages",
      "steps": [
        {
          "spawn": "package:js"
        }
      ]
    },
    "package:js": {
      "name": "package:js",
      "description": "Create js language bindings",
      "steps": [
        {
          "exec": "jsii-pacmak -v --target js"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation",
      "steps": [
        {
          "spawn": "api-check"
        },
        {
          "spawn": "docgen"
        }
      ]
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation",
      "steps": [
        {
          "exec": "cdktf get --force"
        }
      ]
    },
    "release": {
      "name": "release",
      "description": "Prepare a release from \"main\" branch",
      "env": {
        "RELEASE": "true"
      },
      "steps": [
        {
          "exec": "rm -fr dist"
        },
        {
          "spawn": "bump"
        },
        {
          "spawn": "build"
        },
        {
          "spawn": "unbump"
        },
        {
          "exec": "git diff --ignore-space-at-eol --exit-code"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "vitest run --coverage --update --passWithNoTests"
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run vitest in watch mode",
      "steps": [
        {
          "exec": "vitest"
        }
      ]
    },
    "unbump": {
      "name": "unbump",
      "description": "Restores version to 0.0.0",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": "dist/changelog.md",
        "BUMPFILE": "dist/version.txt",
        "RELEASETAG": "dist/releasetag.txt",
        "RELEASE_TAG_PREFIX": ""
      },
      "steps": [
        {
          "exec": "pnpm version 0.0.0 --allow-same-version"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpm update npm-check-updates"
        },
        {
          "exec": "npm-check-updates --dep dev --upgrade --target=minor --reject='cdktf-cli,constructs,jsii-rosetta,jsii,@aws-sdk/client-cloudwatch-logs,@aws-sdk/client-dynamodb,@aws-sdk/client-elasticache,@aws-sdk/client-lambda,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sns,@aws-sdk/client-sqs,@aws-sdk/is-array-buffer,@aws-sdk/s3-request-presigner,@aws-sdk/types,@aws-sdk/util-buffer-from,@aws-sdk/util-dynamodb,@aws-sdk/util-stream-node,@aws-sdk/util-utf8-node,@azure/identity,@azure/storage-blob,cdktf'"
        },
        {
          "exec": "npm-check-updates --dep bundle --upgrade --target=minor --reject='cdktf-cli,constructs,jsii-rosetta,jsii,@aws-sdk/client-cloudwatch-logs,@aws-sdk/client-dynamodb,@aws-sdk/client-elasticache,@aws-sdk/client-lambda,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sns,@aws-sdk/client-sqs,@aws-sdk/is-array-buffer,@aws-sdk/s3-request-presigner,@aws-sdk/types,@aws-sdk/util-buffer-from,@aws-sdk/util-dynamodb,@aws-sdk/util-stream-node,@aws-sdk/util-utf8-node,@azure/identity,@azure/storage-blob,cdktf'"
        },
        {
          "exec": "npm-check-updates --dep peer --upgrade --target=minor --reject='cdktf-cli,constructs,jsii-rosetta,jsii,@aws-sdk/client-cloudwatch-logs,@aws-sdk/client-dynamodb,@aws-sdk/client-elasticache,@aws-sdk/client-lambda,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sns,@aws-sdk/client-sqs,@aws-sdk/is-array-buffer,@aws-sdk/s3-request-presigner,@aws-sdk/types,@aws-sdk/util-buffer-from,@aws-sdk/util-dynamodb,@aws-sdk/util-stream-node,@aws-sdk/util-utf8-node,@azure/identity,@azure/storage-blob,cdktf'"
        },
        {
          "exec": "npm-check-updates --dep prod --upgrade --target=minor --reject='cdktf-cli,constructs,jsii-rosetta,jsii,@aws-sdk/client-cloudwatch-logs,@aws-sdk/client-dynamodb,@aws-sdk/client-elasticache,@aws-sdk/client-lambda,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sns,@aws-sdk/client-sqs,@aws-sdk/is-array-buffer,@aws-sdk/s3-request-presigner,@aws-sdk/types,@aws-sdk/util-buffer-from,@aws-sdk/util-dynamodb,@aws-sdk/util-stream-node,@aws-sdk/util-utf8-node,@azure/identity,@azure/storage-blob,cdktf'"
        },
        {
          "exec": "npm-check-updates --dep optional --upgrade --target=minor --reject='cdktf-cli,constructs,jsii-rosetta,jsii,@aws-sdk/client-cloudwatch-logs,@aws-sdk/client-dynamodb,@aws-sdk/client-elasticache,@aws-sdk/client-lambda,@aws-sdk/client-s3,@aws-sdk/client-secrets-manager,@aws-sdk/client-sns,@aws-sdk/client-sqs,@aws-sdk/is-array-buffer,@aws-sdk/s3-request-presigner,@aws-sdk/types,@aws-sdk/util-buffer-from,@aws-sdk/util-dynamodb,@aws-sdk/util-stream-node,@aws-sdk/util-utf8-node,@azure/identity,@azure/storage-blob,cdktf'"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @cdktf/provider-aws @types/aws-lambda @types/express @types/fs-extra @types/mime-types @types/node @types/uuid @typescript-eslint/eslint-plugin @typescript-eslint/parser @vitest/coverage-v8 @winglang/jsii-docgen aws-sdk-client-mock aws-sdk-client-mock-jest bump-pack cdktf-cli constructs eslint-config-prettier eslint-import-resolver-node eslint-import-resolver-typescript eslint-plugin-import eslint-plugin-prettier eslint-plugin-sort-exports eslint fs-extra jsii-diff jsii-pacmak jsii-rosetta jsii nanoid npm-check-updates prettier projen standard-version ts-node typescript vitest wing-api-checker @aws-sdk/client-cloudwatch-logs @aws-sdk/client-dynamodb @aws-sdk/client-elasticache @aws-sdk/client-lambda @aws-sdk/client-s3 @aws-sdk/client-secrets-manager @aws-sdk/client-sns @aws-sdk/client-sqs @aws-sdk/is-array-buffer @aws-sdk/s3-request-presigner @aws-sdk/types @aws-sdk/util-buffer-from @aws-sdk/util-dynamodb @aws-sdk/util-stream-node @aws-sdk/util-utf8-node @azure/core-paging @azure/identity @azure/storage-blob @types/aws-lambda aws-cdk-lib cdktf cron-parser esbuild-wasm express ioredis jsonschema mime-types nanoid safe-stable-stringify uuid yaml constructs constructs"
        },
        {
          "exec": "pnpm exec projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "jsii -w --silence-warnings=reserved-word"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run \"npx projen\"."
}
