diff --git a/node_modules/jsii/lib/assembler.js b/node_modules/jsii/lib/assembler.js
index fe972cb..caa088f 100644
--- a/node_modules/jsii/lib/assembler.js
+++ b/node_modules/jsii/lib/assembler.js
@@ -1557,9 +1557,8 @@ class Assembler {
                 this._diagnostics.push(jsii_diagnostic_1.JsiiDiagnostic.JSII_1002_UNSPECIFIED_PROMISE.create(declaration));
                 return { type: spec.CANONICAL_ANY };
             }
-            return {
-                type: this._typeReference(typeRef.typeArguments[0], declaration, purpose),
-            };
+            // (very very hacky) allow optionals to be returned from async methods
+            return this._optionalValue(typeRef.typeArguments[0], declaration, purpose);
         }
         return {
             type: { fqn: this._getFQN(type, declaration, purpose, isThisType) },
diff --git a/node_modules/jsii/lib/compiler.js b/node_modules/jsii/lib/compiler.js
index 8b94573..65529ee 100644
--- a/node_modules/jsii/lib/compiler.js
+++ b/node_modules/jsii/lib/compiler.js
@@ -17,7 +17,8 @@ const BASE_COMPILER_OPTIONS = {
     declaration: true,
     experimentalDecorators: true,
     incremental: true,
-    lib: ['lib.es2020.d.ts'],
+    lib: ['lib.es2020.d.ts','lib.dom.d.ts'],
+    esModuleInterop: true,
     module: ts.ModuleKind.CommonJS,
     newLine: ts.NewLineKind.LineFeed,
     noEmitOnError: true,
