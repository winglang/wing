diff --git a/node_modules/jsii-docgen/lib/docgen/render/markdown-doc.js b/node_modules/jsii-docgen/lib/docgen/render/markdown-doc.js
index e9d8a46..9769217 100644
--- a/node_modules/jsii-docgen/lib/docgen/render/markdown-doc.js
+++ b/node_modules/jsii-docgen/lib/docgen/render/markdown-doc.js
@@ -21,6 +21,12 @@ class MarkdownDocument {
         if (line.startsWith('-')) {
             sanitized = sanitized.substring(1, line.length).trim();
         }
+        // JSDoc tags that use "@" must be escaped with backticks to
+        // avoid getting parsed as another JSDoc tag. Sanitize away
+        // these backticks to avoid double escaping.
+        if (line.startsWith('`') && line.endsWith('`')) {
+            sanitized = sanitized.substring(1, line.length - 1).trim();
+        }
         return sanitized;
     }
     /**
@@ -43,6 +49,11 @@ class MarkdownDocument {
      * Render a docs element into the markdown.
      */
     docs(docs, language) {
+        if (docs.inflight) {
+            const sanitized = MarkdownDocument.sanitize(docs.inflight);
+            this.lines(MarkdownDocument.bold('Inflight client:') + ' [' + sanitized + '](#' + sanitized + ')');
+            this.lines('');
+        }
         if (docs.summary) {
             this.lines(MarkdownDocument.sanitize(docs.summary));
             this.lines('');
diff --git a/node_modules/jsii-docgen/lib/docgen/schema.js b/node_modules/jsii-docgen/lib/docgen/schema.js
index 3b4db1f..34e1349 100644
--- a/node_modules/jsii-docgen/lib/docgen/schema.js
+++ b/node_modules/jsii-docgen/lib/docgen/schema.js
@@ -20,6 +20,7 @@ function extractDocs(docs) {
         links: links.length > 0 ? links : undefined,
         deprecated: docs.deprecated === true ? true : undefined,
         deprecationReason: docs.deprecationReason,
+        inflight: docs.customTag('inflight'),
     });
 }
 exports.extractDocs = extractDocs;
