// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`api configured for cors 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                },
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                },
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                },
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "string",
                },
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_0-c86d29bb/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
              },
              "Content-Type": {
                "type": "string",
              },
            },
          },
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                #if ($context.httpMethod == "OPTIONS")
                    {"statusCode": 204}
                #else
                    {"statusCode": 404}
                #end
              ",
          },
          "responses": {
            "204": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,HEAD,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{}",
              },
              "statusCode": "204",
            },
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api will be private when vpc_api_gateway is true 1`] = `
{
  "data": {
    "aws_caller_identity": {
      "account": {},
    },
    "aws_region": {
      "Region": {},
    },
    "aws_vpc_endpoint_service": {
      "Api_api_apiServiceLookup_C62CF75C": {
        "service": "execute-api",
      },
    },
  },
  "output": {
    "Api_Endpoint_Url_473FEE9F": {
      "value": "https://\${aws_api_gateway_rest_api.Api_api_91C07D84.id}.execute-api.\${data.aws_region.Region.name}.amazonaws.com/\${aws_api_gateway_stage.Api_api_stage_E0FA39D6.stage_name}",
    },
  },
  "resource": {
    "aws_api_gateway_deployment": {
      "Api_api_deployment_7FB64CC4": {
        "lifecycle": {
          "create_before_destroy": true,
        },
        "rest_api_id": "\${aws_api_gateway_rest_api.Api_api_91C07D84.id}",
        "triggers": {
          "redeployment": "\${sha256(aws_api_gateway_rest_api.Api_api_91C07D84.body)}",
        },
      },
    },
    "aws_api_gateway_rest_api": {
      "Api_api_91C07D84": {
        "body": "{"paths":{"/{proxy+}":{"x-amazon-apigateway-any-method":{"produces":["application/json"],"x-amazon-apigateway-integration":{"type":"mock","requestTemplates":{"application/json":"\\n                {\\"statusCode\\": 404}\\n              "},"passthroughBehavior":"never","responses":{"404":{"statusCode":"404","responseParameters":{"method.response.header.Content-Type":"'application/json'"},"responseTemplates":{"application/json":"{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}"}},"default":{"statusCode":"404","responseParameters":{"method.response.header.Content-Type":"'application/json'"},"responseTemplates":{"application/json":"{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}"}}}},"responses":{"404":{"description":"404 response","headers":{"Content-Type":{"type":"string"}}}}}}},"openapi":"3.0.3"}",
        "endpoint_configuration": {
          "types": [
            "PRIVATE",
          ],
          "vpc_endpoint_ids": [
            "\${aws_vpc_endpoint.Api_api_api-vpc-endpoint_F7BB1063.id}",
          ],
        },
        "lifecycle": {
          "create_before_destroy": true,
        },
        "name": "api-c8f613f0",
        "policy": "{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":"*","Action":"execute-api:Invoke","Resource":["*"]},{"Effect":"Deny","Principal":"*","Action":"execute-api:Invoke","Resource":["*"],"Condition":{"StringNotEquals":{"aws:sourceVpce":"\${aws_vpc_endpoint.Api_api_api-vpc-endpoint_F7BB1063.id}"}}}]}",
      },
    },
    "aws_api_gateway_stage": {
      "Api_api_stage_E0FA39D6": {
        "deployment_id": "\${aws_api_gateway_deployment.Api_api_deployment_7FB64CC4.id}",
        "rest_api_id": "\${aws_api_gateway_rest_api.Api_api_91C07D84.id}",
        "stage_name": "prod",
      },
    },
    "aws_eip": {
      "EIP": {},
    },
    "aws_internet_gateway": {
      "InternetGateway": {
        "tags": {
          "Name": "Default-c82bf964-internet-gateway",
        },
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
    },
    "aws_nat_gateway": {
      "NATGateway": {
        "allocation_id": "\${aws_eip.EIP.id}",
        "subnet_id": "\${aws_subnet.PublicSubnet.id}",
        "tags": {
          "Name": "Default-c82bf964-nat-gateway",
        },
      },
    },
    "aws_route_table": {
      "PrivateRouteTable": {
        "route": [
          {
            "carrier_gateway_id": null,
            "cidr_block": "0.0.0.0/0",
            "core_network_arn": null,
            "destination_prefix_list_id": null,
            "egress_only_gateway_id": null,
            "gateway_id": null,
            "ipv6_cidr_block": null,
            "local_gateway_id": null,
            "nat_gateway_id": "\${aws_nat_gateway.NATGateway.id}",
            "network_interface_id": null,
            "transit_gateway_id": null,
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": null,
          },
        ],
        "tags": {
          "Name": "Default-c82bf964-private-route-table-1",
        },
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
      "PublicRouteTable": {
        "route": [
          {
            "carrier_gateway_id": null,
            "cidr_block": "0.0.0.0/0",
            "core_network_arn": null,
            "destination_prefix_list_id": null,
            "egress_only_gateway_id": null,
            "gateway_id": "\${aws_internet_gateway.InternetGateway.id}",
            "ipv6_cidr_block": null,
            "local_gateway_id": null,
            "nat_gateway_id": null,
            "network_interface_id": null,
            "transit_gateway_id": null,
            "vpc_endpoint_id": null,
            "vpc_peering_connection_id": null,
          },
        ],
        "tags": {
          "Name": "Default-c82bf964-public-route-table-1",
        },
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
    },
    "aws_route_table_association": {
      "PrivateRouteTableAssociation": {
        "route_table_id": "\${aws_route_table.PrivateRouteTable.id}",
        "subnet_id": "\${aws_subnet.PrivateSubnet.id}",
      },
      "PublicRouteTableAssociation": {
        "route_table_id": "\${aws_route_table.PublicRouteTable.id}",
        "subnet_id": "\${aws_subnet.PublicSubnet.id}",
      },
    },
    "aws_security_group": {
      "Api_api_apiSecurityGroup_CF67DC80": {
        "ingress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0",
            ],
            "description": null,
            "from_port": 0,
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_groups": null,
            "self": null,
            "to_port": 0,
          },
        ],
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
    },
    "aws_subnet": {
      "PrivateSubnet": {
        "availability_zone": "\${data.aws_region.Region.name}a",
        "cidr_block": "10.0.4.0/22",
        "tags": {
          "Name": "Default-c82bf964-private-subnet-1",
        },
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
      "PublicSubnet": {
        "availability_zone": "\${data.aws_region.Region.name}a",
        "cidr_block": "10.0.0.0/24",
        "tags": {
          "Name": "Default-c82bf964-public-subnet-1",
        },
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
    },
    "aws_vpc": {
      "VPC": {
        "cidr_block": "10.0.0.0/16",
        "enable_dns_hostnames": true,
        "enable_dns_support": true,
        "tags": {
          "Name": "Default-c82bf964-vpc",
        },
      },
    },
    "aws_vpc_endpoint": {
      "Api_api_api-vpc-endpoint_F7BB1063": {
        "private_dns_enabled": true,
        "security_group_ids": [
          "\${aws_security_group.Api_api_apiSecurityGroup_CF67DC80.id}",
        ],
        "service_name": "\${data.aws_vpc_endpoint_service.Api_api_apiServiceLookup_C62CF75C.service_name}",
        "subnet_ids": [
          "\${aws_subnet.PrivateSubnet.id}",
        ],
        "vpc_endpoint_type": "Interface",
        "vpc_id": "\${aws_vpc.VPC.id}",
      },
    },
  },
}
`;

exports[`api with 'name' & 'age' parameter 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/{name}/{age}": {
      "get": {
        "operationId": "get-:name/:age",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "path",
            "name": "age",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_-name_-age0-c8483afe/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with 'name' parameter 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/{name}": {
      "get": {
        "operationId": "get-:name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_-name0-c8d13803/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with CONNECT route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "connect": {
        "operationId": "connect",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:connect_0-c83420d1/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with DELETE route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "delete": {
        "operationId": "delete",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:delete_0-c85ab39c/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with GET route at root 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_0-c86d29bb/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with GET routes with common prefix 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "get": {
        "operationId": "get-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_bat0-c8a08a1c/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with GET routes with different prefix 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/foo/bar": {
      "get": {
        "operationId": "get-foo/bar",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_foo_bar0-c8d108f9/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with HEAD route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "head": {
        "operationId": "head",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:head_0-c857e3ff/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with OPTIONS route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "options": {
        "operationId": "options",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:options_0-c8aab680/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with PATCH route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "patch": {
        "operationId": "patch",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:patch_0-c8eaba1e/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with POST route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "post": {
        "operationId": "post",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:post_0-c8d25f85/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with PUT route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "put": {
        "operationId": "put",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:put_0-c80fcd0a/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with multiple GET route and one lambda 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "get": {
        "operationId": "get-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with multiple methods and multiple lambda 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "post": {
        "operationId": "post-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:post_hello_bat0-c8596849/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with multiple methods and one lambda 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "post": {
        "operationId": "post-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_foo0-c82c3421/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with multiple methods on same route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_0-c86d29bb/invocations",
        },
      },
      "put": {
        "operationId": "put",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_0-c86d29bb/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;

exports[`api with path parameter 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/{world}": {
      "get": {
        "operationId": "get-hello/:world",
        "parameters": [
          {
            "in": "path",
            "name": "world",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/arn:aws:lambda:\${data.aws_region.Region.name}:\${data.aws_caller_identity.account.account_id}:function:get_hello_-world0-c81e38f8/invocations",
        },
      },
    },
    "/{proxy+}": {
      "x-amazon-apigateway-any-method": {
        "produces": [
          "application/json",
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "
                {"statusCode": 404}
              ",
          },
          "responses": {
            "404": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
            "default": {
              "responseParameters": {
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{"statusCode": 404, "message": "Error: Resource not found"}",
              },
              "statusCode": "404",
            },
          },
          "type": "mock",
        },
      },
    },
  },
}
`;
