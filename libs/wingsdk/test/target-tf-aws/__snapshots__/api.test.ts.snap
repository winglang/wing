// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`api configured for cors 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                },
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                },
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                },
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "string",
                },
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get__0_28A24394.arn}/invocations",
        },
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
              },
              "Content-Type": {
                "type": "string",
              },
            },
          },
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "{\\"statusCode\\": 204}",
          },
          "responses": {
            "204": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,HEAD,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Content-Type": "'application/json'",
              },
              "responseTemplates": {
                "application/json": "{}",
              },
              "statusCode": "204",
            },
          },
          "type": "mock",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with 'name' & 'age' parameter 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/{name}/{age}": {
      "get": {
        "operationId": "get-:name/:age",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "path",
            "name": "age",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_name_age_0_89726BCD.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with 'name' parameter 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/{name}": {
      "get": {
        "operationId": "get-:name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_name_0_91363CD1.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with CONNECT route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "connect": {
        "operationId": "connect",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_connect__0_51B16936.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with DELETE route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "delete": {
        "operationId": "delete",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_delete__0_114F7202.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with GET route at root 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get__0_28A24394.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with GET routes with common prefix 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "get": {
        "operationId": "get-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with GET routes with different prefix 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/foo/bar": {
      "get": {
        "operationId": "get-foo/bar",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with HEAD route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "head": {
        "operationId": "head",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_head__0_C5A391F7.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with OPTIONS route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "options": {
        "operationId": "options",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_options__0_87A882E5.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with PATCH route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "patch": {
        "operationId": "patch",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_patch__0_2A535309.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with POST route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "post": {
        "operationId": "post",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_post__0_FC38D853.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with PUT route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "put": {
        "operationId": "put",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_put__0_C3CFB295.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with multiple GET route and one lambda 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "get": {
        "operationId": "get-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with multiple methods and multiple lambda 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "post": {
        "operationId": "post-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with multiple methods and one lambda 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/bat": {
      "post": {
        "operationId": "post-hello/bat",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
    "/hello/foo": {
      "get": {
        "operationId": "get-hello/foo",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_foo_0_2252DDE1.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with multiple methods on same route 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get__0_28A24394.arn}/invocations",
        },
      },
      "put": {
        "operationId": "put",
        "parameters": [],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get__0_28A24394.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;

exports[`api with path parameter 1`] = `
{
  "openapi": "3.0.3",
  "paths": {
    "/hello/{world}": {
      "get": {
        "operationId": "get-hello/:world",
        "parameters": [
          {
            "in": "path",
            "name": "world",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "200 response",
          },
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200",
            },
          },
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:\${data.aws_region.Region.name}:lambda:path/2015-03-31/functions/\${aws_lambda_function.Api_get_hello_world_0_DAB3CC5C.arn}/invocations",
        },
      },
    },
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "responseTemplates": {
        "application/json": "{\\"message\\": $context.error.messageString }",
      },
      "statusCode": "404",
    },
  },
}
`;
