// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`array 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture.length === 2)) { throw new Error(\`assertion failed: \\"this.my_capture.length === 2\\"\`); }
if (!(this.my_capture[0] === \\"hello\\")) { throw new Error(\`assertion failed: \\"this.my_capture[0] === \\\\\\"hello\\\\\\"\\"\`); }
if (!(this.my_capture[1] === \\"dude\\")) { throw new Error(\`assertion failed: \\"this.my_capture[1] === \\\\\\"dude\\\\\\"\\"\`); }

}
};
})())({
my_capture: [\\"hello\\",\\"dude\\"]
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`array of durations 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_array.length === 2)) { throw new Error(\`assertion failed: \\"this.my_array.length === 2\\"\`); }
if (!(this.my_array[0].minutes === 10)) { throw new Error(\`assertion failed: \\"this.my_array[0].minutes === 10\\"\`); }
if (!(this.my_array[1].minutes === 20)) { throw new Error(\`assertion failed: \\"this.my_array[1].minutes === 20\\"\`); }

}
};
})())({
my_array: [(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(600)),(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(1200))]
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`array of maps 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_array[0].get('foo') === 1)) { throw new Error(\`assertion failed: \\"this.my_array[0].get('foo') === 1\\"\`); }
if (!(this.my_array[1].get('bar') === 4)) { throw new Error(\`assertion failed: \\"this.my_array[1].get('bar') === 4\\"\`); }

}
};
})())({
my_array: [new Map([[\\"foo\\",1],[\\"bar\\",2]]),new Map([[\\"foo\\",3],[\\"bar\\",4]])]
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`boolean 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture === false)) { throw new Error(\`assertion failed: \\"this.my_capture === false\\"\`); }

}
};
})())({
my_capture: false
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`duration 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture.minutes === 120)) { throw new Error(\`assertion failed: \\"this.my_capture.minutes === 120\\"\`); }
if (!(this.my_capture.seconds === 7200)) { throw new Error(\`assertion failed: \\"this.my_capture.seconds === 7200\\"\`); }
if (!(this.my_capture.hours === 2)) { throw new Error(\`assertion failed: \\"this.my_capture.hours === 2\\"\`); }

}
};
})())({
my_capture: (new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(7200))
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`map 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture.has(\\"foo\\"))) { throw new Error(\`assertion failed: \\"this.my_capture.has(\\\\\\"foo\\\\\\")\\"\`); }
if (!(this.my_capture.has(\\"bar\\"))) { throw new Error(\`assertion failed: \\"this.my_capture.has(\\\\\\"bar\\\\\\")\\"\`); }
if (!(this.my_capture.size === 2)) { throw new Error(\`assertion failed: \\"this.my_capture.size === 2\\"\`); }
if (!(this.my_capture.get(\\"foo\\") === 123)) { throw new Error(\`assertion failed: \\"this.my_capture.get(\\\\\\"foo\\\\\\") === 123\\"\`); }
if (!(this.my_capture.get(\\"bar\\") === 456)) { throw new Error(\`assertion failed: \\"this.my_capture.get(\\\\\\"bar\\\\\\") === 456\\"\`); }

}
};
})())({
my_capture: new Map([[\\"foo\\",123],[\\"bar\\",456]])
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`map of arrays 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_map.has(\\"foo\\"))) { throw new Error(\`assertion failed: \\"this.my_map.has(\\\\\\"foo\\\\\\")\\"\`); }
if (!(this.my_map.has(\\"bar\\"))) { throw new Error(\`assertion failed: \\"this.my_map.has(\\\\\\"bar\\\\\\")\\"\`); }
if (!(this.my_map.size === 2)) { throw new Error(\`assertion failed: \\"this.my_map.size === 2\\"\`); }
if (!(this.my_map.get(\\"foo\\")[0] === 1)) { throw new Error(\`assertion failed: \\"this.my_map.get(\\\\\\"foo\\\\\\")[0] === 1\\"\`); }
if (!(this.my_map.get(\\"foo\\")[1] === 2)) { throw new Error(\`assertion failed: \\"this.my_map.get(\\\\\\"foo\\\\\\")[1] === 2\\"\`); }
if (!(this.my_map.get(\\"bar\\")[0] === 3)) { throw new Error(\`assertion failed: \\"this.my_map.get(\\\\\\"bar\\\\\\")[0] === 3\\"\`); }
if (!(this.my_map.get(\\"bar\\")[1] === 4)) { throw new Error(\`assertion failed: \\"this.my_map.get(\\\\\\"bar\\\\\\")[1] === 4\\"\`); }

}
};
})())({
my_map: new Map([[\\"foo\\",[1,2]],[\\"bar\\",[3,4]]])
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`map of arrays of durations 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_map.get('foo')[0].minutes === 10)) { throw new Error(\`assertion failed: \\"this.my_map.get('foo')[0].minutes === 10\\"\`); }
if (!(this.my_map.get('foo')[1].seconds === 20 * 60)) { throw new Error(\`assertion failed: \\"this.my_map.get('foo')[1].seconds === 20 * 60\\"\`); }
if (!(this.my_map.get('bar')[0].minutes === 30)) { throw new Error(\`assertion failed: \\"this.my_map.get('bar')[0].minutes === 30\\"\`); }
if (!(this.my_map.get('bar')[1].seconds === 40 * 60)) { throw new Error(\`assertion failed: \\"this.my_map.get('bar')[1].seconds === 40 * 60\\"\`); }

}
};
})())({
my_map: new Map([[\\"foo\\",[(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(600)),(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(1200))]],[\\"bar\\",[(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(1800)),(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(2400))]]])
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`number 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture + 20 === 143)) { throw new Error(\`assertion failed: \\"this.my_capture + 20 === 143\\"\`); }

}
};
})())({
my_capture: 123
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`set 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture.has(\\"boom\\"))) { throw new Error(\`assertion failed: \\"this.my_capture.has(\\\\\\"boom\\\\\\")\\"\`); }
if (!(this.my_capture.has(\\"bam\\"))) { throw new Error(\`assertion failed: \\"this.my_capture.has(\\\\\\"bam\\\\\\")\\"\`); }
if (!(this.my_capture.has(\\"bang\\"))) { throw new Error(\`assertion failed: \\"this.my_capture.has(\\\\\\"bang\\\\\\")\\"\`); }
if (!(this.my_capture.size === 3)) { throw new Error(\`assertion failed: \\"this.my_capture.size === 3\\"\`); }

}
};
})())({
my_capture: new Set([\\"boom\\",\\"bam\\",\\"bang\\"])
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`set of durations 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(Array.from(this.my_set)[0].minutes === 10)) { throw new Error(\`assertion failed: \\"Array.from(this.my_set)[0].minutes === 10\\"\`); }
if (!(Array.from(this.my_set)[0].hours === 0.16666666666666666)) { throw new Error(\`assertion failed: \\"Array.from(this.my_set)[0].hours === 0.16666666666666666\\"\`); }
if (!(Array.from(this.my_set)[1].seconds === 1200)) { throw new Error(\`assertion failed: \\"Array.from(this.my_set)[1].seconds === 1200\\"\`); }

}
};
})())({
my_set: new Set([(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(600)),(new (require(\\"[REDACTED]/wingsdk/src/std/duration.js\\").Duration)(1200))])
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`string 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture.length === 11)) { throw new Error(\`assertion failed: \\"this.my_capture.length === 11\\"\`); }
if (!(this.my_capture === \\"bam bam bam\\")) { throw new Error(\`assertion failed: \\"this.my_capture === \\\\\\"bam bam bam\\\\\\"\\"\`); }

}
};
})())({
my_capture: \\"bam bam bam\\"
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`struct 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_capture.hello === \\"dude\\")) { throw new Error(\`assertion failed: \\"this.my_capture.hello === \\\\\\"dude\\\\\\"\\"\`); }
if (!(this.my_capture.world === \\"cup\\")) { throw new Error(\`assertion failed: \\"this.my_capture.world === \\\\\\"cup\\\\\\"\\"\`); }
if (!(this.my_capture.foo === \\"bar\\")) { throw new Error(\`assertion failed: \\"this.my_capture.foo === \\\\\\"bar\\\\\\"\\"\`); }
if (!(Object.keys(this.my_capture).length === 3)) { throw new Error(\`assertion failed: \\"Object.keys(this.my_capture).length === 3\\"\`); }

}
};
})())({
my_capture: {\\"hello\\": \\"dude\\",\\"world\\": \\"cup\\",\\"foo\\": \\"bar\\",}
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`struct of maps 1`] = `
{
  ".wing/function_c8e6b4af.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
if (!(this.my_struct.foo.get('foo') === 1)) { throw new Error(\`assertion failed: \\"this.my_struct.foo.get('foo') === 1\\"\`); }
if (!(this.my_struct.foo.get('bar') === 2)) { throw new Error(\`assertion failed: \\"this.my_struct.foo.get('bar') === 2\\"\`); }
if (!(this.my_struct.bar.get('foo') === 3)) { throw new Error(\`assertion failed: \\"this.my_struct.bar.get('foo') === 3\\"\`); }
if (!(this.my_struct.bar.get('bar') === 4)) { throw new Error(\`assertion failed: \\"this.my_struct.bar.get('bar') === 4\\"\`); }

}
};
})())({
my_struct: {\\"foo\\": new Map([[\\"foo\\",1],[\\"bar\\",2]]),\\"bar\\": new Map([[\\"foo\\",3],[\\"bar\\",4]]),}
}));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e6b4af896782ab4057ebb2193266e56b0b6dfeb0",
        "attrs": {},
        "path": "root/Function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function_c8e6b4af.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function",
          "path": "root/Function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
