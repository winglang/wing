// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can create sequential files in a bucket 1`] = `
Object {
  "app.wsim/simulator.json": Object {
    "resources": Array [
      Object {
        "attrs": Object {},
        "path": "root/HelloWorld/Counter",
        "props": Object {
          "initial": 1000,
        },
        "type": "wingsdk.cloud.Counter",
      },
      Object {
        "attrs": Object {},
        "path": "root/HelloWorld/Bucket",
        "props": Object {
          "public": false,
        },
        "type": "wingsdk.cloud.Bucket",
      },
      Object {
        "attrs": Object {},
        "path": "root/WingLogger",
        "props": Object {},
        "type": "wingsdk.cloud.Logger",
      },
      Object {
        "attrs": Object {},
        "path": "root/HelloWorld/Queue-OnMessage-401ee792",
        "props": Object {
          "environmentVariables": Object {
            "BUCKET_HANDLE_5f2a41c8": "\${root/HelloWorld/Bucket#attrs.handle}",
            "COUNTER_HANDLE_4ecd8d46": "\${root/HelloWorld/Counter#attrs.handle}",
            "LOGGER_HANDLE_76f7e65b": "\${root/WingLogger#attrs.handle}",
          },
          "sourceCodeFile": "assets/Queue-OnMessage-401ee792/index.js",
          "sourceCodeLanguage": "javascript",
        },
        "type": "wingsdk.cloud.Function",
      },
      Object {
        "attrs": Object {},
        "path": "root/HelloWorld/Queue",
        "props": Object {
          "initialMessages": Array [],
          "subscribers": Array [
            Object {
              "batchSize": 1,
              "functionHandle": "\${root/HelloWorld/Queue-OnMessage-401ee792#attrs.handle}",
            },
          ],
          "timeout": 30,
        },
        "type": "wingsdk.cloud.Queue",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "assets/Queue-OnMessage-401ee792/index.js": "var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

var queue_onmessage_inflight_exports = {};
__export(queue_onmessage_inflight_exports, {
  QueueOnMessageHandlerClient: () => QueueOnMessageHandlerClient
});
var QueueOnMessageHandlerClient;
var init_queue_onmessage_inflight = __esm({
  \\"[REDACTED]/wingsdk/src/target-sim/queue.onmessage.inflight.ts\\"() {
    \\"use strict\\";
    QueueOnMessageHandlerClient = class {
      constructor({ handler }) {
        this.handler = handler;
      }
      async handle(event) {
        let parsed = JSON.parse(event);
        if (!parsed.messages)
          throw new Error('No \\"messages\\" field in event.');
        for (const $message of parsed.messages) {
          await this.handler.handle($message);
        }
      }
    };
  }
});

var $logger = function(env) {
  let handle = process.env[env];
  if (!handle) {
    throw new Error(\\"Missing environment variable: \\" + env);
  }
  return $simulator.findInstance(handle);
}(\\"LOGGER_HANDLE_76f7e65b\\");
console.log = (...args) => $logger.print(...args);
exports.handler = async function(event) {
  return await new (init_queue_onmessage_inflight(), __toCommonJS(queue_onmessage_inflight_exports)).QueueOnMessageHandlerClient({ handler: new (function() {
    return class Handler {
      constructor(clients) {
        for (const [name, client] of Object.entries(clients)) {
          this[name] = client;
        }
      }
      async handle(event2) {
        let next = await this.counter.inc();
        let key = \\"file-\\" + next + \\".txt\\";
        await this.bucket.put(key, event2);
      }
    };
  }())({
    counter: function(env) {
      let handle = process.env[env];
      if (!handle) {
        throw new Error(\\"Missing environment variable: \\" + env);
      }
      return $simulator.findInstance(handle);
    }(\\"COUNTER_HANDLE_4ecd8d46\\"),
    bucket: function(env) {
      let handle = process.env[env];
      if (!handle) {
        throw new Error(\\"Missing environment variable: \\" + env);
      }
      return $simulator.findInstance(handle);
    }(\\"BUCKET_HANDLE_5f2a41c8\\")
  }) }).handle(event);
};
",
  "tree.json": Object {
    "tree": Object {
      "children": Object {
        "HelloWorld": Object {
          "children": Object {
            "Bucket": Object {
              "attributes": Object {
                "wing:resource:connections": Array [
                  Object {
                    "direction": "inbound",
                    "implicit": false,
                    "relationship": "put",
                    "resource": "root/HelloWorld/Queue-OnMessage-401ee792",
                  },
                ],
                "wing:resource:stateful": true,
              },
              "constructInfo": Object {
                "fqn": "constructs.Construct",
                "version": "10.0.130",
              },
              "display": Object {
                "description": "A cloud object store",
                "title": "Bucket",
              },
              "id": "Bucket",
              "path": "root/HelloWorld/Bucket",
            },
            "Counter": Object {
              "attributes": Object {
                "wing:resource:connections": Array [
                  Object {
                    "direction": "inbound",
                    "implicit": false,
                    "relationship": "inc",
                    "resource": "root/HelloWorld/Queue-OnMessage-401ee792",
                  },
                ],
                "wing:resource:stateful": true,
              },
              "constructInfo": Object {
                "fqn": "constructs.Construct",
                "version": "10.0.130",
              },
              "display": Object {
                "description": "A distributed atomic counter",
                "title": "Counter",
              },
              "id": "Counter",
              "path": "root/HelloWorld/Counter",
            },
            "Processor": Object {
              "attributes": Object {
                "wing:resource:connections": Array [
                  Object {
                    "direction": "inbound",
                    "implicit": false,
                    "relationship": "handle",
                    "resource": "root/HelloWorld/Queue-OnMessage-401ee792",
                  },
                ],
                "wing:resource:stateful": false,
              },
              "constructInfo": Object {
                "fqn": "constructs.Construct",
                "version": "10.0.130",
              },
              "display": Object {
                "description": "An inflight resource",
                "hidden": true,
                "title": "Inflight",
              },
              "id": "Processor",
              "path": "root/HelloWorld/Processor",
            },
            "Queue": Object {
              "attributes": Object {
                "wing:resource:connections": Array [
                  Object {
                    "direction": "outbound",
                    "implicit": false,
                    "relationship": "on_message",
                    "resource": "root/HelloWorld/Queue-OnMessage-401ee792",
                  },
                ],
                "wing:resource:stateful": true,
              },
              "constructInfo": Object {
                "fqn": "constructs.Construct",
                "version": "10.0.130",
              },
              "display": Object {
                "description": "A distributed message queue",
                "title": "Queue",
              },
              "id": "Queue",
              "path": "root/HelloWorld/Queue",
            },
            "Queue-OnMessage-401ee792": Object {
              "attributes": Object {
                "wing:resource:connections": Array [
                  Object {
                    "direction": "outbound",
                    "implicit": false,
                    "relationship": "inc",
                    "resource": "root/HelloWorld/Counter",
                  },
                  Object {
                    "direction": "outbound",
                    "implicit": false,
                    "relationship": "put",
                    "resource": "root/HelloWorld/Bucket",
                  },
                  Object {
                    "direction": "outbound",
                    "implicit": false,
                    "relationship": "handle",
                    "resource": "root/HelloWorld/Processor",
                  },
                  Object {
                    "direction": "outbound",
                    "implicit": true,
                    "relationship": "print",
                    "resource": "root/WingLogger",
                  },
                  Object {
                    "direction": "inbound",
                    "implicit": false,
                    "relationship": "on_message",
                    "resource": "root/HelloWorld/Queue",
                  },
                ],
                "wing:resource:stateful": false,
              },
              "children": Object {
                "Code": Object {
                  "constructInfo": Object {
                    "fqn": "constructs.Construct",
                    "version": "10.0.130",
                  },
                  "id": "Code",
                  "path": "root/HelloWorld/Queue-OnMessage-401ee792/Code",
                },
              },
              "constructInfo": Object {
                "fqn": "constructs.Construct",
                "version": "10.0.130",
              },
              "display": Object {
                "description": "A cloud function (FaaS)",
                "title": "Function",
              },
              "id": "Queue-OnMessage-401ee792",
              "path": "root/HelloWorld/Queue-OnMessage-401ee792",
            },
            "Queue-OnMessageHandler-401ee792": Object {
              "attributes": Object {
                "wing:resource:connections": Array [],
                "wing:resource:stateful": false,
              },
              "constructInfo": Object {
                "fqn": "constructs.Construct",
                "version": "10.0.130",
              },
              "id": "Queue-OnMessageHandler-401ee792",
              "path": "root/HelloWorld/Queue-OnMessageHandler-401ee792",
            },
          },
          "constructInfo": Object {
            "fqn": "constructs.Construct",
            "version": "10.0.130",
          },
          "id": "HelloWorld",
          "path": "root/HelloWorld",
        },
        "WingLogger": Object {
          "attributes": Object {
            "wing:resource:connections": Array [
              Object {
                "direction": "inbound",
                "implicit": true,
                "relationship": "print",
                "resource": "root/HelloWorld/Queue-OnMessage-401ee792",
              },
            ],
            "wing:resource:stateful": true,
          },
          "constructInfo": Object {
            "fqn": "constructs.Construct",
            "version": "10.0.130",
          },
          "display": Object {
            "description": "A cloud logging facility",
            "hidden": true,
            "title": "Logger",
          },
          "id": "WingLogger",
          "path": "root/WingLogger",
        },
      },
      "constructInfo": Object {
        "fqn": "constructs.Construct",
        "version": "10.0.130",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
