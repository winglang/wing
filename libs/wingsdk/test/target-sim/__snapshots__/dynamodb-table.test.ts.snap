// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create a table 1`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c80d8c0710fc41df32eaa9895ae0bbd6cfd22762c2",
        "attrs": {},
        "path": "root/create_table",
        "props": {
          "attributeDefinitions": {
            "id": "S",
          },
          "hashKey": "id",
          "hostPort": "\${wsim#root/create_table/Container#attrs.host_port}",
          "name": "new_table",
        },
        "type": "@winglang/sdk.ex.DynamodbTable",
      },
      {
        "addr": "c82d9c21ab6a376c9bcdf5239702cd3d3a582b5e50",
        "attrs": {},
        "path": "root/create_table/Container",
        "props": {
          "containerPort": 8000,
          "cwd": "<ABSOLUTE PATH>/test",
          "image": "amazon/dynamodb-local:2.0.0",
          "imageTag": "amazon/dynamodb-local:2.0.0",
        },
        "type": "@winglang/sdk.sim.Container",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "create_table": {
          "children": {
            "Container": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {},
              "id": "Container",
              "path": "root/create_table/Container",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A DynamoDb Table",
            "title": "DynamodbTable",
          },
          "id": "create_table",
          "path": "root/create_table",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`get item 1`] = `
[
  "image amazon/dynamodb-local:<port>.0.0 already exists",
  "starting container from image amazon/dynamodb-local:<port>.0.0",
  "docker run --detach --rm --name wing-container-<container> -p 8000 amazon/dynamodb-local:<port>.0.0",
  "containerName=wing-container-<container>",
  "root/get_table/Container started",
  "root/get_table started",
  "root/get_table stopped",
  "Stopping container wing-container-<container>",
  "root/get_table/Container stopped",
]
`;

exports[`get item 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8b976f0619d4aad0e4bb55cbda7b8975704b8b11a",
        "attrs": {},
        "path": "root/get_table",
        "props": {
          "attributeDefinitions": {
            "id": "S",
          },
          "hashKey": "id",
          "hostPort": "\${wsim#root/get_table/Container#attrs.host_port}",
          "name": "my_get_table",
        },
        "type": "@winglang/sdk.ex.DynamodbTable",
      },
      {
        "addr": "c8b10674f74fa0a89c85159f18ee72997a19272e1a",
        "attrs": {},
        "path": "root/get_table/Container",
        "props": {
          "containerPort": 8000,
          "cwd": "<ABSOLUTE PATH>/test",
          "image": "amazon/dynamodb-local:2.0.0",
          "imageTag": "amazon/dynamodb-local:2.0.0",
        },
        "type": "@winglang/sdk.sim.Container",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "get_table": {
          "children": {
            "Container": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {},
              "id": "Container",
              "path": "root/get_table/Container",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A DynamoDb Table",
            "title": "DynamodbTable",
          },
          "id": "get_table",
          "path": "root/get_table",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`put item 1`] = `
[
  "image amazon/dynamodb-local:<port>.0.0 already exists",
  "starting container from image amazon/dynamodb-local:<port>.0.0",
  "docker run --detach --rm --name wing-container-<container> -p 8000 amazon/dynamodb-local:<port>.0.0",
  "containerName=wing-container-<container>",
  "root/put_table/Container started",
  "root/put_table started",
  "root/put_table stopped",
  "Stopping container wing-container-<container>",
  "root/put_table/Container stopped",
]
`;

exports[`put item 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8fa1029e0255990ff9eb3bf212931386890380f82",
        "attrs": {},
        "path": "root/put_table",
        "props": {
          "attributeDefinitions": {
            "id": "S",
          },
          "hashKey": "id",
          "hostPort": "\${wsim#root/put_table/Container#attrs.host_port}",
          "name": "my_insert_table",
        },
        "type": "@winglang/sdk.ex.DynamodbTable",
      },
      {
        "addr": "c8934f0d9367e400f390b6380b526e9c5ceaa3833e",
        "attrs": {},
        "path": "root/put_table/Container",
        "props": {
          "containerPort": 8000,
          "cwd": "<ABSOLUTE PATH>/test",
          "image": "amazon/dynamodb-local:2.0.0",
          "imageTag": "amazon/dynamodb-local:2.0.0",
        },
        "type": "@winglang/sdk.sim.Container",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "put_table": {
          "children": {
            "Container": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {},
              "id": "Container",
              "path": "root/put_table/Container",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A DynamoDb Table",
            "title": "DynamodbTable",
          },
          "id": "put_table",
          "path": "root/put_table",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`update item 1`] = `
[
  "image amazon/dynamodb-local:<port>.0.0 already exists",
  "starting container from image amazon/dynamodb-local:<port>.0.0",
  "docker run --detach --rm --name wing-container-<container> -p 8000 amazon/dynamodb-local:<port>.0.0",
  "containerName=wing-container-<container>",
  "root/update_table/Container started",
  "root/update_table started",
  "root/update_table stopped",
  "Stopping container wing-container-<container>",
  "root/update_table/Container stopped",
]
`;

exports[`update item 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8f403ebb1894f2ea172e92af9090b7c8a25806934",
        "attrs": {},
        "path": "root/update_table",
        "props": {
          "attributeDefinitions": {
            "id": "S",
          },
          "hashKey": "id",
          "hostPort": "\${wsim#root/update_table/Container#attrs.host_port}",
          "name": "my_update_table",
        },
        "type": "@winglang/sdk.ex.DynamodbTable",
      },
      {
        "addr": "c87d51114bd971aa78d45b09d1581b2d2490f8d31a",
        "attrs": {},
        "path": "root/update_table/Container",
        "props": {
          "containerPort": 8000,
          "cwd": "<ABSOLUTE PATH>/test",
          "image": "amazon/dynamodb-local:2.0.0",
          "imageTag": "amazon/dynamodb-local:2.0.0",
        },
        "type": "@winglang/sdk.sim.Container",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "update_table": {
          "children": {
            "Container": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {},
              "id": "Container",
              "path": "root/update_table/Container",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A DynamoDb Table",
            "title": "DynamodbTable",
          },
          "id": "update_table",
          "path": "root/update_table",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
