// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create a schedule 1`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_schedule",
        "props": {
          "cronExpression": "*/1 * * * ?",
        },
        "type": "wingsdk.cloud.Schedule",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_schedule": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud schedule to trigger events at regular intervals",
            "title": "Schedule",
          },
          "id": "my_schedule",
          "path": "root/my_schedule",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`schedule with one task using rate of 3h 1`] = `
{
  ".wing/my_schedule-ontick-e645076f_c83e5455.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new (require(\\"[REDACTED]/wingsdk/src/target-sim/schedule.ontick.inflight.js\\")).ScheduleOnTickHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
console.log(\\"Hello from schedule!\\");
}
};
})())({

}), args: {} })).handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "handle()",
        "source": "root/my_schedule/my_schedule-OnTick-e645076f",
        "target": "root/Handler",
      },
      {
        "name": "$inflight_init()",
        "source": "root/my_schedule/my_schedule-OnTick-e645076f",
        "target": "root/Handler",
      },
      {
        "name": "onTick()",
        "source": "root/my_schedule",
        "target": "root/my_schedule/my_schedule-OnTick-e645076f",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_schedule/my_schedule-OnTick-e645076f",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_schedule-ontick-e645076f_c83e5455.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
      {
        "attrs": {},
        "path": "root/my_schedule",
        "props": {
          "cronExpression": "* */3 * * ?",
        },
        "type": "wingsdk.cloud.Schedule",
      },
      {
        "attrs": {},
        "path": "root/my_schedule/my_schedule-OnTickMapping-e645076f",
        "props": {
          "publisher": "\${root/my_schedule#attrs.handle}",
          "subscriber": "\${root/my_schedule/my_schedule-OnTick-e645076f#attrs.handle}",
          "subscriptionProps": {},
        },
        "type": "wingsdk.sim.EventMapping",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_schedule": {
          "children": {
            "my_schedule-OnTick-e645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "onTick()",
              },
              "id": "my_schedule-OnTick-e645076f",
              "path": "root/my_schedule/my_schedule-OnTick-e645076f",
            },
            "my_schedule-OnTickMapping-e645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "hidden": true,
              },
              "id": "my_schedule-OnTickMapping-e645076f",
              "path": "root/my_schedule/my_schedule-OnTickMapping-e645076f",
            },
            "my_scheduleOnTickHandlere645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "hidden": true,
              },
              "id": "my_scheduleOnTickHandlere645076f",
              "path": "root/my_schedule/my_scheduleOnTickHandlere645076f",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud schedule to trigger events at regular intervals",
            "title": "Schedule",
          },
          "id": "my_schedule",
          "path": "root/my_schedule",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`schedule with one task using rate of 10m 1`] = `
{
  ".wing/my_schedule-ontick-e645076f_c83e5455.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new (require(\\"[REDACTED]/wingsdk/src/target-sim/schedule.ontick.inflight.js\\")).ScheduleOnTickHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
console.log(\\"Hello from schedule!\\");
}
};
})())({

}), args: {} })).handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "handle()",
        "source": "root/my_schedule/my_schedule-OnTick-e645076f",
        "target": "root/Handler",
      },
      {
        "name": "$inflight_init()",
        "source": "root/my_schedule/my_schedule-OnTick-e645076f",
        "target": "root/Handler",
      },
      {
        "name": "onTick()",
        "source": "root/my_schedule",
        "target": "root/my_schedule/my_schedule-OnTick-e645076f",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_schedule/my_schedule-OnTick-e645076f",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_schedule-ontick-e645076f_c83e5455.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
      {
        "attrs": {},
        "path": "root/my_schedule",
        "props": {
          "cronExpression": "*/10 * * * ?",
        },
        "type": "wingsdk.cloud.Schedule",
      },
      {
        "attrs": {},
        "path": "root/my_schedule/my_schedule-OnTickMapping-e645076f",
        "props": {
          "publisher": "\${root/my_schedule#attrs.handle}",
          "subscriber": "\${root/my_schedule/my_schedule-OnTick-e645076f#attrs.handle}",
          "subscriptionProps": {},
        },
        "type": "wingsdk.sim.EventMapping",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_schedule": {
          "children": {
            "my_schedule-OnTick-e645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "onTick()",
              },
              "id": "my_schedule-OnTick-e645076f",
              "path": "root/my_schedule/my_schedule-OnTick-e645076f",
            },
            "my_schedule-OnTickMapping-e645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "hidden": true,
              },
              "id": "my_schedule-OnTickMapping-e645076f",
              "path": "root/my_schedule/my_schedule-OnTickMapping-e645076f",
            },
            "my_scheduleOnTickHandlere645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "hidden": true,
              },
              "id": "my_scheduleOnTickHandlere645076f",
              "path": "root/my_schedule/my_scheduleOnTickHandlere645076f",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud schedule to trigger events at regular intervals",
            "title": "Schedule",
          },
          "id": "my_schedule",
          "path": "root/my_schedule",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`schedule with one task with cron 1`] = `
{
  ".wing/my_schedule-ontick-e645076f_c83e5455.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new (require(\\"[REDACTED]/wingsdk/src/target-sim/schedule.ontick.inflight.js\\")).ScheduleOnTickHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
console.log(\\"Hello from schedule!\\");
}
};
})())({

}), args: {} })).handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "handle()",
        "source": "root/my_schedule/my_schedule-OnTick-e645076f",
        "target": "root/Handler",
      },
      {
        "name": "$inflight_init()",
        "source": "root/my_schedule/my_schedule-OnTick-e645076f",
        "target": "root/Handler",
      },
      {
        "name": "onTick()",
        "source": "root/my_schedule",
        "target": "root/my_schedule/my_schedule-OnTick-e645076f",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_schedule/my_schedule-OnTick-e645076f",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_schedule-ontick-e645076f_c83e5455.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
      {
        "attrs": {},
        "path": "root/my_schedule",
        "props": {
          "cronExpression": "* * * * ?",
        },
        "type": "wingsdk.cloud.Schedule",
      },
      {
        "attrs": {},
        "path": "root/my_schedule/my_schedule-OnTickMapping-e645076f",
        "props": {
          "publisher": "\${root/my_schedule#attrs.handle}",
          "subscriber": "\${root/my_schedule/my_schedule-OnTick-e645076f#attrs.handle}",
          "subscriptionProps": {},
        },
        "type": "wingsdk.sim.EventMapping",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_schedule": {
          "children": {
            "my_schedule-OnTick-e645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "onTick()",
              },
              "id": "my_schedule-OnTick-e645076f",
              "path": "root/my_schedule/my_schedule-OnTick-e645076f",
            },
            "my_schedule-OnTickMapping-e645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "hidden": true,
              },
              "id": "my_schedule-OnTickMapping-e645076f",
              "path": "root/my_schedule/my_schedule-OnTickMapping-e645076f",
            },
            "my_scheduleOnTickHandlere645076f": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.2.70",
              },
              "display": {
                "hidden": true,
              },
              "id": "my_scheduleOnTickHandlere645076f",
              "path": "root/my_schedule/my_scheduleOnTickHandlere645076f",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud schedule to trigger events at regular intervals",
            "title": "Schedule",
          },
          "id": "my_schedule",
          "path": "root/my_schedule",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
