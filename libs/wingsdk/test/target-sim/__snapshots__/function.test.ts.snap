// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create a function 1`] = `
{
  ".wing/my_function_c85c4e0e.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(event) {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error(\\"Name must start with uppercase letter\\");
  }
  if (process.env.PIG_LATIN) {
    msg = \\"Ellohay, \\" + event.name + \\"!\\";
  } else {
    msg = \\"Hello, \\" + event.name + \\"!\\";
  }
  return JSON.stringify({ msg });
}
};
})())({

})).handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_function",
        "props": {
          "environmentVariables": {
            "ENV_VAR1": "true",
          },
          "sourceCodeFile": ".wing/my_function_c85c4e0e.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function fails 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Function created.",
  "Invoke (payload=\\"{\\\\\\"name\\\\\\":\\\\\\"alice\\\\\\"}\\").",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`invoke function fails 2`] = `
{
  ".wing/my_function_c85c4e0e.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(event) {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error(\\"Name must start with uppercase letter\\");
  }
  if (process.env.PIG_LATIN) {
    msg = \\"Ellohay, \\" + event.name + \\"!\\";
  } else {
    msg = \\"Hello, \\" + event.name + \\"!\\";
  }
  return JSON.stringify({ msg });
}
};
})())({

})).handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_function_c85c4e0e.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function succeeds 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Function created.",
  "Invoke (payload=\\"{\\\\\\"name\\\\\\":\\\\\\"Alice\\\\\\"}\\").",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`invoke function succeeds 2`] = `
{
  ".wing/my_function_c85c4e0e.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(event) {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error(\\"Name must start with uppercase letter\\");
  }
  if (process.env.PIG_LATIN) {
    msg = \\"Ellohay, \\" + event.name + \\"!\\";
  } else {
    msg = \\"Hello, \\" + event.name + \\"!\\";
  }
  return JSON.stringify({ msg });
}
};
})())({

})).handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_function_c85c4e0e.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function with environment variables 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Function created.",
  "Invoke (payload=\\"{\\\\\\"name\\\\\\":\\\\\\"Alice\\\\\\"}\\").",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`invoke function with environment variables 2`] = `
{
  ".wing/my_function_c85c4e0e.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(event) {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error(\\"Name must start with uppercase letter\\");
  }
  if (process.env.PIG_LATIN) {
    msg = \\"Ellohay, \\" + event.name + \\"!\\";
  } else {
    msg = \\"Hello, \\" + event.name + \\"!\\";
  }
  return JSON.stringify({ msg });
}
};
})())({

})).handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_function",
        "props": {
          "environmentVariables": {
            "PIG_LATIN": "true",
          },
          "sourceCodeFile": ".wing/my_function_c85c4e0e.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function with process.exit(1) 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Function created.",
  "Invoke (payload=\\"{}\\").",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`invoke function with process.exit(1) 2`] = `
{
  ".wing/my_function_c85c4e0e.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle() {
  process.exit(1);
}
};
})())({

})).handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_function",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_function_c85c4e0e.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Handler",
          "path": "root/Handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`runtime environment tests 1`] = `
{
  ".wing/function.0_c8d5fca2.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
          
    const query = \\"q=URLUtils.searchParams&topic=api\\";
    const p = new URLSearchParams(query);
    return p.get(\\"topic\\");
  
        }
};
})())({

})).handle(event);
};",
  ".wing/function.1_c89ed254.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
          
    return fetch;
  
        }
};
})())({

})).handle(event);
};",
  ".wing/function.2_c8cd6c39.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
          
    const c = require(\\"crypto\\");
    return c.createHash;
  
        }
};
})())({

})).handle(event);
};",
  ".wing/function.3_c8badafa.js": "\\"use strict\\";
exports.handler = async function(event) {
  return await (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
          
    const { nanoid } = await import(\\"nanoid\\");
    return nanoid();
  
        }
};
})())({

})).handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/Function.0",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function.0_c8d5fca2.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
      {
        "attrs": {},
        "path": "root/Function.1",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function.1_c89ed254.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
      {
        "attrs": {},
        "path": "root/Function.2",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function.2_c8cd6c39.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
      {
        "attrs": {},
        "path": "root/Function.3",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/function.3_c8badafa.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "wingsdk.cloud.Function",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "Function.0": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function.0",
          "path": "root/Function.0",
        },
        "Function.0.handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Function.0.handler",
          "path": "root/Function.0.handler",
        },
        "Function.1": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function.1",
          "path": "root/Function.1",
        },
        "Function.1.handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Function.1.handler",
          "path": "root/Function.1.handler",
        },
        "Function.2": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function.2",
          "path": "root/Function.2",
        },
        "Function.2.handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Function.2.handler",
          "path": "root/Function.2.handler",
        },
        "Function.3": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "Function.3",
          "path": "root/Function.3",
        },
        "Function.3.handler": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "An inflight resource",
            "hidden": true,
            "title": "Inflight",
          },
          "id": "Function.3.handler",
          "path": "root/Function.3.handler",
        },
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
