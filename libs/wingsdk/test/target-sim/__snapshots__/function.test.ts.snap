// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create a function 1`] = `
{
  ".wing/my_function_c85c4e0e.cjs": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? ((await (async () => {
  const $func = async (_, event) => {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error("Name must start with uppercase letter");
  }
  if (process.env.PIG_LATIN) {
    msg = "Ellohay, " + event.name + "!";
  } else {
    msg = "Hello, " + event.name + "!";
  }
  return JSON.stringify({ msg });
}
  const $ctx = {
  
  };
  let newFunction = async (...args) => {
    return $func($ctx, ...args);
  };
  newFunction.handle = newFunction;
  return newFunction;
}
)()));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": {
      "root/my_function": {
        "addr": "c85c4e0e66bf385ab6b159bab34fb32dd81aad0a1d",
        "path": "root/my_function",
        "policy": [],
        "props": {
          "concurrency": 100,
          "environmentVariables": {
            "ENV_VAR1": "true",
          },
          "sourceCodeFile": ".wing/my_function_c85c4e0e.cjs",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    },
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.Policy": {
        "className": "Policy",
        "sourcePath": "<ABSOLUTE PATH>/policy.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function fails 1`] = `
[
  "root/my_function started",
  "Invoke (payload="{\\"name\\":\\"alice\\"}").",
  "root/my_function stopped",
]
`;

exports[`invoke function fails 2`] = `
{
  ".wing/my_function_c85c4e0e.cjs": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? ((await (async () => {
  const $func = async (_, event) => {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error("Name must start with uppercase letter");
  }
  if (process.env.PIG_LATIN) {
    msg = "Ellohay, " + event.name + "!";
  } else {
    msg = "Hello, " + event.name + "!";
  }
  return JSON.stringify({ msg });
}
  const $ctx = {
  
  };
  let newFunction = async (...args) => {
    return $func($ctx, ...args);
  };
  newFunction.handle = newFunction;
  return newFunction;
}
)()));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": {
      "root/my_function": {
        "addr": "c85c4e0e66bf385ab6b159bab34fb32dd81aad0a1d",
        "path": "root/my_function",
        "policy": [],
        "props": {
          "concurrency": 100,
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_function_c85c4e0e.cjs",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    },
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.Policy": {
        "className": "Policy",
        "sourcePath": "<ABSOLUTE PATH>/policy.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function succeeds 1`] = `
[
  "root/my_function started",
  "Invoke (payload="{\\"name\\":\\"Alice\\"}").",
  "root/my_function stopped",
]
`;

exports[`invoke function succeeds 2`] = `
{
  ".wing/my_function_c85c4e0e.cjs": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? ((await (async () => {
  const $func = async (_, event) => {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error("Name must start with uppercase letter");
  }
  if (process.env.PIG_LATIN) {
    msg = "Ellohay, " + event.name + "!";
  } else {
    msg = "Hello, " + event.name + "!";
  }
  return JSON.stringify({ msg });
}
  const $ctx = {
  
  };
  let newFunction = async (...args) => {
    return $func($ctx, ...args);
  };
  newFunction.handle = newFunction;
  return newFunction;
}
)()));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": {
      "root/my_function": {
        "addr": "c85c4e0e66bf385ab6b159bab34fb32dd81aad0a1d",
        "path": "root/my_function",
        "policy": [],
        "props": {
          "concurrency": 100,
          "environmentVariables": {},
          "sourceCodeFile": ".wing/my_function_c85c4e0e.cjs",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    },
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.Policy": {
        "className": "Policy",
        "sourcePath": "<ABSOLUTE PATH>/policy.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`invoke function with environment variables 1`] = `
[
  "root/my_function started",
  "Invoke (payload="{\\"name\\":\\"Alice\\"}").",
  "root/my_function stopped",
]
`;

exports[`invoke function with environment variables 2`] = `
{
  ".wing/my_function_c85c4e0e.cjs": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? ((await (async () => {
  const $func = async (_, event) => {
  event = JSON.parse(event);
  let msg;
  if (event.name[0] !== event.name[0].toUpperCase()) {
    throw new Error("Name must start with uppercase letter");
  }
  if (process.env.PIG_LATIN) {
    msg = "Ellohay, " + event.name + "!";
  } else {
    msg = "Hello, " + event.name + "!";
  }
  return JSON.stringify({ msg });
}
  const $ctx = {
  
  };
  let newFunction = async (...args) => {
    return $func($ctx, ...args);
  };
  newFunction.handle = newFunction;
  return newFunction;
}
)()));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": {
      "root/my_function": {
        "addr": "c85c4e0e66bf385ab6b159bab34fb32dd81aad0a1d",
        "path": "root/my_function",
        "policy": [],
        "props": {
          "concurrency": 100,
          "environmentVariables": {
            "PIG_LATIN": "true",
          },
          "sourceCodeFile": ".wing/my_function_c85c4e0e.cjs",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
    },
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.Container": {
        "className": "Container",
        "sourcePath": "<ABSOLUTE PATH>/container.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.Policy": {
        "className": "Policy",
        "sourcePath": "<ABSOLUTE PATH>/policy.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_function": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A cloud function (FaaS)",
            "title": "Function",
          },
          "id": "my_function",
          "path": "root/my_function",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
