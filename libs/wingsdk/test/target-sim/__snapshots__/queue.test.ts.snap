// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create a queue 1`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 30,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`messages are not requeued if the function fails before timeout 1`] = `
[
  "@winglang/sdk.cloud.Function created.",
  "@winglang/sdk.cloud.Queue created.",
  "@winglang/sdk.sim.EventMapping created.",
  "Push (messages=BAD MESSAGE).",
  "Sending messages (messages=[\\"BAD MESSAGE\\"], subscriber=sim-0).",
  "Invoke (payload=\\"{\\\\\\"messages\\\\\\":[\\\\\\"BAD MESSAGE\\\\\\"]}\\").",
  "Subscriber error - returning 1 messages to queue: ERROR",
  "@winglang/sdk.sim.EventMapping deleted.",
  "@winglang/sdk.cloud.Queue deleted.",
  "@winglang/sdk.cloud.Function deleted.",
]
`;

exports[`messages are not requeued if the function fails before timeout 2`] = `
{
  ".wing/setconsumer0_c8e33b9b.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new (require(\\"[REDACTED]/wingsdk/src/target-sim/queue.setconsumer.inflight.js\\")).QueueSetConsumerHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
  if (message === \\"BAD MESSAGE\\") {
    throw new Error(\\"ERROR\\");
  }
}
};
})())({

}), args: {} }));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "setConsumer()",
        "source": "root/my_queue",
        "target": "root/my_queue/SetConsumer0",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e33b9b91c909e579b9d3d703146eb66c2a657ffc",
        "attrs": {},
        "path": "root/my_queue/SetConsumer0",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/setconsumer0_c8e33b9b.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 30,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
      {
        "addr": "c8f9f7d56097ba3d2e0e82988718175a5d841f855e",
        "attrs": {},
        "path": "root/my_queue/QueueEventMapping0",
        "props": {
          "publisher": "\${wsim#root/my_queue#attrs.handle}",
          "subscriber": "\${wsim#root/my_queue/SetConsumer0#attrs.handle}",
          "subscriptionProps": {
            "batchSize": 1,
          },
        },
        "type": "@winglang/sdk.sim.EventMapping",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "children": {
            "QueueEventMapping0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "hidden": true,
              },
              "id": "QueueEventMapping0",
              "path": "root/my_queue/QueueEventMapping0",
            },
            "SetConsumer0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "setConsumer()",
              },
              "id": "SetConsumer0",
              "path": "root/my_queue/SetConsumer0",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`messages are requeued if the function fails after timeout 1`] = `
[
  "@winglang/sdk.cloud.Function created.",
  "@winglang/sdk.cloud.Queue created.",
  "@winglang/sdk.sim.EventMapping created.",
  "Push (messages=BAD MESSAGE).",
  "Sending messages (messages=[\\"BAD MESSAGE\\"], subscriber=sim-0).",
  "Invoke (payload=\\"{\\\\\\"messages\\\\\\":[\\\\\\"BAD MESSAGE\\\\\\"]}\\").",
  "Subscriber error - returning 1 messages to queue: ERROR",
  "@winglang/sdk.sim.EventMapping deleted.",
  "@winglang/sdk.cloud.Queue deleted.",
  "@winglang/sdk.cloud.Function deleted.",
  "1 messages pushed back to queue after visibility timeout.",
]
`;

exports[`messages are requeued if the function fails after timeout 2`] = `
{
  ".wing/setconsumer0_c8e33b9b.js": "\\"use strict\\";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new (require(\\"[REDACTED]/wingsdk/src/target-sim/queue.setconsumer.inflight.js\\")).QueueSetConsumerHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
  if (message === \\"BAD MESSAGE\\") {
    throw new Error(\\"ERROR\\");
  }
}
};
})())({

}), args: {} }));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "setConsumer()",
        "source": "root/my_queue",
        "target": "root/my_queue/SetConsumer0",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e33b9b91c909e579b9d3d703146eb66c2a657ffc",
        "attrs": {},
        "path": "root/my_queue/SetConsumer0",
        "props": {
          "environmentVariables": {},
          "sourceCodeFile": ".wing/setconsumer0_c8e33b9b.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 1,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
      {
        "addr": "c8f9f7d56097ba3d2e0e82988718175a5d841f855e",
        "attrs": {},
        "path": "root/my_queue/QueueEventMapping0",
        "props": {
          "publisher": "\${wsim#root/my_queue#attrs.handle}",
          "subscriber": "\${wsim#root/my_queue/SetConsumer0#attrs.handle}",
          "subscriptionProps": {
            "batchSize": 1,
          },
        },
        "type": "@winglang/sdk.sim.EventMapping",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "children": {
            "QueueEventMapping0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "hidden": true,
              },
              "id": "QueueEventMapping0",
              "path": "root/my_queue/QueueEventMapping0",
            },
            "SetConsumer0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "setConsumer()",
              },
              "id": "SetConsumer0",
              "path": "root/my_queue/SetConsumer0",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`push rejects empty message 1`] = `
[
  "@winglang/sdk.cloud.Queue created.",
  "Push (messages=).",
  "@winglang/sdk.cloud.Queue deleted.",
]
`;

exports[`push rejects empty message 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 30,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`queue batch size of 2, purge the queue 1`] = `
[
  "@winglang/sdk.cloud.Queue created.",
  "Push (messages=A).",
  "Push (messages=B).",
  "ApproxSize ().",
  "Purge ().",
  "ApproxSize ().",
  "@winglang/sdk.cloud.Queue deleted.",
]
`;

exports[`queue batch size of 2, purge the queue 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 30,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`queue with one subscriber, batch size of 5 1`] = `
{
  ".wing/function_c8ab799f.js": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle() {
  await this.queue.push("A");
  await this.queue.push("B");
  await this.queue.push("C");
  await this.queue.push("D");
  await this.queue.push("E");
  await this.queue.push("F");
}
};
})())({
queue: (function() {
  let handle = process.env.QUEUE_HANDLE_54fcf4cd;
  if (!handle) {
    throw new Error("Missing environment variable: QUEUE_HANDLE_54fcf4cd");
  }
  const simulatorUrl = process.env.WING_SIMULATOR_URL;
  if (!simulatorUrl) {
    throw new Error("Missing environment variable: WING_SIMULATOR_URL");
  }
  return require("@winglang/sdk/lib/simulator/client").makeSimulatorClient(simulatorUrl, handle);
})()
}));
  return await $handler.handle(event);
};",
  ".wing/setconsumer0_c8e33b9b.js": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new (require("[REDACTED]/wingsdk/src/target-sim/queue.setconsumer.inflight.js")).QueueSetConsumerHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
  if (message === "BAD MESSAGE") {
    throw new Error("ERROR");
  }
}
};
})())({

}), args: {} }));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "setConsumer()",
        "source": "root/my_queue",
        "target": "root/my_queue/SetConsumer0",
      },
      {
        "name": "push()",
        "source": "root/my_queue_messages/Function",
        "target": "root/my_queue",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e33b9b91c909e579b9d3d703146eb66c2a657ffc",
        "attrs": {},
        "path": "root/my_queue/SetConsumer0",
        "props": {
          "concurrency": 100,
          "environmentVariables": {},
          "sourceCodeFile": ".wing/setconsumer0_c8e33b9b.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 30,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
      {
        "addr": "c8f9f7d56097ba3d2e0e82988718175a5d841f855e",
        "attrs": {},
        "path": "root/my_queue/QueueEventMapping0",
        "props": {
          "publisher": "\${wsim#root/my_queue#attrs.handle}",
          "subscriber": "\${wsim#root/my_queue/SetConsumer0#attrs.handle}",
          "subscriptionProps": {
            "batchSize": 5,
          },
        },
        "type": "@winglang/sdk.sim.EventMapping",
      },
      {
        "addr": "c8ab799f6c9c9a3cd279909012c4f322ab902f5e19",
        "attrs": {},
        "path": "root/my_queue_messages/Function",
        "props": {
          "concurrency": 100,
          "environmentVariables": {
            "QUEUE_HANDLE_54fcf4cd": "\${wsim#root/my_queue#attrs.handle}",
          },
          "sourceCodeFile": ".wing/function_c8ab799f.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
      {
        "addr": "c8e2354407fd3536187725c2b37c5327f47bb841e9",
        "attrs": {},
        "path": "root/my_queue_messages",
        "props": {
          "functionHandle": "\${wsim#root/my_queue_messages/Function#attrs.handle}",
        },
        "type": "@winglang/sdk.cloud.OnDeploy",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "children": {
            "QueueEventMapping0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "hidden": true,
              },
              "id": "QueueEventMapping0",
              "path": "root/my_queue/QueueEventMapping0",
            },
            "SetConsumer0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "setConsumer()",
              },
              "id": "SetConsumer0",
              "path": "root/my_queue/SetConsumer0",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
        "my_queue_messages": {
          "children": {
            "Function": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "Function",
              },
              "id": "Function",
              "path": "root/my_queue_messages/Function",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "Run code during the app's deployment.",
            "title": "OnDeploy",
          },
          "id": "my_queue_messages",
          "path": "root/my_queue_messages",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`queue with one subscriber, default batch size of 1 1`] = `
{
  ".wing/setconsumer0_c8e33b9b.js": ""use strict";
var $handler = undefined;
exports.handler = async function(event) {
  $handler = $handler ?? (new (require("[REDACTED]/wingsdk/src/target-sim/queue.setconsumer.inflight.js")).QueueSetConsumerHandlerClient({ handler: new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  
async handle(message) {
  if (message === "BAD MESSAGE") {
    throw new Error("ERROR");
  }
}
};
})())({

}), args: {} }));
  return await $handler.handle(event);
};",
  "connections.json": {
    "connections": [
      {
        "name": "setConsumer()",
        "source": "root/my_queue",
        "target": "root/my_queue/SetConsumer0",
      },
    ],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "addr": "c8e33b9b91c909e579b9d3d703146eb66c2a657ffc",
        "attrs": {},
        "path": "root/my_queue/SetConsumer0",
        "props": {
          "concurrency": 100,
          "environmentVariables": {},
          "sourceCodeFile": ".wing/setconsumer0_c8e33b9b.js",
          "sourceCodeLanguage": "javascript",
          "timeout": 60000,
        },
        "type": "@winglang/sdk.cloud.Function",
      },
      {
        "addr": "c8dee4ef24593d08aa22e8845be36d0ee754fcf4cd",
        "attrs": {},
        "path": "root/my_queue",
        "props": {
          "retentionPeriod": 3600,
          "timeout": 30,
        },
        "type": "@winglang/sdk.cloud.Queue",
      },
      {
        "addr": "c8f9f7d56097ba3d2e0e82988718175a5d841f855e",
        "attrs": {},
        "path": "root/my_queue/QueueEventMapping0",
        "props": {
          "publisher": "\${wsim#root/my_queue#attrs.handle}",
          "subscriber": "\${wsim#root/my_queue/SetConsumer0#attrs.handle}",
          "subscriptionProps": {
            "batchSize": 1,
          },
        },
        "type": "@winglang/sdk.sim.EventMapping",
      },
    ],
    "sdkVersion": "0.0.0",
    "types": {
      "@winglang/sdk.cloud.Api": {
        "className": "Api",
        "sourcePath": "<ABSOLUTE PATH>/api.inflight.js",
      },
      "@winglang/sdk.cloud.Bucket": {
        "className": "Bucket",
        "sourcePath": "<ABSOLUTE PATH>/bucket.inflight.js",
      },
      "@winglang/sdk.cloud.Counter": {
        "className": "Counter",
        "sourcePath": "<ABSOLUTE PATH>/counter.inflight.js",
      },
      "@winglang/sdk.cloud.Domain": {
        "className": "Domain",
        "sourcePath": "<ABSOLUTE PATH>/domain.inflight.js",
      },
      "@winglang/sdk.cloud.Endpoint": {
        "className": "Endpoint",
        "sourcePath": "<ABSOLUTE PATH>/endpoint.inflight.js",
      },
      "@winglang/sdk.cloud.Function": {
        "className": "Function",
        "sourcePath": "<ABSOLUTE PATH>/function.inflight.js",
      },
      "@winglang/sdk.cloud.OnDeploy": {
        "className": "OnDeploy",
        "sourcePath": "<ABSOLUTE PATH>/on-deploy.inflight.js",
      },
      "@winglang/sdk.cloud.Queue": {
        "className": "Queue",
        "sourcePath": "<ABSOLUTE PATH>/queue.inflight.js",
      },
      "@winglang/sdk.cloud.Schedule": {
        "className": "Schedule",
        "sourcePath": "<ABSOLUTE PATH>/schedule.inflight.js",
      },
      "@winglang/sdk.cloud.Secret": {
        "className": "Secret",
        "sourcePath": "<ABSOLUTE PATH>/secret.inflight.js",
      },
      "@winglang/sdk.cloud.Service": {
        "className": "Service",
        "sourcePath": "<ABSOLUTE PATH>/service.inflight.js",
      },
      "@winglang/sdk.cloud.Topic": {
        "className": "Topic",
        "sourcePath": "<ABSOLUTE PATH>/topic.inflight.js",
      },
      "@winglang/sdk.cloud.Website": {
        "className": "Website",
        "sourcePath": "<ABSOLUTE PATH>/website.inflight.js",
      },
      "@winglang/sdk.ex.DynamodbTable": {
        "className": "DynamodbTable",
        "sourcePath": "<ABSOLUTE PATH>/dynamodb-table.inflight.js",
      },
      "@winglang/sdk.ex.ReactApp": {
        "className": "ReactApp",
        "sourcePath": "<ABSOLUTE PATH>/react-app.inflight.js",
      },
      "@winglang/sdk.ex.Redis": {
        "className": "Redis",
        "sourcePath": "<ABSOLUTE PATH>/redis.inflight.js",
      },
      "@winglang/sdk.ex.Table": {
        "className": "Table",
        "sourcePath": "<ABSOLUTE PATH>/table.inflight.js",
      },
      "@winglang/sdk.sim.EventMapping": {
        "className": "EventMapping",
        "sourcePath": "<ABSOLUTE PATH>/event-mapping.inflight.js",
      },
      "@winglang/sdk.sim.State": {
        "className": "State",
        "sourcePath": "<ABSOLUTE PATH>/state.inflight.js",
      },
      "@winglang/sdk.std.TestRunner": {
        "className": "TestRunner",
        "sourcePath": "<ABSOLUTE PATH>/test-runner.inflight.js",
      },
    },
  },
  "tree.json": {
    "tree": {
      "children": {
        "my_queue": {
          "children": {
            "QueueEventMapping0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "hidden": true,
              },
              "id": "QueueEventMapping0",
              "path": "root/my_queue/QueueEventMapping0",
            },
            "SetConsumer0": {
              "constructInfo": {
                "fqn": "constructs.Construct",
                "version": "10.3.0",
              },
              "display": {
                "description": "A cloud function (FaaS)",
                "sourceModule": "@winglang/sdk",
                "title": "setConsumer()",
              },
              "id": "SetConsumer0",
              "path": "root/my_queue/SetConsumer0",
            },
          },
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.3.0",
          },
          "display": {
            "description": "A distributed message queue",
            "title": "Queue",
          },
          "id": "my_queue",
          "path": "root/my_queue",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.3.0",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;
