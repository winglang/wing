// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`bucket on event creates 3 topics, and sends the right event and key in the event handlers 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Topic created.",
  "wingsdk.cloud.Topic created.",
  "wingsdk.cloud.Topic created.",
  "wingsdk.cloud.Bucket created.",
  "wingsdk.cloud.Bucket created.",
  "wingsdk.cloud.Function created.",
  "wingsdk.sim.EventMapping created.",
  "wingsdk.cloud.Function created.",
  "wingsdk.sim.EventMapping created.",
  "wingsdk.cloud.Function created.",
  "wingsdk.sim.EventMapping created.",
  "Publish (message=a).",
  "Sending message (message=a, subscriber=sim-6).",
  "Put (key=a).",
  "Invoke (payload=\\"a\\").",
  "Put (key=a).",
  "Get (key=a).",
  "Publish (message=a).",
  "Sending message (message=a, subscriber=sim-8).",
  "Put (key=a).",
  "Invoke (payload=\\"a\\").",
  "Put (key=a).",
  "Get (key=a).",
  "Publish (message=a).",
  "Sending message (message=a, subscriber=sim-10).",
  "Put (key=a).",
  "Invoke (payload=\\"a\\").",
  "Delete (key=a).",
  "Get (key=a).",
  "wingsdk.sim.EventMapping deleted.",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.sim.EventMapping deleted.",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.sim.EventMapping deleted.",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.Topic deleted.",
  "wingsdk.cloud.Topic deleted.",
  "wingsdk.cloud.Topic deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`can add file in preflight 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "Adding object from preflight (key=test.txt).",
  "wingsdk.cloud.Bucket created.",
  "Get (key=test.txt).",
  "Get (key=test.txt).",
  "List (prefix=null).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`can add file in preflight 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_bucket",
        "props": {
          "initialObjects": {
            "test.txt": "test1",
          },
          "public": false,
          "topics": {},
        },
        "type": "wingsdk.cloud.Bucket",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_bucket": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud object store",
            "title": "Bucket",
          },
          "id": "my_bucket",
          "path": "root/my_bucket",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`can add object in preflight 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "Adding object from preflight (key=greeting.txt).",
  "wingsdk.cloud.Bucket created.",
  "Get (key=greeting.txt).",
  "Get (key=greeting.txt).",
  "List (prefix=null).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`can add object in preflight 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_bucket",
        "props": {
          "initialObjects": {
            "greeting.txt": "Hello world!",
          },
          "public": false,
          "topics": {},
        },
        "type": "wingsdk.cloud.Bucket",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_bucket": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud object store",
            "title": "Bucket",
          },
          "id": "my_bucket",
          "path": "root/my_bucket",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`create a bucket 1`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_bucket",
        "props": {
          "initialObjects": {},
          "public": false,
          "topics": {},
        },
        "type": "wingsdk.cloud.Bucket",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_bucket": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud object store",
            "title": "Bucket",
          },
          "id": "my_bucket",
          "path": "root/my_bucket",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`get invalid object throws an error 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Get (key=unknown.txt).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`get invalid object throws an error 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_bucket",
        "props": {
          "initialObjects": {},
          "public": false,
          "topics": {},
        },
        "type": "wingsdk.cloud.Bucket",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_bucket": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud object store",
            "title": "Bucket",
          },
          "id": "my_bucket",
          "path": "root/my_bucket",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`list respects prefixes 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put (key=path/dir1/file1.txt).",
  "Put (key=path/dir2/file2.txt).",
  "List (prefix=null).",
  "List (prefix=path).",
  "List (prefix=path/dir1).",
  "List (prefix=path/dir2).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`objects can have keys that look like directories 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put (key=foo).",
  "Put (key=foo/).",
  "Put (key=foo/bar).",
  "Put (key=foo/bar/).",
  "Put (key=foo/bar/baz).",
  "List (prefix=null).",
  "List (prefix=foo).",
  "List (prefix=foo/).",
  "List (prefix=foo/bar).",
  "List (prefix=foo/bar/).",
  "List (prefix=foo/bar/baz).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`put and get Json object from bucket 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put Json (key=greeting.json).",
  "Get Json (key=greeting.json).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`put and get Json object from bucket 2`] = `
{
  "connections.json": {
    "connections": [],
    "version": "connections-0.1",
  },
  "simulator.json": {
    "resources": [
      {
        "attrs": {},
        "path": "root/cloud.TestRunner",
        "props": {
          "tests": {},
        },
        "type": "wingsdk.cloud.TestRunner",
      },
      {
        "attrs": {},
        "path": "root/my_bucket",
        "props": {
          "initialObjects": {},
          "public": false,
          "topics": {},
        },
        "type": "wingsdk.cloud.Bucket",
      },
    ],
    "sdkVersion": "0.0.0",
  },
  "tree.json": {
    "tree": {
      "children": {
        "cloud.TestRunner": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A suite of APIs for running tests and collecting results.",
            "hidden": true,
            "title": "TestRunner",
          },
          "id": "cloud.TestRunner",
          "path": "root/cloud.TestRunner",
        },
        "my_bucket": {
          "constructInfo": {
            "fqn": "constructs.Construct",
            "version": "10.2.70",
          },
          "display": {
            "description": "A cloud object store",
            "title": "Bucket",
          },
          "id": "my_bucket",
          "path": "root/my_bucket",
        },
      },
      "constructInfo": {
        "fqn": "constructs.Construct",
        "version": "10.2.70",
      },
      "id": "root",
      "path": "root",
    },
    "version": "tree-0.1",
  },
}
`;

exports[`put and get objects from bucket 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put (key=greeting.txt).",
  "Get (key=greeting.txt).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`put multiple json objects and list all from bucket 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put Json (key=greeting1.json).",
  "Put Json (key=greeting2.json).",
  "Put Json (key=greeting3.json).",
  "List (prefix=null).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`put multiple objects and list all from bucket 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put (key=greeting1.txt).",
  "Put (key=greeting2.txt).",
  "Put (key=greeting3.txt).",
  "List (prefix=null).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`remove object from a bucket 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put (key=unknown.txt).",
  "Delete (key=unknown.txt).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`remove object from a bucket with mustExist as option 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Bucket created.",
  "Put (key=unknown.txt).",
  "Delete (key=unknown.txt).",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`removing a key will call onDelete method 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Topic created.",
  "wingsdk.cloud.Bucket created.",
  "wingsdk.cloud.Function created.",
  "wingsdk.sim.EventMapping created.",
  "Put (key=unknown.txt).",
  "Publish (message=unknown.txt).",
  "Sending message (message=unknown.txt, subscriber=sim-3).",
  "Invoke (payload=\\"unknown.txt\\").",
  "Subscriber error: TypeError: this.handler.handle is not a function",
  "Delete (key=unknown.txt).",
  "wingsdk.sim.EventMapping deleted.",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.Topic deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;

exports[`update an object in bucket 1`] = `
[
  "wingsdk.cloud.TestRunner created.",
  "wingsdk.cloud.Topic created.",
  "wingsdk.cloud.Bucket created.",
  "wingsdk.cloud.Function created.",
  "wingsdk.sim.EventMapping created.",
  "Publish (message=greeting.txt).",
  "Sending message (message=greeting.txt, subscriber=sim-3).",
  "Invoke (payload=\\"greeting.txt\\").",
  "Subscriber error: TypeError: this.handler.handle is not a function",
  "Put (key=greeting.txt).",
  "wingsdk.sim.EventMapping deleted.",
  "wingsdk.cloud.Function deleted.",
  "wingsdk.cloud.Bucket deleted.",
  "wingsdk.cloud.Topic deleted.",
  "wingsdk.cloud.TestRunner deleted.",
]
`;
