// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`default topic behavior 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Topic85E630E2": {
      "Type": "AWS::SNS::Topic",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`topic with multiple subscribers 1`] = `
"new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle(event) { console.log(\\"Got Event: \\", event); }
};
})())({

})"
`;

exports[`topic with multiple subscribers 2`] = `
"new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle(event) { console.log(\\"Ohh yea!! \\", event); }
};
})())({

})"
`;

exports[`topic with multiple subscribers 3`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Topic85E630E2": {
      "Type": "AWS::SNS::Topic",
    },
    "TopicOnMessage6e1b425262883257": {
      "DependsOn": [
        "TopicOnMessage6e1b4252ServiceRoleEC336C6C",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TopicOnMessage6e1b4252ServiceRoleEC336C6C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TopicOnMessage6e1b4252AllowInvokemyprojectTopic89035A098A6CB705": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TopicOnMessage6e1b425262883257",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "Topic85E630E2",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TopicOnMessage6e1b4252ServiceRoleEC336C6C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicOnMessage6e1b4252Topic514304AD": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "TopicOnMessage6e1b425262883257",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "Topic85E630E2",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "TopicOnMessagee967ab9d37149BC4": {
      "DependsOn": [
        "TopicOnMessagee967ab9dServiceRole111B1D6D",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TopicOnMessagee967ab9dServiceRole111B1D6D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TopicOnMessagee967ab9dAllowInvokemyprojectTopic89035A09679961D5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TopicOnMessagee967ab9d37149BC4",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "Topic85E630E2",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TopicOnMessagee967ab9dServiceRole111B1D6D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicOnMessagee967ab9dTopic93AEDBBF": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "TopicOnMessagee967ab9d37149BC4",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "Topic85E630E2",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`topic with subscriber function 1`] = `
"new ((function(){
return class Handler {
  constructor(clients) {
    for (const [name, client] of Object.entries(clients)) {
      this[name] = client;
    }
  }
  async handle(event) { console.log(\\"Received: \\", event); }
};
})())({

})"
`;

exports[`topic with subscriber function 2`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Topic85E630E2": {
      "Type": "AWS::SNS::Topic",
    },
    "TopicOnMessagec185c7e34FC71FA2": {
      "DependsOn": [
        "TopicOnMessagec185c7e3ServiceRole9266A390",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TopicOnMessagec185c7e3ServiceRole9266A390",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TopicOnMessagec185c7e3AllowInvokemyprojectTopic89035A094D8BE352": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TopicOnMessagec185c7e34FC71FA2",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "Topic85E630E2",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TopicOnMessagec185c7e3ServiceRole9266A390": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TopicOnMessagec185c7e3Topic557B00E1": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "TopicOnMessagec185c7e34FC71FA2",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "Topic85E630E2",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
