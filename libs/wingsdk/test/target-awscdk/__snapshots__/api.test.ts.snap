// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`api configured for cors 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Methods": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Allow-Origin": {
                        "schema": {
                          "type": "string",
                        },
                      },
                      "Access-Control-Max-Age": {
                        "schema": {
                          "type": "string",
                        },
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "204": {
                    "description": "204 response",
                    "headers": {
                      "Access-Control-Allow-Headers": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Methods": {
                        "type": "string",
                      },
                      "Access-Control-Allow-Origin": {
                        "type": "string",
                      },
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                #if ($context.httpMethod == \\"OPTIONS\\")
                    {\\"statusCode\\": 204}
                #else
                    {\\"statusCode\\": 404}
                #end
              ",
                  },
                  "responses": {
                    "204": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Requested-With'",
                        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,HEAD,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{}",
                      },
                      "statusCode": "204",
                    },
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90061478595aa61bac0c7d15c6c0069f032f": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETc2e3ffa85BF93889": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90061478595aa61bac0c7d15c6c0069f032f",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api url can be used as environment variable 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA900631e48b71dd3d2a7c890c7b7740417862": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA900631e48b71dd3d2a7c890c7b7740417862",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "Fn9270CBC0": {
      "DependsOn": [
        "FnServiceRoleB9001A96",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Environment": {
          "Variables": {
            "API_URL": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "Apiapi93AB445C",
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  {
                    "Ref": "Apiapistage69F1AB31",
                  },
                  "/",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FnServiceRoleB9001A96",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FnLogRetention3E2191B4": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "Fn9270CBC0",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "FnServiceRoleB9001A96": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with 'name' & 'age' parameter 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/{name}/{age}": {
              "get": {
                "operationId": "get-{name}/{age}",
                "parameters": [
                  {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                  {
                    "in": "path",
                    "name": "age",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006619920637029c1dc11686e0fdf7abcfe": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETe6c024e850B59745": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/{name}/{age}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006619920637029c1dc11686e0fdf7abcfe",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with 'name' parameter 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/{name}": {
              "get": {
                "operationId": "get-{name}",
                "parameters": [
                  {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90062aebf8bb5e9d71287c6d08fe3894dd86": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETda43a2f29F0450A6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/{name}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90062aebf8bb5e9d71287c6d08fe3894dd86",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with CONNECT route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "connect": {
                "operationId": "connect",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90061bb0f3120d3e7f1cd83671830f7785d5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionCONNECTc2e3ffa848E50D94": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/CONNECT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90061bb0f3120d3e7f1cd83671830f7785d5",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with DELETE route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "delete": {
                "operationId": "delete",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA900691ead72707f1c2c50cd721fe9ec00676": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionDELETEc2e3ffa888232744": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/DELETE/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA900691ead72707f1c2c50cd721fe9ec00676",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with GET route at root 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006689d2fd667efcb286230c36c8c936157": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETc2e3ffa85BF93889": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006689d2fd667efcb286230c36c8c936157",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with GET routes with common prefix 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequest6e1b42522C08E04B": {
      "DependsOn": [
        "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequest6e1b4252LogRetention09E9630A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequest6e1b42522C08E04B",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "get": {
                "operationId": "get-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequest6e1b42522C08E04B",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006d329f69d4c6c2b34f134f24ea2c382b4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET01d4e10b58D09124": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequest6e1b42522C08E04B",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006d329f69d4c6c2b34f134f24ea2c382b4",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with GET routes with different prefix 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequest6e1b42522C08E04B": {
      "DependsOn": [
        "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequest6e1b4252LogRetention09E9630A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequest6e1b42522C08E04B",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/foo/bar": {
              "get": {
                "operationId": "get-foo/bar",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequest6e1b42522C08E04B",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006bfc6c7abd0edb8dbc63b88aa083e476f": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET14d002e84040D816": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequest6e1b42522C08E04B",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/foo/bar",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006bfc6c7abd0edb8dbc63b88aa083e476f",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with HEAD route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "head": {
                "operationId": "head",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006e43ddb8f6952d3cb016c1ca7ad895f79": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionHEADc2e3ffa84EAE7826": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/HEAD/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006e43ddb8f6952d3cb016c1ca7ad895f79",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with OPTIONS route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "options": {
                "operationId": "options",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006288dddc308a11722a4d4440f21118164": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionOPTIONSc2e3ffa8A347CDD2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/OPTIONS/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006288dddc308a11722a4d4440f21118164",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with PATCH route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "patch": {
                "operationId": "patch",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90068c2c089f9c518421b622b2644f2d94ee": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionPATCHc2e3ffa81B1A24AB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/PATCH/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90068c2c089f9c518421b622b2644f2d94ee",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with POST route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "post": {
                "operationId": "post",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90067c73b61a7f9b9f94aa6d13d63632fd54": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionPOSTc2e3ffa84BF1BB79": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90067c73b61a7f9b9f94aa6d13d63632fd54",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with PUT route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "put": {
                "operationId": "put",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90061d5378c99bce30b9423ad223442b0574": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionPUTc2e3ffa832C407B6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90061d5378c99bce30b9423ad223442b0574",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple GET route and one lambda 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "get": {
                "operationId": "get-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA9006917d81c2589fe9fdb3cf546dfb7ff24d": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET01d4e10b58D09124": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA9006917d81c2589fe9fdb3cf546dfb7ff24d",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple methods and multiple lambda 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequest6e1b42522C08E04B": {
      "DependsOn": [
        "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequest6e1b4252LogRetention09E9630A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequest6e1b42522C08E04B",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequest6e1b4252ServiceRoleEE1C8A8B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "post": {
                "operationId": "post-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequest6e1b42522C08E04B",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90064f2956c4dece79cefd0b0727a095d9e2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionPOST01d4e10b1C72C9D7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequest6e1b42522C08E04B",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/POST/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90064f2956c4dece79cefd0b0727a095d9e2",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple methods and one lambda 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/bat": {
              "post": {
                "operationId": "post-hello/bat",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/hello/foo": {
              "get": {
                "operationId": "get-hello/foo",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90068d933db4198564818e10d40960599905": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET4984af0e7ED7CAA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/foo",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionPOST01d4e10b1C72C9D7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/POST/hello/bat",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90068d933db4198564818e10d40960599905",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with multiple methods on same route 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/": {
              "get": {
                "operationId": "get",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
              "put": {
                "operationId": "put",
                "parameters": [],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA900663fc9e82490a3d88a8e899d29ea52aca": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGETc2e3ffa85BF93889": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiapipermissionPUTc2e3ffa832C407B6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA900663fc9e82490a3d88a8e899d29ea52aca",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`api with path parameter 1`] = `
{
  "Outputs": {
    "WingTestRunnerFunctionArns": {
      "Value": "[]",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiApiOnRequestc185c7e32908D5D4": {
      "DependsOn": [
        "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiApiOnRequestc185c7e3ServiceRoleB27988EE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiApiOnRequestc185c7e3LogRetention4CE6017A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiApiOnRequestc185c7e32908D5D4",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiApiOnRequestc185c7e3ServiceRoleB27988EE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Apiapi93AB445C": {
      "Properties": {
        "Body": {
          "openapi": "3.0.3",
          "paths": {
            "/hello/{world}": {
              "get": {
                "operationId": "get-hello/{world}",
                "parameters": [
                  {
                    "in": "path",
                    "name": "world",
                    "required": true,
                    "schema": {
                      "type": "string",
                    },
                  },
                ],
                "responses": {
                  "200": {
                    "content": {},
                    "description": "200 response",
                  },
                },
                "x-amazon-apigateway-integration": {
                  "contentHandling": "CONVERT_TO_TEXT",
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "responses": {
                    "default": {
                      "statusCode": "200",
                    },
                  },
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:apigateway:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiApiOnRequestc185c7e32908D5D4",
                            "Arn",
                          ],
                        },
                        "/invocations",
                      ],
                    ],
                  },
                },
              },
            },
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "produces": [
                  "application/json",
                ],
                "responses": {
                  "404": {
                    "description": "404 response",
                    "headers": {
                      "Content-Type": {
                        "type": "string",
                      },
                    },
                  },
                },
                "x-amazon-apigateway-integration": {
                  "passthroughBehavior": "never",
                  "requestTemplates": {
                    "application/json": "
                {\\"statusCode\\": 404}
              ",
                  },
                  "responses": {
                    "404": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                    "default": {
                      "responseParameters": {
                        "method.response.header.Content-Type": "'application/json'",
                      },
                      "responseTemplates": {
                        "application/json": "{\\"statusCode\\": 404, \\"message\\": \\"Error: Resource not found\\"}",
                      },
                      "statusCode": "404",
                    },
                  },
                  "type": "mock",
                },
              },
            },
          },
        },
        "Name": "api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiapiAccount3EE8A867": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "Apiapi93AB445C",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiapiCloudWatchRole6C699FCE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapiCloudWatchRole6C699FCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "Apiapideployment63AA90064f9ea8cae3e0949e5921489d0a727641": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiapipermissionGET01369a0aAA9D8BFC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiApiOnRequestc185c7e32908D5D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "Apiapi93AB445C",
              },
              "/prod/GET/hello/{world}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Apiapistage69F1AB31": {
      "DependsOn": [
        "ApiapiAccount3EE8A867",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "Apiapideployment63AA90064f9ea8cae3e0949e5921489d0a727641",
        },
        "RestApiId": {
          "Ref": "Apiapi93AB445C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "<S3Key>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
