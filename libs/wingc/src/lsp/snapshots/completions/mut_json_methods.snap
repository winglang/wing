---
source: libs/wingc/src/lsp/completions.rs
---
- label: asBool
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n asBool: (): bool\n```\n---\nConvert Json element to boolean if possible.\n\n### Returns\na boolean."
  sortText: ff|asBool
  insertText: asBool($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: asNum
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n asNum: (): num\n```\n---\nConvert Json element to number if possible.\n\n### Returns\na number."
  sortText: ff|asNum
  insertText: asNum($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: asStr
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n asStr: (): str\n```\n---\nConvert Json element to string if possible.\n\n### Returns\na string."
  sortText: ff|asStr
  insertText: asStr($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: get
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n get: (key: str): MutJson\n```\n---\nReturns a specified element from the Json.\n\n### Parameters\n - *key* - The key of the element to return.\n\n### Returns\nThe element associated with the specified key, or undefined if the key can't be found"
  sortText: ff|get
  insertText: get($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: getAt
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n getAt: (index: num): MutJson\n```\n---\nReturns a specified element at a given index from MutJson Array.\n\n### Parameters\n - *index* - The index of the element in the MutJson Array to return.\n\n### Returns\nThe element at given index in MutJson Array, or undefined if index is not valid"
  sortText: ff|getAt
  insertText: getAt($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: set
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n set: (key: str, value: MutJson): void\n```\n---\nAdds or updates an element in MutJson with a specific key and value.\n\n### Parameters\n - *key* - The key of the element to add.\n - *value* - The value of the element to add."
  sortText: ff|set
  insertText: set($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: setAt
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n setAt: (index: num, value: MutJson): void\n```\n---\nSet element in MutJson Array with a specific key and value.\n\n### Parameters\n - *index*\n - *value* - The value of the element to set."
  sortText: ff|setAt
  insertText: setAt($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: tryAsBool
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n tryAsBool: (): bool?\n```\n---\nConvert Json element to boolean if possible.\n\n### Returns\na boolean."
  sortText: ff|tryAsBool
  insertText: tryAsBool($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: tryAsNum
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n tryAsNum: (): num?\n```\n---\nConvert Json element to number if possible.\n\n### Returns\na number."
  sortText: ff|tryAsNum
  insertText: tryAsNum($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: tryAsStr
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n tryAsStr: (): str?\n```\n---\nConvert Json element to string if possible.\n\n### Returns\na string."
  sortText: ff|tryAsStr
  insertText: tryAsStr($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: tryGet
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n tryGet: (key: str): MutJson?\n```\n---\nOptionally returns an specified element from the Json.\n\n### Parameters\n - *key* - The key of the element to return.\n\n### Returns\nThe element associated with the specified key, or undefined if the key can't be found"
  sortText: ff|tryGet
  insertText: tryGet($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: tryGetAt
  kind: 2
  documentation:
    kind: markdown
    value: "```wing\n tryGetAt: (index: num): MutJson?\n```\n---\nOptionally returns a specified element at a given index from Json Array.\n\n### Parameters\n - *index* - The index of the element in the Json Array to return.\n\n### Returns\nThe element at given index in Json Array, or undefined if index is not valid"
  sortText: ff|tryGetAt
  insertText: tryGetAt($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints

