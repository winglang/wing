---
source: libs/wingc/src/lsp/completions.rs
---
- label: delete
  kind: 2
  detail: "(url: str, options: RequestOptions?): Response"
  documentation:
    kind: markdown
    value: "```wing\nstatic delete: (url: str, options: RequestOptions?): Response\n```\n---\nExecutes a DELETE request to a specified URL and provides a formatted response.\n\n\n### Returns\nthe formatted response of the call"
  sortText: ff|delete
  insertText: delete($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: fetch
  kind: 2
  detail: "(url: str, options: RequestOptions?): Response"
  documentation:
    kind: markdown
    value: "```wing\nstatic fetch: (url: str, options: RequestOptions?): Response\n```\n---\nExecutes a HTTP request to a specified URL and provides a formatted response.\n\n\n### Returns\nthe formatted response of the call\n\n### Remarks\nThis method allows various HTTP methods based on the provided options.\n\n*@throws* *Only throws if there is a networking error*"
  sortText: ff|fetch
  insertText: fetch($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: get
  kind: 2
  detail: "(url: str, options: RequestOptions?): Response"
  documentation:
    kind: markdown
    value: "```wing\nstatic get: (url: str, options: RequestOptions?): Response\n```\n---\nExecutes a GET request to a specified URL and provides a formatted response.\n\n\n### Returns\nthe formatted response of the call"
  sortText: ff|get
  insertText: get($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: patch
  kind: 2
  detail: "(url: str, options: RequestOptions?): Response"
  documentation:
    kind: markdown
    value: "```wing\nstatic patch: (url: str, options: RequestOptions?): Response\n```\n---\nExecutes a PATCH request to a specified URL and provides a formatted response.\n\n\n### Returns\nthe formatted response of the call"
  sortText: ff|patch
  insertText: patch($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: post
  kind: 2
  detail: "(url: str, options: RequestOptions?): Response"
  documentation:
    kind: markdown
    value: "```wing\nstatic post: (url: str, options: RequestOptions?): Response\n```\n---\nExecutes a POST request to a specified URL and provides a formatted response.\n\n\n### Returns\nthe formatted response of the call"
  sortText: ff|post
  insertText: post($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: put
  kind: 2
  detail: "(url: str, options: RequestOptions?): Response"
  documentation:
    kind: markdown
    value: "```wing\nstatic put: (url: str, options: RequestOptions?): Response\n```\n---\nExecutes a PUT request to a specified URL and provides a formatted response.\n\n\n### Returns\nthe formatted response of the call"
  sortText: ff|put
  insertText: put($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: Util
  kind: 7
  documentation:
    kind: markdown
    value: "```wing\nclass Util\n```\n---\nthe Http class is used for calling different HTTP methods and requesting and sending information online,  as well as testing public accessible resources."
  sortText: gg|Util
- label: RequestOptions
  kind: 22
  documentation:
    kind: markdown
    value: "```wing\nstruct RequestOptions\n```\n---\nAn object containing any custom settings that you want to apply to the request.\n### Fields\n- `body?` — Any body that you want to add to your request.\n- `cache?` — The cache mode you want to use for the request.\n- `headers?` — Any headers you want to add to your request.\n- `method?` — The request method, e.g., GET, POST. The default is GET.\n- `redirect?` — he redirect mode to use: follow, error.\n- `referrer?` — A string specifying \"no-referrer\", client, or a URL."
  sortText: hh|RequestOptions
- label: Response
  kind: 22
  documentation:
    kind: markdown
    value: "```wing\nstruct Response\n```\n---\nThe response to a HTTP request.\n### Fields\n- `body?` — A string representation of the body contents.\n- `headers` — The map of header information associated with the response.\n- `ok` — A boolean indicating whether the response was successful (status in the range 200 – 299) or not.\n- `status` — The status code of the response.\n- `url` — The URL of the response."
  sortText: hh|Response
- label: HttpMethod
  kind: 13
  documentation:
    kind: markdown
    value: "```wing\nenum HttpMethod\n```\n---\nThe request's method.\n- `GET`\n- `PUT`\n- `DELETE`\n- `PATCH`\n- `POST`\n- `OPTIONS`\n- `HEAD`"
  sortText: jj|HttpMethod
- label: RequestCache
  kind: 13
  documentation:
    kind: markdown
    value: "```wing\nenum RequestCache\n```\n---\nThe cache mode of the request.\n- `DEFAULT`\n- `NO_STORE`\n- `RELOAD`\n- `NO_CACHE`\n- `FORCE_CACHE`\n\n\n### Remarks\nIt controls how a request will interact with the system's HTTP cache."
  sortText: jj|RequestCache
- label: RequestRedirect
  kind: 13
  documentation:
    kind: markdown
    value: "```wing\nenum RequestRedirect\n```\n---\nThe redirect read-only property that contains the mode for how redirects are handled.\n- `FOLLOW`\n- `ERROR`"
  sortText: jj|RequestRedirect

