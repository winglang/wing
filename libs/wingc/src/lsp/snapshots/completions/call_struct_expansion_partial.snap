---
source: libs/wingc/src/lsp/completions.rs
---
- label: "two:"
  kind: 5
  detail: str
  documentation:
    kind: markdown
    value: "```wing\ntwo: str\n```"
  sortText: "ab|a|two:"
  insertText: "two: $1"
  insertTextFormat: 2
  command:
    title: triggerCompletion
    command: editor.action.triggerSuggest
- label: assert
  kind: 3
  detail: "(condition: bool): void"
  documentation:
    kind: markdown
    value: "```wing\nassert: (condition: bool): void\n```\n---\nAsserts that a condition is true\n### Parameters\n- `condition` — `bool` — The condition to assert"
  sortText: cc|assert
  insertText: assert($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: log
  kind: 3
  detail: "(message: str): void"
  documentation:
    kind: markdown
    value: "```wing\nlog: (message: str): void\n```\n---\nLogs a message\n### Parameters\n- `message` — `str` — The message to log"
  sortText: cc|log
  insertText: log($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: unsafeCast
  kind: 3
  detail: "(value: any): any"
  documentation:
    kind: markdown
    value: "```wing\nunsafeCast: (value: any): any\n```\n---\nCasts a value into a different type. This is unsafe and can cause runtime errors\n### Parameters\n- `value` — `any` — The value to cast into a different type"
  sortText: cc|unsafeCast
  insertText: unsafeCast($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: x
  kind: 3
  detail: "preflight (arg1: A): void"
  documentation:
    kind: markdown
    value: "```wing\npreflight x: preflight (arg1: A): void\n```\n---\n### Parameters\n- `...arg1` — `A`\n  \n  - `one` — `str`\n  - `two` — `str`"
  sortText: cc|x
  insertText: x($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: A
  kind: 22
  documentation:
    kind: markdown
    value: "```wing\nstruct A\n```\n---\n### Fields\n- `one` — `str`\n- `two` — `str`"
  sortText: hh|A
- label: "inflight () => {}"
  kind: 15
  sortText: "ll|inflight () => {}"
  filterText: inflight
  insertText: "inflight ($1) => {$2}"
  insertTextFormat: 2

