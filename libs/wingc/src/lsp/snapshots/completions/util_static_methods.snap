---
source: libs/wingc/src/lsp/completions.rs
---
- label: env
  kind: 2
  detail: "(name: str): str"
  documentation:
    kind: markdown
    value: "```wing\nstatic env: (name: str): str\n```\n---\nReturns the value of an environment variable.\n\n\n### Remarks\nThrows if not found or empty."
  sortText: ff|env
  insertText: env($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: sleep
  kind: 2
  detail: "(delay: duration): void"
  documentation:
    kind: markdown
    value: "```wing\nstatic sleep: (delay: duration): void\n```\n---\nSuspends execution for a given duration."
  sortText: ff|sleep
  insertText: sleep($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: tryEnv
  kind: 2
  detail: "(name: str): str?"
  documentation:
    kind: markdown
    value: "```wing\nstatic tryEnv: (name: str): str?\n```\n---\nReturns the value of an environment variable.\n\n\n### Returns\nThe value of the environment variable or `nil`.\n\n### Remarks\nReturns `nil` if not found or empty."
  sortText: ff|tryEnv
  insertText: tryEnv($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: waitUntil
  kind: 2
  detail: "(predicate: inflight (): bool, props: WaitUntilProps?): bool"
  documentation:
    kind: markdown
    value: "```wing\nstatic waitUntil: (predicate: inflight (): bool, props: WaitUntilProps?): bool\n```\n---\nRun a predicate repeatedly, waiting until it returns true or until the timeout elapses.\n\n\n### Returns\nTrue if predicate is truthful within timeout.\n\n*@throws* *Will throw if the given predicate throws.*"
  sortText: ff|waitUntil
  insertText: waitUntil($0)
  insertTextFormat: 2
  command:
    title: triggerParameterHints
    command: editor.action.triggerParameterHints
- label: Util
  kind: 7
  documentation:
    kind: markdown
    value: "```wing\nclass Util\n```\n---\nUtility functions."
  sortText: gg|Util
- label: WaitUntilProps
  kind: 22
  documentation:
    kind: markdown
    value: "```wing\nstruct WaitUntilProps\n```\n---\nProperties for `util.waitUntil`.\n### Fields\n- `interval?` — Interval between predicate retries.\n- `timeout?` — The timeout for keep trying predicate."
  sortText: hh|WaitUntilProps
- label: IPredicateHandler
  kind: 8
  documentation:
    kind: markdown
    value: "```wing\ninterface IPredicateHandler extends IResource\n```\n---\nA predicate with an inflight \"handle\" method that can be passed to `util.busyWait`.\n### Methods\n- `handle` — The Predicate function that is called."
  sortText: ii|IPredicateHandler
- label: IPredicateHandlerClient
  kind: 8
  documentation:
    kind: markdown
    value: "```wing\ninterface IPredicateHandlerClient\n```\n---\nInflight client for `IPredicateHandler`.\n### Methods\n- `handle` — The Predicate function that is called."
  sortText: ii|IPredicateHandlerClient

