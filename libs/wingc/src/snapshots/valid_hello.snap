---
source: libs/wingc/src/lib.rs
description: "../../examples/tests/valid/hello.w"
---
// ../../examples/tests/valid/hello.w.out/preflight.js
const $stdlib = require('@winglang/wingsdk');
const $outdir = process.env.WINGSDK_SYNTH_DIR ?? ".";

function __app(target) {
	switch (target) {
		case "sim":
			return $stdlib.sim.App;
		case "tfaws":
		case "tf-aws":
			return $stdlib.tfaws.App;
		default:
			throw new Error(`Unknown WING_TARGET value: "${process.env.WING_TARGET ?? ""}"`);
	}
}
const $App = __app(process.env.WING_TARGET);

const cloud = require('@winglang/wingsdk').cloud;
class MyApp extends $App {
constructor() {
  super({ outdir: $outdir });
  
  let bucket = new cloud.Bucket(this,"cloud.Bucket");
  let queue = new cloud.Queue(this,"cloud.Queue");
  const handler = new $stdlib.core.Inflight({
    code: $stdlib.core.NodeJsCode.fromFile(require('path').resolve(__dirname, "proc.cefd654de30673ff4ee63c1586a3ac0e4b69217f987c07f9274ecb1c7b7e2066/index.js")),
    entrypoint: "$proc",
    captures: {
      bucket: {
        resource: bucket,
        methods: ["get","list","put"]
      },
    }
  });
  queue.onMessage(handler);
}
}
new MyApp({ name: "hello" }).synth();
// ../../examples/tests/valid/hello.w.out/proc.cefd654de30673ff4ee63c1586a3ac0e4b69217f987c07f9274ecb1c7b7e2066/index.js
async function $proc({ bucket }, message) {
  bucket.put("hello.txt",`Hello, ${message}!`);
  return message;
};

