{
  "author": {
    "email": "ping@monada.co",
    "name": "Monada, Inc.",
    "organization": true,
    "roles": [
      "author"
    ]
  },
  "bundled": {
    "@aws-sdk/client-cloudwatch-logs": "3.215.0",
    "@aws-sdk/client-dynamodb": "3.215.0",
    "@aws-sdk/client-lambda": "3.215.0",
    "@aws-sdk/client-s3": "3.215.0",
    "@aws-sdk/client-sns": "3.215.0",
    "@aws-sdk/client-sqs": "3.215.0",
    "@aws-sdk/types": "3.215.0",
    "@aws-sdk/util-stream-node": "3.215.0",
    "@aws-sdk/util-utf8-node": "3.208.0",
    "@azure/core-paging": "^1.4.0",
    "@azure/identity": "3.1.2",
    "@azure/storage-blob": "12.12.0",
    "debug": "^4.3.4",
    "esbuild-wasm": "^0.15.15",
    "file-saver": "^2.0.5",
    "jszip": "^3.10.1",
    "safe-stable-stringify": "*",
    "tar": "^6.1.11"
  },
  "dependencies": {
    "@cdktf/provider-aws": "^10.0.11",
    "@cdktf/provider-azurerm": "3.0.16",
    "cdktf": "0.13.2",
    "constructs": "~10.0.25",
    "polycons": "^0.1.1"
  },
  "dependencyClosure": {
    "@cdktf/provider-aws": {
      "submodules": {
        "@cdktf/provider-aws.accessanalyzerAnalyzer": {},
        "@cdktf/provider-aws.accessanalyzerArchiveRule": {},
        "@cdktf/provider-aws.accountAlternateContact": {},
        "@cdktf/provider-aws.acmCertificate": {},
        "@cdktf/provider-aws.acmCertificateValidation": {},
        "@cdktf/provider-aws.acmpcaCertificate": {},
        "@cdktf/provider-aws.acmpcaCertificateAuthority": {},
        "@cdktf/provider-aws.acmpcaCertificateAuthorityCertificate": {},
        "@cdktf/provider-aws.acmpcaPermission": {},
        "@cdktf/provider-aws.acmpcaPolicy": {},
        "@cdktf/provider-aws.alb": {},
        "@cdktf/provider-aws.albListener": {},
        "@cdktf/provider-aws.albListenerCertificate": {},
        "@cdktf/provider-aws.albListenerRule": {},
        "@cdktf/provider-aws.albTargetGroup": {},
        "@cdktf/provider-aws.albTargetGroupAttachment": {},
        "@cdktf/provider-aws.ami": {},
        "@cdktf/provider-aws.amiCopy": {},
        "@cdktf/provider-aws.amiFromInstance": {},
        "@cdktf/provider-aws.amiLaunchPermission": {},
        "@cdktf/provider-aws.amplifyApp": {},
        "@cdktf/provider-aws.amplifyBackendEnvironment": {},
        "@cdktf/provider-aws.amplifyBranch": {},
        "@cdktf/provider-aws.amplifyDomainAssociation": {},
        "@cdktf/provider-aws.amplifyWebhook": {},
        "@cdktf/provider-aws.apiGatewayAccount": {},
        "@cdktf/provider-aws.apiGatewayApiKey": {},
        "@cdktf/provider-aws.apiGatewayAuthorizer": {},
        "@cdktf/provider-aws.apiGatewayBasePathMapping": {},
        "@cdktf/provider-aws.apiGatewayClientCertificate": {},
        "@cdktf/provider-aws.apiGatewayDeployment": {},
        "@cdktf/provider-aws.apiGatewayDocumentationPart": {},
        "@cdktf/provider-aws.apiGatewayDocumentationVersion": {},
        "@cdktf/provider-aws.apiGatewayDomainName": {},
        "@cdktf/provider-aws.apiGatewayGatewayResponse": {},
        "@cdktf/provider-aws.apiGatewayIntegration": {},
        "@cdktf/provider-aws.apiGatewayIntegrationResponse": {},
        "@cdktf/provider-aws.apiGatewayMethod": {},
        "@cdktf/provider-aws.apiGatewayMethodResponse": {},
        "@cdktf/provider-aws.apiGatewayMethodSettings": {},
        "@cdktf/provider-aws.apiGatewayModel": {},
        "@cdktf/provider-aws.apiGatewayRequestValidator": {},
        "@cdktf/provider-aws.apiGatewayResource": {},
        "@cdktf/provider-aws.apiGatewayRestApi": {},
        "@cdktf/provider-aws.apiGatewayRestApiPolicy": {},
        "@cdktf/provider-aws.apiGatewayStage": {},
        "@cdktf/provider-aws.apiGatewayUsagePlan": {},
        "@cdktf/provider-aws.apiGatewayUsagePlanKey": {},
        "@cdktf/provider-aws.apiGatewayVpcLink": {},
        "@cdktf/provider-aws.apigatewayv2Api": {},
        "@cdktf/provider-aws.apigatewayv2ApiMapping": {},
        "@cdktf/provider-aws.apigatewayv2Authorizer": {},
        "@cdktf/provider-aws.apigatewayv2Deployment": {},
        "@cdktf/provider-aws.apigatewayv2DomainName": {},
        "@cdktf/provider-aws.apigatewayv2Integration": {},
        "@cdktf/provider-aws.apigatewayv2IntegrationResponse": {},
        "@cdktf/provider-aws.apigatewayv2Model": {},
        "@cdktf/provider-aws.apigatewayv2Route": {},
        "@cdktf/provider-aws.apigatewayv2RouteResponse": {},
        "@cdktf/provider-aws.apigatewayv2Stage": {},
        "@cdktf/provider-aws.apigatewayv2VpcLink": {},
        "@cdktf/provider-aws.appCookieStickinessPolicy": {},
        "@cdktf/provider-aws.appautoscalingPolicy": {},
        "@cdktf/provider-aws.appautoscalingScheduledAction": {},
        "@cdktf/provider-aws.appautoscalingTarget": {},
        "@cdktf/provider-aws.appconfigApplication": {},
        "@cdktf/provider-aws.appconfigConfigurationProfile": {},
        "@cdktf/provider-aws.appconfigDeployment": {},
        "@cdktf/provider-aws.appconfigDeploymentStrategy": {},
        "@cdktf/provider-aws.appconfigEnvironment": {},
        "@cdktf/provider-aws.appconfigHostedConfigurationVersion": {},
        "@cdktf/provider-aws.appflowConnectorProfile": {},
        "@cdktf/provider-aws.appflowFlow": {},
        "@cdktf/provider-aws.appintegrationsEventIntegration": {},
        "@cdktf/provider-aws.applicationinsightsApplication": {},
        "@cdktf/provider-aws.appmeshGatewayRoute": {},
        "@cdktf/provider-aws.appmeshMesh": {},
        "@cdktf/provider-aws.appmeshRoute": {},
        "@cdktf/provider-aws.appmeshVirtualGateway": {},
        "@cdktf/provider-aws.appmeshVirtualNode": {},
        "@cdktf/provider-aws.appmeshVirtualRouter": {},
        "@cdktf/provider-aws.appmeshVirtualService": {},
        "@cdktf/provider-aws.apprunnerAutoScalingConfigurationVersion": {},
        "@cdktf/provider-aws.apprunnerConnection": {},
        "@cdktf/provider-aws.apprunnerCustomDomainAssociation": {},
        "@cdktf/provider-aws.apprunnerObservabilityConfiguration": {},
        "@cdktf/provider-aws.apprunnerService": {},
        "@cdktf/provider-aws.apprunnerVpcConnector": {},
        "@cdktf/provider-aws.apprunnerVpcIngressConnection": {},
        "@cdktf/provider-aws.appstreamDirectoryConfig": {},
        "@cdktf/provider-aws.appstreamFleet": {},
        "@cdktf/provider-aws.appstreamFleetStackAssociation": {},
        "@cdktf/provider-aws.appstreamImageBuilder": {},
        "@cdktf/provider-aws.appstreamStack": {},
        "@cdktf/provider-aws.appstreamUser": {},
        "@cdktf/provider-aws.appstreamUserStackAssociation": {},
        "@cdktf/provider-aws.appsyncApiCache": {},
        "@cdktf/provider-aws.appsyncApiKey": {},
        "@cdktf/provider-aws.appsyncDatasource": {},
        "@cdktf/provider-aws.appsyncDomainName": {},
        "@cdktf/provider-aws.appsyncDomainNameApiAssociation": {},
        "@cdktf/provider-aws.appsyncFunction": {},
        "@cdktf/provider-aws.appsyncGraphqlApi": {},
        "@cdktf/provider-aws.appsyncResolver": {},
        "@cdktf/provider-aws.athenaDataCatalog": {},
        "@cdktf/provider-aws.athenaDatabase": {},
        "@cdktf/provider-aws.athenaNamedQuery": {},
        "@cdktf/provider-aws.athenaWorkgroup": {},
        "@cdktf/provider-aws.autoscalingAttachment": {},
        "@cdktf/provider-aws.autoscalingGroup": {},
        "@cdktf/provider-aws.autoscalingGroupTag": {},
        "@cdktf/provider-aws.autoscalingLifecycleHook": {},
        "@cdktf/provider-aws.autoscalingNotification": {},
        "@cdktf/provider-aws.autoscalingPolicy": {},
        "@cdktf/provider-aws.autoscalingSchedule": {},
        "@cdktf/provider-aws.autoscalingplansScalingPlan": {},
        "@cdktf/provider-aws.backupFramework": {},
        "@cdktf/provider-aws.backupGlobalSettings": {},
        "@cdktf/provider-aws.backupPlan": {},
        "@cdktf/provider-aws.backupRegionSettings": {},
        "@cdktf/provider-aws.backupReportPlan": {},
        "@cdktf/provider-aws.backupSelection": {},
        "@cdktf/provider-aws.backupVault": {},
        "@cdktf/provider-aws.backupVaultLockConfiguration": {},
        "@cdktf/provider-aws.backupVaultNotifications": {},
        "@cdktf/provider-aws.backupVaultPolicy": {},
        "@cdktf/provider-aws.batchComputeEnvironment": {},
        "@cdktf/provider-aws.batchJobDefinition": {},
        "@cdktf/provider-aws.batchJobQueue": {},
        "@cdktf/provider-aws.batchSchedulingPolicy": {},
        "@cdktf/provider-aws.budgetsBudget": {},
        "@cdktf/provider-aws.budgetsBudgetAction": {},
        "@cdktf/provider-aws.ceAnomalyMonitor": {},
        "@cdktf/provider-aws.ceAnomalySubscription": {},
        "@cdktf/provider-aws.ceCostAllocationTag": {},
        "@cdktf/provider-aws.ceCostCategory": {},
        "@cdktf/provider-aws.chimeVoiceConnector": {},
        "@cdktf/provider-aws.chimeVoiceConnectorGroup": {},
        "@cdktf/provider-aws.chimeVoiceConnectorLogging": {},
        "@cdktf/provider-aws.chimeVoiceConnectorOrigination": {},
        "@cdktf/provider-aws.chimeVoiceConnectorStreaming": {},
        "@cdktf/provider-aws.chimeVoiceConnectorTermination": {},
        "@cdktf/provider-aws.chimeVoiceConnectorTerminationCredentials": {},
        "@cdktf/provider-aws.cloud9EnvironmentEc2": {},
        "@cdktf/provider-aws.cloud9EnvironmentMembership": {},
        "@cdktf/provider-aws.cloudcontrolapiResource": {},
        "@cdktf/provider-aws.cloudformationStack": {},
        "@cdktf/provider-aws.cloudformationStackSet": {},
        "@cdktf/provider-aws.cloudformationStackSetInstance": {},
        "@cdktf/provider-aws.cloudformationType": {},
        "@cdktf/provider-aws.cloudfrontCachePolicy": {},
        "@cdktf/provider-aws.cloudfrontDistribution": {},
        "@cdktf/provider-aws.cloudfrontFieldLevelEncryptionConfig": {},
        "@cdktf/provider-aws.cloudfrontFieldLevelEncryptionProfile": {},
        "@cdktf/provider-aws.cloudfrontFunction": {},
        "@cdktf/provider-aws.cloudfrontKeyGroup": {},
        "@cdktf/provider-aws.cloudfrontMonitoringSubscription": {},
        "@cdktf/provider-aws.cloudfrontOriginAccessControl": {},
        "@cdktf/provider-aws.cloudfrontOriginAccessIdentity": {},
        "@cdktf/provider-aws.cloudfrontOriginRequestPolicy": {},
        "@cdktf/provider-aws.cloudfrontPublicKey": {},
        "@cdktf/provider-aws.cloudfrontRealtimeLogConfig": {},
        "@cdktf/provider-aws.cloudfrontResponseHeadersPolicy": {},
        "@cdktf/provider-aws.cloudhsmV2Cluster": {},
        "@cdktf/provider-aws.cloudhsmV2Hsm": {},
        "@cdktf/provider-aws.cloudsearchDomain": {},
        "@cdktf/provider-aws.cloudsearchDomainServiceAccessPolicy": {},
        "@cdktf/provider-aws.cloudtrail": {},
        "@cdktf/provider-aws.cloudtrailEventDataStore": {},
        "@cdktf/provider-aws.cloudwatchCompositeAlarm": {},
        "@cdktf/provider-aws.cloudwatchDashboard": {},
        "@cdktf/provider-aws.cloudwatchEventApiDestination": {},
        "@cdktf/provider-aws.cloudwatchEventArchive": {},
        "@cdktf/provider-aws.cloudwatchEventBus": {},
        "@cdktf/provider-aws.cloudwatchEventBusPolicy": {},
        "@cdktf/provider-aws.cloudwatchEventConnection": {},
        "@cdktf/provider-aws.cloudwatchEventPermission": {},
        "@cdktf/provider-aws.cloudwatchEventRule": {},
        "@cdktf/provider-aws.cloudwatchEventTarget": {},
        "@cdktf/provider-aws.cloudwatchLogDestination": {},
        "@cdktf/provider-aws.cloudwatchLogDestinationPolicy": {},
        "@cdktf/provider-aws.cloudwatchLogGroup": {},
        "@cdktf/provider-aws.cloudwatchLogMetricFilter": {},
        "@cdktf/provider-aws.cloudwatchLogResourcePolicy": {},
        "@cdktf/provider-aws.cloudwatchLogStream": {},
        "@cdktf/provider-aws.cloudwatchLogSubscriptionFilter": {},
        "@cdktf/provider-aws.cloudwatchMetricAlarm": {},
        "@cdktf/provider-aws.cloudwatchMetricStream": {},
        "@cdktf/provider-aws.cloudwatchQueryDefinition": {},
        "@cdktf/provider-aws.codeartifactDomain": {},
        "@cdktf/provider-aws.codeartifactDomainPermissionsPolicy": {},
        "@cdktf/provider-aws.codeartifactRepository": {},
        "@cdktf/provider-aws.codeartifactRepositoryPermissionsPolicy": {},
        "@cdktf/provider-aws.codebuildProject": {},
        "@cdktf/provider-aws.codebuildReportGroup": {},
        "@cdktf/provider-aws.codebuildResourcePolicy": {},
        "@cdktf/provider-aws.codebuildSourceCredential": {},
        "@cdktf/provider-aws.codebuildWebhook": {},
        "@cdktf/provider-aws.codecommitApprovalRuleTemplate": {},
        "@cdktf/provider-aws.codecommitApprovalRuleTemplateAssociation": {},
        "@cdktf/provider-aws.codecommitRepository": {},
        "@cdktf/provider-aws.codecommitTrigger": {},
        "@cdktf/provider-aws.codedeployApp": {},
        "@cdktf/provider-aws.codedeployDeploymentConfig": {},
        "@cdktf/provider-aws.codedeployDeploymentGroup": {},
        "@cdktf/provider-aws.codepipeline": {},
        "@cdktf/provider-aws.codepipelineCustomActionType": {},
        "@cdktf/provider-aws.codepipelineWebhook": {},
        "@cdktf/provider-aws.codestarconnectionsConnection": {},
        "@cdktf/provider-aws.codestarconnectionsHost": {},
        "@cdktf/provider-aws.codestarnotificationsNotificationRule": {},
        "@cdktf/provider-aws.cognitoIdentityPool": {},
        "@cdktf/provider-aws.cognitoIdentityPoolProviderPrincipalTag": {},
        "@cdktf/provider-aws.cognitoIdentityPoolRolesAttachment": {},
        "@cdktf/provider-aws.cognitoIdentityProvider": {},
        "@cdktf/provider-aws.cognitoResourceServer": {},
        "@cdktf/provider-aws.cognitoRiskConfiguration": {},
        "@cdktf/provider-aws.cognitoUser": {},
        "@cdktf/provider-aws.cognitoUserGroup": {},
        "@cdktf/provider-aws.cognitoUserInGroup": {},
        "@cdktf/provider-aws.cognitoUserPool": {},
        "@cdktf/provider-aws.cognitoUserPoolClient": {},
        "@cdktf/provider-aws.cognitoUserPoolDomain": {},
        "@cdktf/provider-aws.cognitoUserPoolUiCustomization": {},
        "@cdktf/provider-aws.comprehendDocumentClassifier": {},
        "@cdktf/provider-aws.comprehendEntityRecognizer": {},
        "@cdktf/provider-aws.configAggregateAuthorization": {},
        "@cdktf/provider-aws.configConfigRule": {},
        "@cdktf/provider-aws.configConfigurationAggregator": {},
        "@cdktf/provider-aws.configConfigurationRecorder": {},
        "@cdktf/provider-aws.configConfigurationRecorderStatus": {},
        "@cdktf/provider-aws.configConformancePack": {},
        "@cdktf/provider-aws.configDeliveryChannel": {},
        "@cdktf/provider-aws.configOrganizationConformancePack": {},
        "@cdktf/provider-aws.configOrganizationCustomRule": {},
        "@cdktf/provider-aws.configOrganizationManagedRule": {},
        "@cdktf/provider-aws.configRemediationConfiguration": {},
        "@cdktf/provider-aws.connectBotAssociation": {},
        "@cdktf/provider-aws.connectContactFlow": {},
        "@cdktf/provider-aws.connectContactFlowModule": {},
        "@cdktf/provider-aws.connectHoursOfOperation": {},
        "@cdktf/provider-aws.connectInstance": {},
        "@cdktf/provider-aws.connectInstanceStorageConfig": {},
        "@cdktf/provider-aws.connectLambdaFunctionAssociation": {},
        "@cdktf/provider-aws.connectPhoneNumber": {},
        "@cdktf/provider-aws.connectQueue": {},
        "@cdktf/provider-aws.connectQuickConnect": {},
        "@cdktf/provider-aws.connectRoutingProfile": {},
        "@cdktf/provider-aws.connectSecurityProfile": {},
        "@cdktf/provider-aws.connectUser": {},
        "@cdktf/provider-aws.connectUserHierarchyGroup": {},
        "@cdktf/provider-aws.connectUserHierarchyStructure": {},
        "@cdktf/provider-aws.connectVocabulary": {},
        "@cdktf/provider-aws.curReportDefinition": {},
        "@cdktf/provider-aws.customerGateway": {},
        "@cdktf/provider-aws.dataAwsAcmCertificate": {},
        "@cdktf/provider-aws.dataAwsAcmpcaCertificate": {},
        "@cdktf/provider-aws.dataAwsAcmpcaCertificateAuthority": {},
        "@cdktf/provider-aws.dataAwsAlb": {},
        "@cdktf/provider-aws.dataAwsAlbListener": {},
        "@cdktf/provider-aws.dataAwsAlbTargetGroup": {},
        "@cdktf/provider-aws.dataAwsAmi": {},
        "@cdktf/provider-aws.dataAwsAmiIds": {},
        "@cdktf/provider-aws.dataAwsApiGatewayApiKey": {},
        "@cdktf/provider-aws.dataAwsApiGatewayDomainName": {},
        "@cdktf/provider-aws.dataAwsApiGatewayExport": {},
        "@cdktf/provider-aws.dataAwsApiGatewayResource": {},
        "@cdktf/provider-aws.dataAwsApiGatewayRestApi": {},
        "@cdktf/provider-aws.dataAwsApiGatewaySdk": {},
        "@cdktf/provider-aws.dataAwsApiGatewayVpcLink": {},
        "@cdktf/provider-aws.dataAwsApigatewayv2Api": {},
        "@cdktf/provider-aws.dataAwsApigatewayv2Apis": {},
        "@cdktf/provider-aws.dataAwsApigatewayv2Export": {},
        "@cdktf/provider-aws.dataAwsAppconfigConfigurationProfile": {},
        "@cdktf/provider-aws.dataAwsAppconfigConfigurationProfiles": {},
        "@cdktf/provider-aws.dataAwsAppconfigEnvironment": {},
        "@cdktf/provider-aws.dataAwsAppconfigEnvironments": {},
        "@cdktf/provider-aws.dataAwsAppmeshMesh": {},
        "@cdktf/provider-aws.dataAwsAppmeshVirtualService": {},
        "@cdktf/provider-aws.dataAwsArn": {},
        "@cdktf/provider-aws.dataAwsAutoscalingGroup": {},
        "@cdktf/provider-aws.dataAwsAutoscalingGroups": {},
        "@cdktf/provider-aws.dataAwsAvailabilityZone": {},
        "@cdktf/provider-aws.dataAwsAvailabilityZones": {},
        "@cdktf/provider-aws.dataAwsBackupFramework": {},
        "@cdktf/provider-aws.dataAwsBackupPlan": {},
        "@cdktf/provider-aws.dataAwsBackupReportPlan": {},
        "@cdktf/provider-aws.dataAwsBackupSelection": {},
        "@cdktf/provider-aws.dataAwsBackupVault": {},
        "@cdktf/provider-aws.dataAwsBatchComputeEnvironment": {},
        "@cdktf/provider-aws.dataAwsBatchJobQueue": {},
        "@cdktf/provider-aws.dataAwsBatchSchedulingPolicy": {},
        "@cdktf/provider-aws.dataAwsBillingServiceAccount": {},
        "@cdktf/provider-aws.dataAwsCallerIdentity": {},
        "@cdktf/provider-aws.dataAwsCanonicalUserId": {},
        "@cdktf/provider-aws.dataAwsCeCostCategory": {},
        "@cdktf/provider-aws.dataAwsCeTags": {},
        "@cdktf/provider-aws.dataAwsCloudcontrolapiResource": {},
        "@cdktf/provider-aws.dataAwsCloudformationExport": {},
        "@cdktf/provider-aws.dataAwsCloudformationStack": {},
        "@cdktf/provider-aws.dataAwsCloudformationType": {},
        "@cdktf/provider-aws.dataAwsCloudfrontCachePolicy": {},
        "@cdktf/provider-aws.dataAwsCloudfrontDistribution": {},
        "@cdktf/provider-aws.dataAwsCloudfrontFunction": {},
        "@cdktf/provider-aws.dataAwsCloudfrontLogDeliveryCanonicalUserId": {},
        "@cdktf/provider-aws.dataAwsCloudfrontOriginAccessIdentities": {},
        "@cdktf/provider-aws.dataAwsCloudfrontOriginAccessIdentity": {},
        "@cdktf/provider-aws.dataAwsCloudfrontOriginRequestPolicy": {},
        "@cdktf/provider-aws.dataAwsCloudfrontRealtimeLogConfig": {},
        "@cdktf/provider-aws.dataAwsCloudfrontResponseHeadersPolicy": {},
        "@cdktf/provider-aws.dataAwsCloudhsmV2Cluster": {},
        "@cdktf/provider-aws.dataAwsCloudtrailServiceAccount": {},
        "@cdktf/provider-aws.dataAwsCloudwatchEventBus": {},
        "@cdktf/provider-aws.dataAwsCloudwatchEventConnection": {},
        "@cdktf/provider-aws.dataAwsCloudwatchEventSource": {},
        "@cdktf/provider-aws.dataAwsCloudwatchLogGroup": {},
        "@cdktf/provider-aws.dataAwsCloudwatchLogGroups": {},
        "@cdktf/provider-aws.dataAwsCodeartifactAuthorizationToken": {},
        "@cdktf/provider-aws.dataAwsCodeartifactRepositoryEndpoint": {},
        "@cdktf/provider-aws.dataAwsCodecommitApprovalRuleTemplate": {},
        "@cdktf/provider-aws.dataAwsCodecommitRepository": {},
        "@cdktf/provider-aws.dataAwsCodestarconnectionsConnection": {},
        "@cdktf/provider-aws.dataAwsCognitoUserPoolClient": {},
        "@cdktf/provider-aws.dataAwsCognitoUserPoolClients": {},
        "@cdktf/provider-aws.dataAwsCognitoUserPoolSigningCertificate": {},
        "@cdktf/provider-aws.dataAwsCognitoUserPools": {},
        "@cdktf/provider-aws.dataAwsConnectBotAssociation": {},
        "@cdktf/provider-aws.dataAwsConnectContactFlow": {},
        "@cdktf/provider-aws.dataAwsConnectContactFlowModule": {},
        "@cdktf/provider-aws.dataAwsConnectHoursOfOperation": {},
        "@cdktf/provider-aws.dataAwsConnectInstance": {},
        "@cdktf/provider-aws.dataAwsConnectInstanceStorageConfig": {},
        "@cdktf/provider-aws.dataAwsConnectLambdaFunctionAssociation": {},
        "@cdktf/provider-aws.dataAwsConnectPrompt": {},
        "@cdktf/provider-aws.dataAwsConnectQueue": {},
        "@cdktf/provider-aws.dataAwsConnectQuickConnect": {},
        "@cdktf/provider-aws.dataAwsConnectRoutingProfile": {},
        "@cdktf/provider-aws.dataAwsConnectSecurityProfile": {},
        "@cdktf/provider-aws.dataAwsConnectUserHierarchyGroup": {},
        "@cdktf/provider-aws.dataAwsConnectUserHierarchyStructure": {},
        "@cdktf/provider-aws.dataAwsCurReportDefinition": {},
        "@cdktf/provider-aws.dataAwsCustomerGateway": {},
        "@cdktf/provider-aws.dataAwsDatapipelinePipeline": {},
        "@cdktf/provider-aws.dataAwsDatapipelinePipelineDefinition": {},
        "@cdktf/provider-aws.dataAwsDbClusterSnapshot": {},
        "@cdktf/provider-aws.dataAwsDbEventCategories": {},
        "@cdktf/provider-aws.dataAwsDbInstance": {},
        "@cdktf/provider-aws.dataAwsDbProxy": {},
        "@cdktf/provider-aws.dataAwsDbSnapshot": {},
        "@cdktf/provider-aws.dataAwsDbSubnetGroup": {},
        "@cdktf/provider-aws.dataAwsDefaultTags": {},
        "@cdktf/provider-aws.dataAwsDirectoryServiceDirectory": {},
        "@cdktf/provider-aws.dataAwsDocdbEngineVersion": {},
        "@cdktf/provider-aws.dataAwsDocdbOrderableDbInstance": {},
        "@cdktf/provider-aws.dataAwsDxConnection": {},
        "@cdktf/provider-aws.dataAwsDxGateway": {},
        "@cdktf/provider-aws.dataAwsDxLocation": {},
        "@cdktf/provider-aws.dataAwsDxLocations": {},
        "@cdktf/provider-aws.dataAwsDxRouterConfiguration": {},
        "@cdktf/provider-aws.dataAwsDynamodbTable": {},
        "@cdktf/provider-aws.dataAwsDynamodbTableItem": {},
        "@cdktf/provider-aws.dataAwsEbsDefaultKmsKey": {},
        "@cdktf/provider-aws.dataAwsEbsEncryptionByDefault": {},
        "@cdktf/provider-aws.dataAwsEbsSnapshot": {},
        "@cdktf/provider-aws.dataAwsEbsSnapshotIds": {},
        "@cdktf/provider-aws.dataAwsEbsVolume": {},
        "@cdktf/provider-aws.dataAwsEbsVolumes": {},
        "@cdktf/provider-aws.dataAwsEc2ClientVpnEndpoint": {},
        "@cdktf/provider-aws.dataAwsEc2CoipPool": {},
        "@cdktf/provider-aws.dataAwsEc2CoipPools": {},
        "@cdktf/provider-aws.dataAwsEc2Host": {},
        "@cdktf/provider-aws.dataAwsEc2InstanceType": {},
        "@cdktf/provider-aws.dataAwsEc2InstanceTypeOffering": {},
        "@cdktf/provider-aws.dataAwsEc2InstanceTypeOfferings": {},
        "@cdktf/provider-aws.dataAwsEc2InstanceTypes": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGateway": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGatewayRouteTable": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGatewayRouteTables": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGatewayVirtualInterface": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGatewayVirtualInterfaceGroup": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGatewayVirtualInterfaceGroups": {},
        "@cdktf/provider-aws.dataAwsEc2LocalGateways": {},
        "@cdktf/provider-aws.dataAwsEc2ManagedPrefixList": {},
        "@cdktf/provider-aws.dataAwsEc2ManagedPrefixLists": {},
        "@cdktf/provider-aws.dataAwsEc2NetworkInsightsAnalysis": {},
        "@cdktf/provider-aws.dataAwsEc2NetworkInsightsPath": {},
        "@cdktf/provider-aws.dataAwsEc2SerialConsoleAccess": {},
        "@cdktf/provider-aws.dataAwsEc2SpotPrice": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGateway": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayAttachment": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayConnect": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayConnectPeer": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayDxGatewayAttachment": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayMulticastDomain": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayPeeringAttachment": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayRouteTable": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayRouteTables": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayVpcAttachment": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayVpcAttachments": {},
        "@cdktf/provider-aws.dataAwsEc2TransitGatewayVpnAttachment": {},
        "@cdktf/provider-aws.dataAwsEcrAuthorizationToken": {},
        "@cdktf/provider-aws.dataAwsEcrImage": {},
        "@cdktf/provider-aws.dataAwsEcrRepository": {},
        "@cdktf/provider-aws.dataAwsEcrpublicAuthorizationToken": {},
        "@cdktf/provider-aws.dataAwsEcsCluster": {},
        "@cdktf/provider-aws.dataAwsEcsContainerDefinition": {},
        "@cdktf/provider-aws.dataAwsEcsService": {},
        "@cdktf/provider-aws.dataAwsEcsTaskDefinition": {},
        "@cdktf/provider-aws.dataAwsEfsAccessPoint": {},
        "@cdktf/provider-aws.dataAwsEfsAccessPoints": {},
        "@cdktf/provider-aws.dataAwsEfsFileSystem": {},
        "@cdktf/provider-aws.dataAwsEfsMountTarget": {},
        "@cdktf/provider-aws.dataAwsEip": {},
        "@cdktf/provider-aws.dataAwsEips": {},
        "@cdktf/provider-aws.dataAwsEksAddon": {},
        "@cdktf/provider-aws.dataAwsEksAddonVersion": {},
        "@cdktf/provider-aws.dataAwsEksCluster": {},
        "@cdktf/provider-aws.dataAwsEksClusterAuth": {},
        "@cdktf/provider-aws.dataAwsEksClusters": {},
        "@cdktf/provider-aws.dataAwsEksNodeGroup": {},
        "@cdktf/provider-aws.dataAwsEksNodeGroups": {},
        "@cdktf/provider-aws.dataAwsElasticBeanstalkApplication": {},
        "@cdktf/provider-aws.dataAwsElasticBeanstalkHostedZone": {},
        "@cdktf/provider-aws.dataAwsElasticBeanstalkSolutionStack": {},
        "@cdktf/provider-aws.dataAwsElasticacheCluster": {},
        "@cdktf/provider-aws.dataAwsElasticacheReplicationGroup": {},
        "@cdktf/provider-aws.dataAwsElasticacheSubnetGroup": {},
        "@cdktf/provider-aws.dataAwsElasticacheUser": {},
        "@cdktf/provider-aws.dataAwsElasticsearchDomain": {},
        "@cdktf/provider-aws.dataAwsElb": {},
        "@cdktf/provider-aws.dataAwsElbHostedZoneId": {},
        "@cdktf/provider-aws.dataAwsElbServiceAccount": {},
        "@cdktf/provider-aws.dataAwsEmrReleaseLabels": {},
        "@cdktf/provider-aws.dataAwsEmrcontainersVirtualCluster": {},
        "@cdktf/provider-aws.dataAwsFsxOpenzfsSnapshot": {},
        "@cdktf/provider-aws.dataAwsGlobalacceleratorAccelerator": {},
        "@cdktf/provider-aws.dataAwsGlueConnection": {},
        "@cdktf/provider-aws.dataAwsGlueDataCatalogEncryptionSettings": {},
        "@cdktf/provider-aws.dataAwsGlueScript": {},
        "@cdktf/provider-aws.dataAwsGrafanaWorkspace": {},
        "@cdktf/provider-aws.dataAwsGuarddutyDetector": {},
        "@cdktf/provider-aws.dataAwsIamAccountAlias": {},
        "@cdktf/provider-aws.dataAwsIamGroup": {},
        "@cdktf/provider-aws.dataAwsIamInstanceProfile": {},
        "@cdktf/provider-aws.dataAwsIamInstanceProfiles": {},
        "@cdktf/provider-aws.dataAwsIamOpenidConnectProvider": {},
        "@cdktf/provider-aws.dataAwsIamPolicy": {},
        "@cdktf/provider-aws.dataAwsIamPolicyDocument": {},
        "@cdktf/provider-aws.dataAwsIamRole": {},
        "@cdktf/provider-aws.dataAwsIamRoles": {},
        "@cdktf/provider-aws.dataAwsIamSamlProvider": {},
        "@cdktf/provider-aws.dataAwsIamServerCertificate": {},
        "@cdktf/provider-aws.dataAwsIamSessionContext": {},
        "@cdktf/provider-aws.dataAwsIamUser": {},
        "@cdktf/provider-aws.dataAwsIamUserSshKey": {},
        "@cdktf/provider-aws.dataAwsIamUsers": {},
        "@cdktf/provider-aws.dataAwsIdentitystoreGroup": {},
        "@cdktf/provider-aws.dataAwsIdentitystoreUser": {},
        "@cdktf/provider-aws.dataAwsImagebuilderComponent": {},
        "@cdktf/provider-aws.dataAwsImagebuilderComponents": {},
        "@cdktf/provider-aws.dataAwsImagebuilderContainerRecipe": {},
        "@cdktf/provider-aws.dataAwsImagebuilderContainerRecipes": {},
        "@cdktf/provider-aws.dataAwsImagebuilderDistributionConfiguration": {},
        "@cdktf/provider-aws.dataAwsImagebuilderDistributionConfigurations": {},
        "@cdktf/provider-aws.dataAwsImagebuilderImage": {},
        "@cdktf/provider-aws.dataAwsImagebuilderImagePipeline": {},
        "@cdktf/provider-aws.dataAwsImagebuilderImagePipelines": {},
        "@cdktf/provider-aws.dataAwsImagebuilderImageRecipe": {},
        "@cdktf/provider-aws.dataAwsImagebuilderImageRecipes": {},
        "@cdktf/provider-aws.dataAwsImagebuilderInfrastructureConfiguration": {},
        "@cdktf/provider-aws.dataAwsImagebuilderInfrastructureConfigurations": {},
        "@cdktf/provider-aws.dataAwsInspectorRulesPackages": {},
        "@cdktf/provider-aws.dataAwsInstance": {},
        "@cdktf/provider-aws.dataAwsInstances": {},
        "@cdktf/provider-aws.dataAwsInternetGateway": {},
        "@cdktf/provider-aws.dataAwsIotEndpoint": {},
        "@cdktf/provider-aws.dataAwsIpRanges": {},
        "@cdktf/provider-aws.dataAwsKendraExperience": {},
        "@cdktf/provider-aws.dataAwsKendraFaq": {},
        "@cdktf/provider-aws.dataAwsKendraIndex": {},
        "@cdktf/provider-aws.dataAwsKendraQuerySuggestionsBlockList": {},
        "@cdktf/provider-aws.dataAwsKendraThesaurus": {},
        "@cdktf/provider-aws.dataAwsKeyPair": {},
        "@cdktf/provider-aws.dataAwsKinesisFirehoseDeliveryStream": {},
        "@cdktf/provider-aws.dataAwsKinesisStream": {},
        "@cdktf/provider-aws.dataAwsKinesisStreamConsumer": {},
        "@cdktf/provider-aws.dataAwsKmsAlias": {},
        "@cdktf/provider-aws.dataAwsKmsCiphertext": {},
        "@cdktf/provider-aws.dataAwsKmsCustomKeyStore": {},
        "@cdktf/provider-aws.dataAwsKmsKey": {},
        "@cdktf/provider-aws.dataAwsKmsPublicKey": {},
        "@cdktf/provider-aws.dataAwsKmsSecret": {},
        "@cdktf/provider-aws.dataAwsKmsSecrets": {},
        "@cdktf/provider-aws.dataAwsLakeformationDataLakeSettings": {},
        "@cdktf/provider-aws.dataAwsLakeformationPermissions": {},
        "@cdktf/provider-aws.dataAwsLakeformationResource": {},
        "@cdktf/provider-aws.dataAwsLambdaAlias": {},
        "@cdktf/provider-aws.dataAwsLambdaCodeSigningConfig": {},
        "@cdktf/provider-aws.dataAwsLambdaFunction": {},
        "@cdktf/provider-aws.dataAwsLambdaFunctionUrl": {},
        "@cdktf/provider-aws.dataAwsLambdaInvocation": {},
        "@cdktf/provider-aws.dataAwsLambdaLayerVersion": {},
        "@cdktf/provider-aws.dataAwsLaunchConfiguration": {},
        "@cdktf/provider-aws.dataAwsLaunchTemplate": {},
        "@cdktf/provider-aws.dataAwsLb": {},
        "@cdktf/provider-aws.dataAwsLbHostedZoneId": {},
        "@cdktf/provider-aws.dataAwsLbListener": {},
        "@cdktf/provider-aws.dataAwsLbTargetGroup": {},
        "@cdktf/provider-aws.dataAwsLexBot": {},
        "@cdktf/provider-aws.dataAwsLexBotAlias": {},
        "@cdktf/provider-aws.dataAwsLexIntent": {},
        "@cdktf/provider-aws.dataAwsLexSlotType": {},
        "@cdktf/provider-aws.dataAwsLocationGeofenceCollection": {},
        "@cdktf/provider-aws.dataAwsLocationMap": {},
        "@cdktf/provider-aws.dataAwsLocationPlaceIndex": {},
        "@cdktf/provider-aws.dataAwsLocationRouteCalculator": {},
        "@cdktf/provider-aws.dataAwsLocationTracker": {},
        "@cdktf/provider-aws.dataAwsLocationTrackerAssociation": {},
        "@cdktf/provider-aws.dataAwsLocationTrackerAssociations": {},
        "@cdktf/provider-aws.dataAwsMemorydbAcl": {},
        "@cdktf/provider-aws.dataAwsMemorydbCluster": {},
        "@cdktf/provider-aws.dataAwsMemorydbParameterGroup": {},
        "@cdktf/provider-aws.dataAwsMemorydbSnapshot": {},
        "@cdktf/provider-aws.dataAwsMemorydbSubnetGroup": {},
        "@cdktf/provider-aws.dataAwsMemorydbUser": {},
        "@cdktf/provider-aws.dataAwsMqBroker": {},
        "@cdktf/provider-aws.dataAwsMqBrokerInstanceTypeOfferings": {},
        "@cdktf/provider-aws.dataAwsMskBrokerNodes": {},
        "@cdktf/provider-aws.dataAwsMskCluster": {},
        "@cdktf/provider-aws.dataAwsMskConfiguration": {},
        "@cdktf/provider-aws.dataAwsMskKafkaVersion": {},
        "@cdktf/provider-aws.dataAwsMskconnectConnector": {},
        "@cdktf/provider-aws.dataAwsMskconnectCustomPlugin": {},
        "@cdktf/provider-aws.dataAwsMskconnectWorkerConfiguration": {},
        "@cdktf/provider-aws.dataAwsNatGateway": {},
        "@cdktf/provider-aws.dataAwsNatGateways": {},
        "@cdktf/provider-aws.dataAwsNeptuneEngineVersion": {},
        "@cdktf/provider-aws.dataAwsNeptuneOrderableDbInstance": {},
        "@cdktf/provider-aws.dataAwsNetworkAcls": {},
        "@cdktf/provider-aws.dataAwsNetworkInterface": {},
        "@cdktf/provider-aws.dataAwsNetworkInterfaces": {},
        "@cdktf/provider-aws.dataAwsNetworkfirewallFirewall": {},
        "@cdktf/provider-aws.dataAwsNetworkfirewallFirewallPolicy": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerConnection": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerConnections": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerCoreNetworkPolicyDocument": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerDevice": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerDevices": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerGlobalNetwork": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerGlobalNetworks": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerLink": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerLinks": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerSite": {},
        "@cdktf/provider-aws.dataAwsNetworkmanagerSites": {},
        "@cdktf/provider-aws.dataAwsOpensearchDomain": {},
        "@cdktf/provider-aws.dataAwsOrganizationsDelegatedAdministrators": {},
        "@cdktf/provider-aws.dataAwsOrganizationsDelegatedServices": {},
        "@cdktf/provider-aws.dataAwsOrganizationsOrganization": {},
        "@cdktf/provider-aws.dataAwsOrganizationsOrganizationalUnits": {},
        "@cdktf/provider-aws.dataAwsOrganizationsResourceTags": {},
        "@cdktf/provider-aws.dataAwsOutpostsAsset": {},
        "@cdktf/provider-aws.dataAwsOutpostsAssets": {},
        "@cdktf/provider-aws.dataAwsOutpostsOutpost": {},
        "@cdktf/provider-aws.dataAwsOutpostsOutpostInstanceType": {},
        "@cdktf/provider-aws.dataAwsOutpostsOutpostInstanceTypes": {},
        "@cdktf/provider-aws.dataAwsOutpostsOutposts": {},
        "@cdktf/provider-aws.dataAwsOutpostsSite": {},
        "@cdktf/provider-aws.dataAwsOutpostsSites": {},
        "@cdktf/provider-aws.dataAwsPartition": {},
        "@cdktf/provider-aws.dataAwsPrefixList": {},
        "@cdktf/provider-aws.dataAwsPricingProduct": {},
        "@cdktf/provider-aws.dataAwsPrometheusWorkspace": {},
        "@cdktf/provider-aws.dataAwsQldbLedger": {},
        "@cdktf/provider-aws.dataAwsRamResourceShare": {},
        "@cdktf/provider-aws.dataAwsRdsCertificate": {},
        "@cdktf/provider-aws.dataAwsRdsCluster": {},
        "@cdktf/provider-aws.dataAwsRdsEngineVersion": {},
        "@cdktf/provider-aws.dataAwsRdsOrderableDbInstance": {},
        "@cdktf/provider-aws.dataAwsRdsReservedInstanceOffering": {},
        "@cdktf/provider-aws.dataAwsRedshiftCluster": {},
        "@cdktf/provider-aws.dataAwsRedshiftClusterCredentials": {},
        "@cdktf/provider-aws.dataAwsRedshiftOrderableCluster": {},
        "@cdktf/provider-aws.dataAwsRedshiftServiceAccount": {},
        "@cdktf/provider-aws.dataAwsRedshiftSubnetGroup": {},
        "@cdktf/provider-aws.dataAwsRegion": {},
        "@cdktf/provider-aws.dataAwsRegions": {},
        "@cdktf/provider-aws.dataAwsResourcegroupstaggingapiResources": {},
        "@cdktf/provider-aws.dataAwsRoute": {},
        "@cdktf/provider-aws.dataAwsRoute53DelegationSet": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverEndpoint": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverFirewallConfig": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverFirewallDomainList": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverFirewallRuleGroup": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverFirewallRuleGroupAssociation": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverFirewallRules": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverRule": {},
        "@cdktf/provider-aws.dataAwsRoute53ResolverRules": {},
        "@cdktf/provider-aws.dataAwsRoute53TrafficPolicyDocument": {},
        "@cdktf/provider-aws.dataAwsRoute53Zone": {},
        "@cdktf/provider-aws.dataAwsRouteTable": {},
        "@cdktf/provider-aws.dataAwsRouteTables": {},
        "@cdktf/provider-aws.dataAwsS3AccountPublicAccessBlock": {},
        "@cdktf/provider-aws.dataAwsS3Bucket": {},
        "@cdktf/provider-aws.dataAwsS3BucketObject": {},
        "@cdktf/provider-aws.dataAwsS3BucketObjects": {},
        "@cdktf/provider-aws.dataAwsS3BucketPolicy": {},
        "@cdktf/provider-aws.dataAwsS3Object": {},
        "@cdktf/provider-aws.dataAwsS3Objects": {},
        "@cdktf/provider-aws.dataAwsSagemakerPrebuiltEcrImage": {},
        "@cdktf/provider-aws.dataAwsSecretsmanagerRandomPassword": {},
        "@cdktf/provider-aws.dataAwsSecretsmanagerSecret": {},
        "@cdktf/provider-aws.dataAwsSecretsmanagerSecretRotation": {},
        "@cdktf/provider-aws.dataAwsSecretsmanagerSecretVersion": {},
        "@cdktf/provider-aws.dataAwsSecretsmanagerSecrets": {},
        "@cdktf/provider-aws.dataAwsSecurityGroup": {},
        "@cdktf/provider-aws.dataAwsSecurityGroups": {},
        "@cdktf/provider-aws.dataAwsServerlessapplicationrepositoryApplication": {},
        "@cdktf/provider-aws.dataAwsService": {},
        "@cdktf/provider-aws.dataAwsServiceDiscoveryDnsNamespace": {},
        "@cdktf/provider-aws.dataAwsServiceDiscoveryHttpNamespace": {},
        "@cdktf/provider-aws.dataAwsServiceDiscoveryService": {},
        "@cdktf/provider-aws.dataAwsServicecatalogConstraint": {},
        "@cdktf/provider-aws.dataAwsServicecatalogLaunchPaths": {},
        "@cdktf/provider-aws.dataAwsServicecatalogPortfolio": {},
        "@cdktf/provider-aws.dataAwsServicecatalogPortfolioConstraints": {},
        "@cdktf/provider-aws.dataAwsServicecatalogProduct": {},
        "@cdktf/provider-aws.dataAwsServicequotasService": {},
        "@cdktf/provider-aws.dataAwsServicequotasServiceQuota": {},
        "@cdktf/provider-aws.dataAwsSesActiveReceiptRuleSet": {},
        "@cdktf/provider-aws.dataAwsSesDomainIdentity": {},
        "@cdktf/provider-aws.dataAwsSesEmailIdentity": {},
        "@cdktf/provider-aws.dataAwsSesv2DedicatedIpPool": {},
        "@cdktf/provider-aws.dataAwsSfnActivity": {},
        "@cdktf/provider-aws.dataAwsSfnStateMachine": {},
        "@cdktf/provider-aws.dataAwsSignerSigningJob": {},
        "@cdktf/provider-aws.dataAwsSignerSigningProfile": {},
        "@cdktf/provider-aws.dataAwsSnsTopic": {},
        "@cdktf/provider-aws.dataAwsSqsQueue": {},
        "@cdktf/provider-aws.dataAwsSsmDocument": {},
        "@cdktf/provider-aws.dataAwsSsmInstances": {},
        "@cdktf/provider-aws.dataAwsSsmMaintenanceWindows": {},
        "@cdktf/provider-aws.dataAwsSsmParameter": {},
        "@cdktf/provider-aws.dataAwsSsmParametersByPath": {},
        "@cdktf/provider-aws.dataAwsSsmPatchBaseline": {},
        "@cdktf/provider-aws.dataAwsSsoadminInstances": {},
        "@cdktf/provider-aws.dataAwsSsoadminPermissionSet": {},
        "@cdktf/provider-aws.dataAwsStoragegatewayLocalDisk": {},
        "@cdktf/provider-aws.dataAwsSubnet": {},
        "@cdktf/provider-aws.dataAwsSubnetIds": {},
        "@cdktf/provider-aws.dataAwsSubnets": {},
        "@cdktf/provider-aws.dataAwsTransferServer": {},
        "@cdktf/provider-aws.dataAwsVpc": {},
        "@cdktf/provider-aws.dataAwsVpcDhcpOptions": {},
        "@cdktf/provider-aws.dataAwsVpcEndpoint": {},
        "@cdktf/provider-aws.dataAwsVpcEndpointService": {},
        "@cdktf/provider-aws.dataAwsVpcIpamPool": {},
        "@cdktf/provider-aws.dataAwsVpcIpamPoolCidrs": {},
        "@cdktf/provider-aws.dataAwsVpcIpamPools": {},
        "@cdktf/provider-aws.dataAwsVpcIpamPreviewNextCidr": {},
        "@cdktf/provider-aws.dataAwsVpcPeeringConnection": {},
        "@cdktf/provider-aws.dataAwsVpcPeeringConnections": {},
        "@cdktf/provider-aws.dataAwsVpcs": {},
        "@cdktf/provider-aws.dataAwsVpnGateway": {},
        "@cdktf/provider-aws.dataAwsWafIpset": {},
        "@cdktf/provider-aws.dataAwsWafRateBasedRule": {},
        "@cdktf/provider-aws.dataAwsWafRule": {},
        "@cdktf/provider-aws.dataAwsWafSubscribedRuleGroup": {},
        "@cdktf/provider-aws.dataAwsWafWebAcl": {},
        "@cdktf/provider-aws.dataAwsWafregionalIpset": {},
        "@cdktf/provider-aws.dataAwsWafregionalRateBasedRule": {},
        "@cdktf/provider-aws.dataAwsWafregionalRule": {},
        "@cdktf/provider-aws.dataAwsWafregionalSubscribedRuleGroup": {},
        "@cdktf/provider-aws.dataAwsWafregionalWebAcl": {},
        "@cdktf/provider-aws.dataAwsWafv2IpSet": {},
        "@cdktf/provider-aws.dataAwsWafv2RegexPatternSet": {},
        "@cdktf/provider-aws.dataAwsWafv2RuleGroup": {},
        "@cdktf/provider-aws.dataAwsWafv2WebAcl": {},
        "@cdktf/provider-aws.dataAwsWorkspacesBundle": {},
        "@cdktf/provider-aws.dataAwsWorkspacesDirectory": {},
        "@cdktf/provider-aws.dataAwsWorkspacesImage": {},
        "@cdktf/provider-aws.dataAwsWorkspacesWorkspace": {},
        "@cdktf/provider-aws.dataexchangeDataSet": {},
        "@cdktf/provider-aws.dataexchangeRevision": {},
        "@cdktf/provider-aws.datapipelinePipeline": {},
        "@cdktf/provider-aws.datapipelinePipelineDefinition": {},
        "@cdktf/provider-aws.datasyncAgent": {},
        "@cdktf/provider-aws.datasyncLocationEfs": {},
        "@cdktf/provider-aws.datasyncLocationFsxLustreFileSystem": {},
        "@cdktf/provider-aws.datasyncLocationFsxOpenzfsFileSystem": {},
        "@cdktf/provider-aws.datasyncLocationFsxWindowsFileSystem": {},
        "@cdktf/provider-aws.datasyncLocationHdfs": {},
        "@cdktf/provider-aws.datasyncLocationNfs": {},
        "@cdktf/provider-aws.datasyncLocationS3": {},
        "@cdktf/provider-aws.datasyncLocationSmb": {},
        "@cdktf/provider-aws.datasyncTask": {},
        "@cdktf/provider-aws.daxCluster": {},
        "@cdktf/provider-aws.daxParameterGroup": {},
        "@cdktf/provider-aws.daxSubnetGroup": {},
        "@cdktf/provider-aws.dbClusterSnapshot": {},
        "@cdktf/provider-aws.dbEventSubscription": {},
        "@cdktf/provider-aws.dbInstance": {},
        "@cdktf/provider-aws.dbInstanceAutomatedBackupsReplication": {},
        "@cdktf/provider-aws.dbInstanceRoleAssociation": {},
        "@cdktf/provider-aws.dbOptionGroup": {},
        "@cdktf/provider-aws.dbParameterGroup": {},
        "@cdktf/provider-aws.dbProxy": {},
        "@cdktf/provider-aws.dbProxyDefaultTargetGroup": {},
        "@cdktf/provider-aws.dbProxyEndpoint": {},
        "@cdktf/provider-aws.dbProxyTarget": {},
        "@cdktf/provider-aws.dbSecurityGroup": {},
        "@cdktf/provider-aws.dbSnapshot": {},
        "@cdktf/provider-aws.dbSnapshotCopy": {},
        "@cdktf/provider-aws.dbSubnetGroup": {},
        "@cdktf/provider-aws.defaultNetworkAcl": {},
        "@cdktf/provider-aws.defaultRouteTable": {},
        "@cdktf/provider-aws.defaultSecurityGroup": {},
        "@cdktf/provider-aws.defaultSubnet": {},
        "@cdktf/provider-aws.defaultVpc": {},
        "@cdktf/provider-aws.defaultVpcDhcpOptions": {},
        "@cdktf/provider-aws.detectiveGraph": {},
        "@cdktf/provider-aws.detectiveInvitationAccepter": {},
        "@cdktf/provider-aws.detectiveMember": {},
        "@cdktf/provider-aws.devicefarmDevicePool": {},
        "@cdktf/provider-aws.devicefarmInstanceProfile": {},
        "@cdktf/provider-aws.devicefarmNetworkProfile": {},
        "@cdktf/provider-aws.devicefarmProject": {},
        "@cdktf/provider-aws.devicefarmTestGridProject": {},
        "@cdktf/provider-aws.devicefarmUpload": {},
        "@cdktf/provider-aws.directoryServiceConditionalForwarder": {},
        "@cdktf/provider-aws.directoryServiceDirectory": {},
        "@cdktf/provider-aws.directoryServiceLogSubscription": {},
        "@cdktf/provider-aws.directoryServiceRadiusSettings": {},
        "@cdktf/provider-aws.directoryServiceRegion": {},
        "@cdktf/provider-aws.directoryServiceSharedDirectory": {},
        "@cdktf/provider-aws.directoryServiceSharedDirectoryAccepter": {},
        "@cdktf/provider-aws.dlmLifecyclePolicy": {},
        "@cdktf/provider-aws.dmsCertificate": {},
        "@cdktf/provider-aws.dmsEndpoint": {},
        "@cdktf/provider-aws.dmsEventSubscription": {},
        "@cdktf/provider-aws.dmsReplicationInstance": {},
        "@cdktf/provider-aws.dmsReplicationSubnetGroup": {},
        "@cdktf/provider-aws.dmsReplicationTask": {},
        "@cdktf/provider-aws.docdbCluster": {},
        "@cdktf/provider-aws.docdbClusterInstance": {},
        "@cdktf/provider-aws.docdbClusterParameterGroup": {},
        "@cdktf/provider-aws.docdbClusterSnapshot": {},
        "@cdktf/provider-aws.docdbEventSubscription": {},
        "@cdktf/provider-aws.docdbGlobalCluster": {},
        "@cdktf/provider-aws.docdbSubnetGroup": {},
        "@cdktf/provider-aws.dxBgpPeer": {},
        "@cdktf/provider-aws.dxConnection": {},
        "@cdktf/provider-aws.dxConnectionAssociation": {},
        "@cdktf/provider-aws.dxConnectionConfirmation": {},
        "@cdktf/provider-aws.dxGateway": {},
        "@cdktf/provider-aws.dxGatewayAssociation": {},
        "@cdktf/provider-aws.dxGatewayAssociationProposal": {},
        "@cdktf/provider-aws.dxHostedConnection": {},
        "@cdktf/provider-aws.dxHostedPrivateVirtualInterface": {},
        "@cdktf/provider-aws.dxHostedPrivateVirtualInterfaceAccepter": {},
        "@cdktf/provider-aws.dxHostedPublicVirtualInterface": {},
        "@cdktf/provider-aws.dxHostedPublicVirtualInterfaceAccepter": {},
        "@cdktf/provider-aws.dxHostedTransitVirtualInterface": {},
        "@cdktf/provider-aws.dxHostedTransitVirtualInterfaceAccepter": {},
        "@cdktf/provider-aws.dxLag": {},
        "@cdktf/provider-aws.dxPrivateVirtualInterface": {},
        "@cdktf/provider-aws.dxPublicVirtualInterface": {},
        "@cdktf/provider-aws.dxTransitVirtualInterface": {},
        "@cdktf/provider-aws.dynamodbContributorInsights": {},
        "@cdktf/provider-aws.dynamodbGlobalTable": {},
        "@cdktf/provider-aws.dynamodbKinesisStreamingDestination": {},
        "@cdktf/provider-aws.dynamodbTable": {},
        "@cdktf/provider-aws.dynamodbTableItem": {},
        "@cdktf/provider-aws.dynamodbTableReplica": {},
        "@cdktf/provider-aws.dynamodbTag": {},
        "@cdktf/provider-aws.ebsDefaultKmsKey": {},
        "@cdktf/provider-aws.ebsEncryptionByDefault": {},
        "@cdktf/provider-aws.ebsSnapshot": {},
        "@cdktf/provider-aws.ebsSnapshotCopy": {},
        "@cdktf/provider-aws.ebsSnapshotImport": {},
        "@cdktf/provider-aws.ebsVolume": {},
        "@cdktf/provider-aws.ec2AvailabilityZoneGroup": {},
        "@cdktf/provider-aws.ec2CapacityReservation": {},
        "@cdktf/provider-aws.ec2CarrierGateway": {},
        "@cdktf/provider-aws.ec2ClientVpnAuthorizationRule": {},
        "@cdktf/provider-aws.ec2ClientVpnEndpoint": {},
        "@cdktf/provider-aws.ec2ClientVpnNetworkAssociation": {},
        "@cdktf/provider-aws.ec2ClientVpnRoute": {},
        "@cdktf/provider-aws.ec2Fleet": {},
        "@cdktf/provider-aws.ec2Host": {},
        "@cdktf/provider-aws.ec2LocalGatewayRoute": {},
        "@cdktf/provider-aws.ec2LocalGatewayRouteTableVpcAssociation": {},
        "@cdktf/provider-aws.ec2ManagedPrefixList": {},
        "@cdktf/provider-aws.ec2ManagedPrefixListEntry": {},
        "@cdktf/provider-aws.ec2NetworkInsightsAnalysis": {},
        "@cdktf/provider-aws.ec2NetworkInsightsPath": {},
        "@cdktf/provider-aws.ec2SerialConsoleAccess": {},
        "@cdktf/provider-aws.ec2SubnetCidrReservation": {},
        "@cdktf/provider-aws.ec2Tag": {},
        "@cdktf/provider-aws.ec2TrafficMirrorFilter": {},
        "@cdktf/provider-aws.ec2TrafficMirrorFilterRule": {},
        "@cdktf/provider-aws.ec2TrafficMirrorSession": {},
        "@cdktf/provider-aws.ec2TrafficMirrorTarget": {},
        "@cdktf/provider-aws.ec2TransitGateway": {},
        "@cdktf/provider-aws.ec2TransitGatewayConnect": {},
        "@cdktf/provider-aws.ec2TransitGatewayConnectPeer": {},
        "@cdktf/provider-aws.ec2TransitGatewayMulticastDomain": {},
        "@cdktf/provider-aws.ec2TransitGatewayMulticastDomainAssociation": {},
        "@cdktf/provider-aws.ec2TransitGatewayMulticastGroupMember": {},
        "@cdktf/provider-aws.ec2TransitGatewayMulticastGroupSource": {},
        "@cdktf/provider-aws.ec2TransitGatewayPeeringAttachment": {},
        "@cdktf/provider-aws.ec2TransitGatewayPeeringAttachmentAccepter": {},
        "@cdktf/provider-aws.ec2TransitGatewayPolicyTable": {},
        "@cdktf/provider-aws.ec2TransitGatewayPolicyTableAssociation": {},
        "@cdktf/provider-aws.ec2TransitGatewayPrefixListReference": {},
        "@cdktf/provider-aws.ec2TransitGatewayRoute": {},
        "@cdktf/provider-aws.ec2TransitGatewayRouteTable": {},
        "@cdktf/provider-aws.ec2TransitGatewayRouteTableAssociation": {},
        "@cdktf/provider-aws.ec2TransitGatewayRouteTablePropagation": {},
        "@cdktf/provider-aws.ec2TransitGatewayVpcAttachment": {},
        "@cdktf/provider-aws.ec2TransitGatewayVpcAttachmentAccepter": {},
        "@cdktf/provider-aws.ecrLifecyclePolicy": {},
        "@cdktf/provider-aws.ecrPullThroughCacheRule": {},
        "@cdktf/provider-aws.ecrRegistryPolicy": {},
        "@cdktf/provider-aws.ecrRegistryScanningConfiguration": {},
        "@cdktf/provider-aws.ecrReplicationConfiguration": {},
        "@cdktf/provider-aws.ecrRepository": {},
        "@cdktf/provider-aws.ecrRepositoryPolicy": {},
        "@cdktf/provider-aws.ecrpublicRepository": {},
        "@cdktf/provider-aws.ecrpublicRepositoryPolicy": {},
        "@cdktf/provider-aws.ecsAccountSettingDefault": {},
        "@cdktf/provider-aws.ecsCapacityProvider": {},
        "@cdktf/provider-aws.ecsCluster": {},
        "@cdktf/provider-aws.ecsClusterCapacityProviders": {},
        "@cdktf/provider-aws.ecsService": {},
        "@cdktf/provider-aws.ecsTag": {},
        "@cdktf/provider-aws.ecsTaskDefinition": {},
        "@cdktf/provider-aws.ecsTaskSet": {},
        "@cdktf/provider-aws.efsAccessPoint": {},
        "@cdktf/provider-aws.efsBackupPolicy": {},
        "@cdktf/provider-aws.efsFileSystem": {},
        "@cdktf/provider-aws.efsFileSystemPolicy": {},
        "@cdktf/provider-aws.efsMountTarget": {},
        "@cdktf/provider-aws.efsReplicationConfiguration": {},
        "@cdktf/provider-aws.egressOnlyInternetGateway": {},
        "@cdktf/provider-aws.eip": {},
        "@cdktf/provider-aws.eipAssociation": {},
        "@cdktf/provider-aws.eksAddon": {},
        "@cdktf/provider-aws.eksCluster": {},
        "@cdktf/provider-aws.eksFargateProfile": {},
        "@cdktf/provider-aws.eksIdentityProviderConfig": {},
        "@cdktf/provider-aws.eksNodeGroup": {},
        "@cdktf/provider-aws.elasticBeanstalkApplication": {},
        "@cdktf/provider-aws.elasticBeanstalkApplicationVersion": {},
        "@cdktf/provider-aws.elasticBeanstalkConfigurationTemplate": {},
        "@cdktf/provider-aws.elasticBeanstalkEnvironment": {},
        "@cdktf/provider-aws.elasticacheCluster": {},
        "@cdktf/provider-aws.elasticacheGlobalReplicationGroup": {},
        "@cdktf/provider-aws.elasticacheParameterGroup": {},
        "@cdktf/provider-aws.elasticacheReplicationGroup": {},
        "@cdktf/provider-aws.elasticacheSecurityGroup": {},
        "@cdktf/provider-aws.elasticacheSubnetGroup": {},
        "@cdktf/provider-aws.elasticacheUser": {},
        "@cdktf/provider-aws.elasticacheUserGroup": {},
        "@cdktf/provider-aws.elasticacheUserGroupAssociation": {},
        "@cdktf/provider-aws.elasticsearchDomain": {},
        "@cdktf/provider-aws.elasticsearchDomainPolicy": {},
        "@cdktf/provider-aws.elasticsearchDomainSamlOptions": {},
        "@cdktf/provider-aws.elastictranscoderPipeline": {},
        "@cdktf/provider-aws.elastictranscoderPreset": {},
        "@cdktf/provider-aws.elb": {},
        "@cdktf/provider-aws.elbAttachment": {},
        "@cdktf/provider-aws.emrCluster": {},
        "@cdktf/provider-aws.emrInstanceFleet": {},
        "@cdktf/provider-aws.emrInstanceGroup": {},
        "@cdktf/provider-aws.emrManagedScalingPolicy": {},
        "@cdktf/provider-aws.emrSecurityConfiguration": {},
        "@cdktf/provider-aws.emrStudio": {},
        "@cdktf/provider-aws.emrStudioSessionMapping": {},
        "@cdktf/provider-aws.emrcontainersVirtualCluster": {},
        "@cdktf/provider-aws.emrserverlessApplication": {},
        "@cdktf/provider-aws.evidentlyProject": {},
        "@cdktf/provider-aws.evidentlySegment": {},
        "@cdktf/provider-aws.fisExperimentTemplate": {},
        "@cdktf/provider-aws.flowLog": {},
        "@cdktf/provider-aws.fmsAdminAccount": {},
        "@cdktf/provider-aws.fmsPolicy": {},
        "@cdktf/provider-aws.fsxBackup": {},
        "@cdktf/provider-aws.fsxDataRepositoryAssociation": {},
        "@cdktf/provider-aws.fsxFileCache": {},
        "@cdktf/provider-aws.fsxLustreFileSystem": {},
        "@cdktf/provider-aws.fsxOntapFileSystem": {},
        "@cdktf/provider-aws.fsxOntapStorageVirtualMachine": {},
        "@cdktf/provider-aws.fsxOntapVolume": {},
        "@cdktf/provider-aws.fsxOpenzfsFileSystem": {},
        "@cdktf/provider-aws.fsxOpenzfsSnapshot": {},
        "@cdktf/provider-aws.fsxOpenzfsVolume": {},
        "@cdktf/provider-aws.fsxWindowsFileSystem": {},
        "@cdktf/provider-aws.gameliftAlias": {},
        "@cdktf/provider-aws.gameliftBuild": {},
        "@cdktf/provider-aws.gameliftFleet": {},
        "@cdktf/provider-aws.gameliftGameServerGroup": {},
        "@cdktf/provider-aws.gameliftGameSessionQueue": {},
        "@cdktf/provider-aws.gameliftScript": {},
        "@cdktf/provider-aws.glacierVault": {},
        "@cdktf/provider-aws.glacierVaultLock": {},
        "@cdktf/provider-aws.globalacceleratorAccelerator": {},
        "@cdktf/provider-aws.globalacceleratorEndpointGroup": {},
        "@cdktf/provider-aws.globalacceleratorListener": {},
        "@cdktf/provider-aws.glueCatalogDatabase": {},
        "@cdktf/provider-aws.glueCatalogTable": {},
        "@cdktf/provider-aws.glueClassifier": {},
        "@cdktf/provider-aws.glueConnection": {},
        "@cdktf/provider-aws.glueCrawler": {},
        "@cdktf/provider-aws.glueDataCatalogEncryptionSettings": {},
        "@cdktf/provider-aws.glueDevEndpoint": {},
        "@cdktf/provider-aws.glueJob": {},
        "@cdktf/provider-aws.glueMlTransform": {},
        "@cdktf/provider-aws.gluePartition": {},
        "@cdktf/provider-aws.gluePartitionIndex": {},
        "@cdktf/provider-aws.glueRegistry": {},
        "@cdktf/provider-aws.glueResourcePolicy": {},
        "@cdktf/provider-aws.glueSchema": {},
        "@cdktf/provider-aws.glueSecurityConfiguration": {},
        "@cdktf/provider-aws.glueTrigger": {},
        "@cdktf/provider-aws.glueUserDefinedFunction": {},
        "@cdktf/provider-aws.glueWorkflow": {},
        "@cdktf/provider-aws.grafanaLicenseAssociation": {},
        "@cdktf/provider-aws.grafanaRoleAssociation": {},
        "@cdktf/provider-aws.grafanaWorkspace": {},
        "@cdktf/provider-aws.grafanaWorkspaceApiKey": {},
        "@cdktf/provider-aws.grafanaWorkspaceSamlConfiguration": {},
        "@cdktf/provider-aws.guarddutyDetector": {},
        "@cdktf/provider-aws.guarddutyFilter": {},
        "@cdktf/provider-aws.guarddutyInviteAccepter": {},
        "@cdktf/provider-aws.guarddutyIpset": {},
        "@cdktf/provider-aws.guarddutyMember": {},
        "@cdktf/provider-aws.guarddutyOrganizationAdminAccount": {},
        "@cdktf/provider-aws.guarddutyOrganizationConfiguration": {},
        "@cdktf/provider-aws.guarddutyPublishingDestination": {},
        "@cdktf/provider-aws.guarddutyThreatintelset": {},
        "@cdktf/provider-aws.iamAccessKey": {},
        "@cdktf/provider-aws.iamAccountAlias": {},
        "@cdktf/provider-aws.iamAccountPasswordPolicy": {},
        "@cdktf/provider-aws.iamGroup": {},
        "@cdktf/provider-aws.iamGroupMembership": {},
        "@cdktf/provider-aws.iamGroupPolicy": {},
        "@cdktf/provider-aws.iamGroupPolicyAttachment": {},
        "@cdktf/provider-aws.iamInstanceProfile": {},
        "@cdktf/provider-aws.iamOpenidConnectProvider": {},
        "@cdktf/provider-aws.iamPolicy": {},
        "@cdktf/provider-aws.iamPolicyAttachment": {},
        "@cdktf/provider-aws.iamRole": {},
        "@cdktf/provider-aws.iamRolePolicy": {},
        "@cdktf/provider-aws.iamRolePolicyAttachment": {},
        "@cdktf/provider-aws.iamSamlProvider": {},
        "@cdktf/provider-aws.iamServerCertificate": {},
        "@cdktf/provider-aws.iamServiceLinkedRole": {},
        "@cdktf/provider-aws.iamServiceSpecificCredential": {},
        "@cdktf/provider-aws.iamSigningCertificate": {},
        "@cdktf/provider-aws.iamUser": {},
        "@cdktf/provider-aws.iamUserGroupMembership": {},
        "@cdktf/provider-aws.iamUserLoginProfile": {},
        "@cdktf/provider-aws.iamUserPolicy": {},
        "@cdktf/provider-aws.iamUserPolicyAttachment": {},
        "@cdktf/provider-aws.iamUserSshKey": {},
        "@cdktf/provider-aws.iamVirtualMfaDevice": {},
        "@cdktf/provider-aws.identitystoreGroup": {},
        "@cdktf/provider-aws.identitystoreGroupMembership": {},
        "@cdktf/provider-aws.identitystoreUser": {},
        "@cdktf/provider-aws.imagebuilderComponent": {},
        "@cdktf/provider-aws.imagebuilderContainerRecipe": {},
        "@cdktf/provider-aws.imagebuilderDistributionConfiguration": {},
        "@cdktf/provider-aws.imagebuilderImage": {},
        "@cdktf/provider-aws.imagebuilderImagePipeline": {},
        "@cdktf/provider-aws.imagebuilderImageRecipe": {},
        "@cdktf/provider-aws.imagebuilderInfrastructureConfiguration": {},
        "@cdktf/provider-aws.inspector2DelegatedAdminAccount": {},
        "@cdktf/provider-aws.inspector2Enabler": {},
        "@cdktf/provider-aws.inspector2OrganizationConfiguration": {},
        "@cdktf/provider-aws.inspectorAssessmentTarget": {},
        "@cdktf/provider-aws.inspectorAssessmentTemplate": {},
        "@cdktf/provider-aws.inspectorResourceGroup": {},
        "@cdktf/provider-aws.instance": {},
        "@cdktf/provider-aws.internetGateway": {},
        "@cdktf/provider-aws.internetGatewayAttachment": {},
        "@cdktf/provider-aws.iotAuthorizer": {},
        "@cdktf/provider-aws.iotCertificate": {},
        "@cdktf/provider-aws.iotIndexingConfiguration": {},
        "@cdktf/provider-aws.iotLoggingOptions": {},
        "@cdktf/provider-aws.iotPolicy": {},
        "@cdktf/provider-aws.iotPolicyAttachment": {},
        "@cdktf/provider-aws.iotProvisioningTemplate": {},
        "@cdktf/provider-aws.iotRoleAlias": {},
        "@cdktf/provider-aws.iotThing": {},
        "@cdktf/provider-aws.iotThingGroup": {},
        "@cdktf/provider-aws.iotThingGroupMembership": {},
        "@cdktf/provider-aws.iotThingPrincipalAttachment": {},
        "@cdktf/provider-aws.iotThingType": {},
        "@cdktf/provider-aws.iotTopicRule": {},
        "@cdktf/provider-aws.iotTopicRuleDestination": {},
        "@cdktf/provider-aws.ivsPlaybackKeyPair": {},
        "@cdktf/provider-aws.ivsRecordingConfiguration": {},
        "@cdktf/provider-aws.kendraDataSource": {},
        "@cdktf/provider-aws.kendraExperience": {},
        "@cdktf/provider-aws.kendraFaq": {},
        "@cdktf/provider-aws.kendraIndex": {},
        "@cdktf/provider-aws.kendraQuerySuggestionsBlockList": {},
        "@cdktf/provider-aws.kendraThesaurus": {},
        "@cdktf/provider-aws.keyPair": {},
        "@cdktf/provider-aws.keyspacesKeyspace": {},
        "@cdktf/provider-aws.keyspacesTable": {},
        "@cdktf/provider-aws.kinesisAnalyticsApplication": {},
        "@cdktf/provider-aws.kinesisFirehoseDeliveryStream": {},
        "@cdktf/provider-aws.kinesisStream": {},
        "@cdktf/provider-aws.kinesisStreamConsumer": {},
        "@cdktf/provider-aws.kinesisVideoStream": {},
        "@cdktf/provider-aws.kinesisanalyticsv2Application": {},
        "@cdktf/provider-aws.kinesisanalyticsv2ApplicationSnapshot": {},
        "@cdktf/provider-aws.kmsAlias": {},
        "@cdktf/provider-aws.kmsCiphertext": {},
        "@cdktf/provider-aws.kmsCustomKeyStore": {},
        "@cdktf/provider-aws.kmsExternalKey": {},
        "@cdktf/provider-aws.kmsGrant": {},
        "@cdktf/provider-aws.kmsKey": {},
        "@cdktf/provider-aws.kmsReplicaExternalKey": {},
        "@cdktf/provider-aws.kmsReplicaKey": {},
        "@cdktf/provider-aws.lakeformationDataLakeSettings": {},
        "@cdktf/provider-aws.lakeformationLfTag": {},
        "@cdktf/provider-aws.lakeformationPermissions": {},
        "@cdktf/provider-aws.lakeformationResource": {},
        "@cdktf/provider-aws.lakeformationResourceLfTags": {},
        "@cdktf/provider-aws.lambdaAlias": {},
        "@cdktf/provider-aws.lambdaCodeSigningConfig": {},
        "@cdktf/provider-aws.lambdaEventSourceMapping": {},
        "@cdktf/provider-aws.lambdaFunction": {},
        "@cdktf/provider-aws.lambdaFunctionEventInvokeConfig": {},
        "@cdktf/provider-aws.lambdaFunctionUrl": {},
        "@cdktf/provider-aws.lambdaInvocation": {},
        "@cdktf/provider-aws.lambdaLayerVersion": {},
        "@cdktf/provider-aws.lambdaLayerVersionPermission": {},
        "@cdktf/provider-aws.lambdaPermission": {},
        "@cdktf/provider-aws.lambdaProvisionedConcurrencyConfig": {},
        "@cdktf/provider-aws.launchConfiguration": {},
        "@cdktf/provider-aws.launchTemplate": {},
        "@cdktf/provider-aws.lb": {},
        "@cdktf/provider-aws.lbCookieStickinessPolicy": {},
        "@cdktf/provider-aws.lbListener": {},
        "@cdktf/provider-aws.lbListenerCertificate": {},
        "@cdktf/provider-aws.lbListenerRule": {},
        "@cdktf/provider-aws.lbSslNegotiationPolicy": {},
        "@cdktf/provider-aws.lbTargetGroup": {},
        "@cdktf/provider-aws.lbTargetGroupAttachment": {},
        "@cdktf/provider-aws.lexBot": {},
        "@cdktf/provider-aws.lexBotAlias": {},
        "@cdktf/provider-aws.lexIntent": {},
        "@cdktf/provider-aws.lexSlotType": {},
        "@cdktf/provider-aws.licensemanagerAssociation": {},
        "@cdktf/provider-aws.licensemanagerLicenseConfiguration": {},
        "@cdktf/provider-aws.lightsailCertificate": {},
        "@cdktf/provider-aws.lightsailContainerService": {},
        "@cdktf/provider-aws.lightsailContainerServiceDeploymentVersion": {},
        "@cdktf/provider-aws.lightsailDatabase": {},
        "@cdktf/provider-aws.lightsailDisk": {},
        "@cdktf/provider-aws.lightsailDiskAttachment": {},
        "@cdktf/provider-aws.lightsailDomain": {},
        "@cdktf/provider-aws.lightsailDomainEntry": {},
        "@cdktf/provider-aws.lightsailInstance": {},
        "@cdktf/provider-aws.lightsailInstancePublicPorts": {},
        "@cdktf/provider-aws.lightsailKeyPair": {},
        "@cdktf/provider-aws.lightsailLb": {},
        "@cdktf/provider-aws.lightsailLbAttachment": {},
        "@cdktf/provider-aws.lightsailLbCertificate": {},
        "@cdktf/provider-aws.lightsailLbCertificateAttachment": {},
        "@cdktf/provider-aws.lightsailLbHttpsRedirectionPolicy": {},
        "@cdktf/provider-aws.lightsailLbStickinessPolicy": {},
        "@cdktf/provider-aws.lightsailStaticIp": {},
        "@cdktf/provider-aws.lightsailStaticIpAttachment": {},
        "@cdktf/provider-aws.loadBalancerBackendServerPolicy": {},
        "@cdktf/provider-aws.loadBalancerListenerPolicy": {},
        "@cdktf/provider-aws.loadBalancerPolicy": {},
        "@cdktf/provider-aws.locationGeofenceCollection": {},
        "@cdktf/provider-aws.locationMap": {},
        "@cdktf/provider-aws.locationPlaceIndex": {},
        "@cdktf/provider-aws.locationRouteCalculator": {},
        "@cdktf/provider-aws.locationTracker": {},
        "@cdktf/provider-aws.locationTrackerAssociation": {},
        "@cdktf/provider-aws.macie2Account": {},
        "@cdktf/provider-aws.macie2ClassificationExportConfiguration": {},
        "@cdktf/provider-aws.macie2ClassificationJob": {},
        "@cdktf/provider-aws.macie2CustomDataIdentifier": {},
        "@cdktf/provider-aws.macie2FindingsFilter": {},
        "@cdktf/provider-aws.macie2InvitationAccepter": {},
        "@cdktf/provider-aws.macie2Member": {},
        "@cdktf/provider-aws.macie2OrganizationAdminAccount": {},
        "@cdktf/provider-aws.macieMemberAccountAssociation": {},
        "@cdktf/provider-aws.macieS3BucketAssociation": {},
        "@cdktf/provider-aws.mainRouteTableAssociation": {},
        "@cdktf/provider-aws.mediaConvertQueue": {},
        "@cdktf/provider-aws.mediaPackageChannel": {},
        "@cdktf/provider-aws.mediaStoreContainer": {},
        "@cdktf/provider-aws.mediaStoreContainerPolicy": {},
        "@cdktf/provider-aws.medialiveChannel": {},
        "@cdktf/provider-aws.medialiveInput": {},
        "@cdktf/provider-aws.medialiveInputSecurityGroup": {},
        "@cdktf/provider-aws.medialiveMultiplex": {},
        "@cdktf/provider-aws.medialiveMultiplexProgram": {},
        "@cdktf/provider-aws.memorydbAcl": {},
        "@cdktf/provider-aws.memorydbCluster": {},
        "@cdktf/provider-aws.memorydbParameterGroup": {},
        "@cdktf/provider-aws.memorydbSnapshot": {},
        "@cdktf/provider-aws.memorydbSubnetGroup": {},
        "@cdktf/provider-aws.memorydbUser": {},
        "@cdktf/provider-aws.mqBroker": {},
        "@cdktf/provider-aws.mqConfiguration": {},
        "@cdktf/provider-aws.mskCluster": {},
        "@cdktf/provider-aws.mskConfiguration": {},
        "@cdktf/provider-aws.mskScramSecretAssociation": {},
        "@cdktf/provider-aws.mskServerlessCluster": {},
        "@cdktf/provider-aws.mskconnectConnector": {},
        "@cdktf/provider-aws.mskconnectCustomPlugin": {},
        "@cdktf/provider-aws.mskconnectWorkerConfiguration": {},
        "@cdktf/provider-aws.mwaaEnvironment": {},
        "@cdktf/provider-aws.natGateway": {},
        "@cdktf/provider-aws.neptuneCluster": {},
        "@cdktf/provider-aws.neptuneClusterEndpoint": {},
        "@cdktf/provider-aws.neptuneClusterInstance": {},
        "@cdktf/provider-aws.neptuneClusterParameterGroup": {},
        "@cdktf/provider-aws.neptuneClusterSnapshot": {},
        "@cdktf/provider-aws.neptuneEventSubscription": {},
        "@cdktf/provider-aws.neptuneParameterGroup": {},
        "@cdktf/provider-aws.neptuneSubnetGroup": {},
        "@cdktf/provider-aws.networkAcl": {},
        "@cdktf/provider-aws.networkAclAssociation": {},
        "@cdktf/provider-aws.networkAclRule": {},
        "@cdktf/provider-aws.networkInterface": {},
        "@cdktf/provider-aws.networkInterfaceAttachment": {},
        "@cdktf/provider-aws.networkInterfaceSgAttachment": {},
        "@cdktf/provider-aws.networkfirewallFirewall": {},
        "@cdktf/provider-aws.networkfirewallFirewallPolicy": {},
        "@cdktf/provider-aws.networkfirewallLoggingConfiguration": {},
        "@cdktf/provider-aws.networkfirewallResourcePolicy": {},
        "@cdktf/provider-aws.networkfirewallRuleGroup": {},
        "@cdktf/provider-aws.networkmanagerAttachmentAccepter": {},
        "@cdktf/provider-aws.networkmanagerConnection": {},
        "@cdktf/provider-aws.networkmanagerCustomerGatewayAssociation": {},
        "@cdktf/provider-aws.networkmanagerDevice": {},
        "@cdktf/provider-aws.networkmanagerGlobalNetwork": {},
        "@cdktf/provider-aws.networkmanagerLink": {},
        "@cdktf/provider-aws.networkmanagerLinkAssociation": {},
        "@cdktf/provider-aws.networkmanagerSite": {},
        "@cdktf/provider-aws.networkmanagerSiteToSiteVpnAttachment": {},
        "@cdktf/provider-aws.networkmanagerTransitGatewayConnectPeerAssociation": {},
        "@cdktf/provider-aws.networkmanagerTransitGatewayPeering": {},
        "@cdktf/provider-aws.networkmanagerTransitGatewayRegistration": {},
        "@cdktf/provider-aws.networkmanagerTransitGatewayRouteTableAttachment": {},
        "@cdktf/provider-aws.networkmanagerVpcAttachment": {},
        "@cdktf/provider-aws.opensearchDomain": {},
        "@cdktf/provider-aws.opensearchDomainPolicy": {},
        "@cdktf/provider-aws.opensearchDomainSamlOptions": {},
        "@cdktf/provider-aws.opsworksApplication": {},
        "@cdktf/provider-aws.opsworksCustomLayer": {},
        "@cdktf/provider-aws.opsworksEcsClusterLayer": {},
        "@cdktf/provider-aws.opsworksGangliaLayer": {},
        "@cdktf/provider-aws.opsworksHaproxyLayer": {},
        "@cdktf/provider-aws.opsworksInstance": {},
        "@cdktf/provider-aws.opsworksJavaAppLayer": {},
        "@cdktf/provider-aws.opsworksMemcachedLayer": {},
        "@cdktf/provider-aws.opsworksMysqlLayer": {},
        "@cdktf/provider-aws.opsworksNodejsAppLayer": {},
        "@cdktf/provider-aws.opsworksPermission": {},
        "@cdktf/provider-aws.opsworksPhpAppLayer": {},
        "@cdktf/provider-aws.opsworksRailsAppLayer": {},
        "@cdktf/provider-aws.opsworksRdsDbInstance": {},
        "@cdktf/provider-aws.opsworksStack": {},
        "@cdktf/provider-aws.opsworksStaticWebLayer": {},
        "@cdktf/provider-aws.opsworksUserProfile": {},
        "@cdktf/provider-aws.organizationsAccount": {},
        "@cdktf/provider-aws.organizationsDelegatedAdministrator": {},
        "@cdktf/provider-aws.organizationsOrganization": {},
        "@cdktf/provider-aws.organizationsOrganizationalUnit": {},
        "@cdktf/provider-aws.organizationsPolicy": {},
        "@cdktf/provider-aws.organizationsPolicyAttachment": {},
        "@cdktf/provider-aws.pinpointAdmChannel": {},
        "@cdktf/provider-aws.pinpointApnsChannel": {},
        "@cdktf/provider-aws.pinpointApnsSandboxChannel": {},
        "@cdktf/provider-aws.pinpointApnsVoipChannel": {},
        "@cdktf/provider-aws.pinpointApnsVoipSandboxChannel": {},
        "@cdktf/provider-aws.pinpointApp": {},
        "@cdktf/provider-aws.pinpointBaiduChannel": {},
        "@cdktf/provider-aws.pinpointEmailChannel": {},
        "@cdktf/provider-aws.pinpointEventStream": {},
        "@cdktf/provider-aws.pinpointGcmChannel": {},
        "@cdktf/provider-aws.pinpointSmsChannel": {},
        "@cdktf/provider-aws.placementGroup": {},
        "@cdktf/provider-aws.prometheusAlertManagerDefinition": {},
        "@cdktf/provider-aws.prometheusRuleGroupNamespace": {},
        "@cdktf/provider-aws.prometheusWorkspace": {},
        "@cdktf/provider-aws.provider": {},
        "@cdktf/provider-aws.proxyProtocolPolicy": {},
        "@cdktf/provider-aws.qldbLedger": {},
        "@cdktf/provider-aws.qldbStream": {},
        "@cdktf/provider-aws.quicksightDataSource": {},
        "@cdktf/provider-aws.quicksightGroup": {},
        "@cdktf/provider-aws.quicksightGroupMembership": {},
        "@cdktf/provider-aws.quicksightUser": {},
        "@cdktf/provider-aws.ramPrincipalAssociation": {},
        "@cdktf/provider-aws.ramResourceAssociation": {},
        "@cdktf/provider-aws.ramResourceShare": {},
        "@cdktf/provider-aws.ramResourceShareAccepter": {},
        "@cdktf/provider-aws.rdsCluster": {},
        "@cdktf/provider-aws.rdsClusterActivityStream": {},
        "@cdktf/provider-aws.rdsClusterEndpoint": {},
        "@cdktf/provider-aws.rdsClusterInstance": {},
        "@cdktf/provider-aws.rdsClusterParameterGroup": {},
        "@cdktf/provider-aws.rdsClusterRoleAssociation": {},
        "@cdktf/provider-aws.rdsGlobalCluster": {},
        "@cdktf/provider-aws.rdsReservedInstance": {},
        "@cdktf/provider-aws.redshiftAuthenticationProfile": {},
        "@cdktf/provider-aws.redshiftCluster": {},
        "@cdktf/provider-aws.redshiftClusterIamRoles": {},
        "@cdktf/provider-aws.redshiftEndpointAccess": {},
        "@cdktf/provider-aws.redshiftEndpointAuthorization": {},
        "@cdktf/provider-aws.redshiftEventSubscription": {},
        "@cdktf/provider-aws.redshiftHsmClientCertificate": {},
        "@cdktf/provider-aws.redshiftHsmConfiguration": {},
        "@cdktf/provider-aws.redshiftParameterGroup": {},
        "@cdktf/provider-aws.redshiftPartner": {},
        "@cdktf/provider-aws.redshiftScheduledAction": {},
        "@cdktf/provider-aws.redshiftSecurityGroup": {},
        "@cdktf/provider-aws.redshiftSnapshotCopyGrant": {},
        "@cdktf/provider-aws.redshiftSnapshotSchedule": {},
        "@cdktf/provider-aws.redshiftSnapshotScheduleAssociation": {},
        "@cdktf/provider-aws.redshiftSubnetGroup": {},
        "@cdktf/provider-aws.redshiftUsageLimit": {},
        "@cdktf/provider-aws.redshiftdataStatement": {},
        "@cdktf/provider-aws.redshiftserverlessEndpointAccess": {},
        "@cdktf/provider-aws.redshiftserverlessNamespace": {},
        "@cdktf/provider-aws.redshiftserverlessSnapshot": {},
        "@cdktf/provider-aws.redshiftserverlessUsageLimit": {},
        "@cdktf/provider-aws.redshiftserverlessWorkgroup": {},
        "@cdktf/provider-aws.resourcegroupsGroup": {},
        "@cdktf/provider-aws.rolesanywhereProfile": {},
        "@cdktf/provider-aws.rolesanywhereTrustAnchor": {},
        "@cdktf/provider-aws.route": {},
        "@cdktf/provider-aws.route53DelegationSet": {},
        "@cdktf/provider-aws.route53DomainsRegisteredDomain": {},
        "@cdktf/provider-aws.route53HealthCheck": {},
        "@cdktf/provider-aws.route53HostedZoneDnssec": {},
        "@cdktf/provider-aws.route53KeySigningKey": {},
        "@cdktf/provider-aws.route53QueryLog": {},
        "@cdktf/provider-aws.route53Record": {},
        "@cdktf/provider-aws.route53RecoverycontrolconfigCluster": {},
        "@cdktf/provider-aws.route53RecoverycontrolconfigControlPanel": {},
        "@cdktf/provider-aws.route53RecoverycontrolconfigRoutingControl": {},
        "@cdktf/provider-aws.route53RecoverycontrolconfigSafetyRule": {},
        "@cdktf/provider-aws.route53RecoveryreadinessCell": {},
        "@cdktf/provider-aws.route53RecoveryreadinessReadinessCheck": {},
        "@cdktf/provider-aws.route53RecoveryreadinessRecoveryGroup": {},
        "@cdktf/provider-aws.route53RecoveryreadinessResourceSet": {},
        "@cdktf/provider-aws.route53ResolverConfig": {},
        "@cdktf/provider-aws.route53ResolverDnssecConfig": {},
        "@cdktf/provider-aws.route53ResolverEndpoint": {},
        "@cdktf/provider-aws.route53ResolverFirewallConfig": {},
        "@cdktf/provider-aws.route53ResolverFirewallDomainList": {},
        "@cdktf/provider-aws.route53ResolverFirewallRule": {},
        "@cdktf/provider-aws.route53ResolverFirewallRuleGroup": {},
        "@cdktf/provider-aws.route53ResolverFirewallRuleGroupAssociation": {},
        "@cdktf/provider-aws.route53ResolverQueryLogConfig": {},
        "@cdktf/provider-aws.route53ResolverQueryLogConfigAssociation": {},
        "@cdktf/provider-aws.route53ResolverRule": {},
        "@cdktf/provider-aws.route53ResolverRuleAssociation": {},
        "@cdktf/provider-aws.route53TrafficPolicy": {},
        "@cdktf/provider-aws.route53TrafficPolicyInstance": {},
        "@cdktf/provider-aws.route53VpcAssociationAuthorization": {},
        "@cdktf/provider-aws.route53Zone": {},
        "@cdktf/provider-aws.route53ZoneAssociation": {},
        "@cdktf/provider-aws.routeTable": {},
        "@cdktf/provider-aws.routeTableAssociation": {},
        "@cdktf/provider-aws.rumAppMonitor": {},
        "@cdktf/provider-aws.s3AccessPoint": {},
        "@cdktf/provider-aws.s3AccountPublicAccessBlock": {},
        "@cdktf/provider-aws.s3Bucket": {},
        "@cdktf/provider-aws.s3BucketAccelerateConfiguration": {},
        "@cdktf/provider-aws.s3BucketAcl": {},
        "@cdktf/provider-aws.s3BucketAnalyticsConfiguration": {},
        "@cdktf/provider-aws.s3BucketCorsConfiguration": {},
        "@cdktf/provider-aws.s3BucketIntelligentTieringConfiguration": {},
        "@cdktf/provider-aws.s3BucketInventory": {},
        "@cdktf/provider-aws.s3BucketLifecycleConfiguration": {},
        "@cdktf/provider-aws.s3BucketLogging": {},
        "@cdktf/provider-aws.s3BucketMetric": {},
        "@cdktf/provider-aws.s3BucketNotification": {},
        "@cdktf/provider-aws.s3BucketObject": {},
        "@cdktf/provider-aws.s3BucketObjectLockConfiguration": {},
        "@cdktf/provider-aws.s3BucketOwnershipControls": {},
        "@cdktf/provider-aws.s3BucketPolicy": {},
        "@cdktf/provider-aws.s3BucketPublicAccessBlock": {},
        "@cdktf/provider-aws.s3BucketReplicationConfiguration": {},
        "@cdktf/provider-aws.s3BucketRequestPaymentConfiguration": {},
        "@cdktf/provider-aws.s3BucketServerSideEncryptionConfiguration": {},
        "@cdktf/provider-aws.s3BucketVersioning": {},
        "@cdktf/provider-aws.s3BucketWebsiteConfiguration": {},
        "@cdktf/provider-aws.s3ControlAccessPointPolicy": {},
        "@cdktf/provider-aws.s3ControlBucket": {},
        "@cdktf/provider-aws.s3ControlBucketLifecycleConfiguration": {},
        "@cdktf/provider-aws.s3ControlBucketPolicy": {},
        "@cdktf/provider-aws.s3ControlMultiRegionAccessPoint": {},
        "@cdktf/provider-aws.s3ControlMultiRegionAccessPointPolicy": {},
        "@cdktf/provider-aws.s3ControlObjectLambdaAccessPoint": {},
        "@cdktf/provider-aws.s3ControlObjectLambdaAccessPointPolicy": {},
        "@cdktf/provider-aws.s3ControlStorageLensConfiguration": {},
        "@cdktf/provider-aws.s3Object": {},
        "@cdktf/provider-aws.s3ObjectCopy": {},
        "@cdktf/provider-aws.s3OutpostsEndpoint": {},
        "@cdktf/provider-aws.sagemakerApp": {},
        "@cdktf/provider-aws.sagemakerAppImageConfig": {},
        "@cdktf/provider-aws.sagemakerCodeRepository": {},
        "@cdktf/provider-aws.sagemakerDevice": {},
        "@cdktf/provider-aws.sagemakerDeviceFleet": {},
        "@cdktf/provider-aws.sagemakerDomain": {},
        "@cdktf/provider-aws.sagemakerEndpoint": {},
        "@cdktf/provider-aws.sagemakerEndpointConfiguration": {},
        "@cdktf/provider-aws.sagemakerFeatureGroup": {},
        "@cdktf/provider-aws.sagemakerFlowDefinition": {},
        "@cdktf/provider-aws.sagemakerHumanTaskUi": {},
        "@cdktf/provider-aws.sagemakerImage": {},
        "@cdktf/provider-aws.sagemakerImageVersion": {},
        "@cdktf/provider-aws.sagemakerModel": {},
        "@cdktf/provider-aws.sagemakerModelPackageGroup": {},
        "@cdktf/provider-aws.sagemakerModelPackageGroupPolicy": {},
        "@cdktf/provider-aws.sagemakerNotebookInstance": {},
        "@cdktf/provider-aws.sagemakerNotebookInstanceLifecycleConfiguration": {},
        "@cdktf/provider-aws.sagemakerProject": {},
        "@cdktf/provider-aws.sagemakerServicecatalogPortfolioStatus": {},
        "@cdktf/provider-aws.sagemakerStudioLifecycleConfig": {},
        "@cdktf/provider-aws.sagemakerUserProfile": {},
        "@cdktf/provider-aws.sagemakerWorkforce": {},
        "@cdktf/provider-aws.sagemakerWorkteam": {},
        "@cdktf/provider-aws.schemasDiscoverer": {},
        "@cdktf/provider-aws.schemasRegistry": {},
        "@cdktf/provider-aws.schemasSchema": {},
        "@cdktf/provider-aws.secretsmanagerSecret": {},
        "@cdktf/provider-aws.secretsmanagerSecretPolicy": {},
        "@cdktf/provider-aws.secretsmanagerSecretRotation": {},
        "@cdktf/provider-aws.secretsmanagerSecretVersion": {},
        "@cdktf/provider-aws.securityGroup": {},
        "@cdktf/provider-aws.securityGroupRule": {},
        "@cdktf/provider-aws.securityhubAccount": {},
        "@cdktf/provider-aws.securityhubActionTarget": {},
        "@cdktf/provider-aws.securityhubFindingAggregator": {},
        "@cdktf/provider-aws.securityhubInsight": {},
        "@cdktf/provider-aws.securityhubInviteAccepter": {},
        "@cdktf/provider-aws.securityhubMember": {},
        "@cdktf/provider-aws.securityhubOrganizationAdminAccount": {},
        "@cdktf/provider-aws.securityhubOrganizationConfiguration": {},
        "@cdktf/provider-aws.securityhubProductSubscription": {},
        "@cdktf/provider-aws.securityhubStandardsControl": {},
        "@cdktf/provider-aws.securityhubStandardsSubscription": {},
        "@cdktf/provider-aws.serverlessapplicationrepositoryCloudformationStack": {},
        "@cdktf/provider-aws.serviceDiscoveryHttpNamespace": {},
        "@cdktf/provider-aws.serviceDiscoveryInstance": {},
        "@cdktf/provider-aws.serviceDiscoveryPrivateDnsNamespace": {},
        "@cdktf/provider-aws.serviceDiscoveryPublicDnsNamespace": {},
        "@cdktf/provider-aws.serviceDiscoveryService": {},
        "@cdktf/provider-aws.servicecatalogBudgetResourceAssociation": {},
        "@cdktf/provider-aws.servicecatalogConstraint": {},
        "@cdktf/provider-aws.servicecatalogOrganizationsAccess": {},
        "@cdktf/provider-aws.servicecatalogPortfolio": {},
        "@cdktf/provider-aws.servicecatalogPortfolioShare": {},
        "@cdktf/provider-aws.servicecatalogPrincipalPortfolioAssociation": {},
        "@cdktf/provider-aws.servicecatalogProduct": {},
        "@cdktf/provider-aws.servicecatalogProductPortfolioAssociation": {},
        "@cdktf/provider-aws.servicecatalogProvisionedProduct": {},
        "@cdktf/provider-aws.servicecatalogProvisioningArtifact": {},
        "@cdktf/provider-aws.servicecatalogServiceAction": {},
        "@cdktf/provider-aws.servicecatalogTagOption": {},
        "@cdktf/provider-aws.servicecatalogTagOptionResourceAssociation": {},
        "@cdktf/provider-aws.servicequotasServiceQuota": {},
        "@cdktf/provider-aws.sesActiveReceiptRuleSet": {},
        "@cdktf/provider-aws.sesConfigurationSet": {},
        "@cdktf/provider-aws.sesDomainDkim": {},
        "@cdktf/provider-aws.sesDomainIdentity": {},
        "@cdktf/provider-aws.sesDomainIdentityVerification": {},
        "@cdktf/provider-aws.sesDomainMailFrom": {},
        "@cdktf/provider-aws.sesEmailIdentity": {},
        "@cdktf/provider-aws.sesEventDestination": {},
        "@cdktf/provider-aws.sesIdentityNotificationTopic": {},
        "@cdktf/provider-aws.sesIdentityPolicy": {},
        "@cdktf/provider-aws.sesReceiptFilter": {},
        "@cdktf/provider-aws.sesReceiptRule": {},
        "@cdktf/provider-aws.sesReceiptRuleSet": {},
        "@cdktf/provider-aws.sesTemplate": {},
        "@cdktf/provider-aws.sesv2ConfigurationSet": {},
        "@cdktf/provider-aws.sesv2DedicatedIpAssignment": {},
        "@cdktf/provider-aws.sesv2DedicatedIpPool": {},
        "@cdktf/provider-aws.sesv2EmailIdentity": {},
        "@cdktf/provider-aws.sesv2EmailIdentityFeedbackAttributes": {},
        "@cdktf/provider-aws.sfnActivity": {},
        "@cdktf/provider-aws.sfnStateMachine": {},
        "@cdktf/provider-aws.shieldProtection": {},
        "@cdktf/provider-aws.shieldProtectionGroup": {},
        "@cdktf/provider-aws.shieldProtectionHealthCheckAssociation": {},
        "@cdktf/provider-aws.signerSigningJob": {},
        "@cdktf/provider-aws.signerSigningProfile": {},
        "@cdktf/provider-aws.signerSigningProfilePermission": {},
        "@cdktf/provider-aws.simpledbDomain": {},
        "@cdktf/provider-aws.snapshotCreateVolumePermission": {},
        "@cdktf/provider-aws.snsPlatformApplication": {},
        "@cdktf/provider-aws.snsSmsPreferences": {},
        "@cdktf/provider-aws.snsTopic": {},
        "@cdktf/provider-aws.snsTopicPolicy": {},
        "@cdktf/provider-aws.snsTopicSubscription": {},
        "@cdktf/provider-aws.spotDatafeedSubscription": {},
        "@cdktf/provider-aws.spotFleetRequest": {},
        "@cdktf/provider-aws.spotInstanceRequest": {},
        "@cdktf/provider-aws.sqsQueue": {},
        "@cdktf/provider-aws.sqsQueuePolicy": {},
        "@cdktf/provider-aws.sqsQueueRedriveAllowPolicy": {},
        "@cdktf/provider-aws.sqsQueueRedrivePolicy": {},
        "@cdktf/provider-aws.ssmActivation": {},
        "@cdktf/provider-aws.ssmAssociation": {},
        "@cdktf/provider-aws.ssmDefaultPatchBaseline": {},
        "@cdktf/provider-aws.ssmDocument": {},
        "@cdktf/provider-aws.ssmMaintenanceWindow": {},
        "@cdktf/provider-aws.ssmMaintenanceWindowTarget": {},
        "@cdktf/provider-aws.ssmMaintenanceWindowTask": {},
        "@cdktf/provider-aws.ssmParameter": {},
        "@cdktf/provider-aws.ssmPatchBaseline": {},
        "@cdktf/provider-aws.ssmPatchGroup": {},
        "@cdktf/provider-aws.ssmResourceDataSync": {},
        "@cdktf/provider-aws.ssmServiceSetting": {},
        "@cdktf/provider-aws.ssoadminAccountAssignment": {},
        "@cdktf/provider-aws.ssoadminCustomerManagedPolicyAttachment": {},
        "@cdktf/provider-aws.ssoadminManagedPolicyAttachment": {},
        "@cdktf/provider-aws.ssoadminPermissionSet": {},
        "@cdktf/provider-aws.ssoadminPermissionSetInlinePolicy": {},
        "@cdktf/provider-aws.storagegatewayCache": {},
        "@cdktf/provider-aws.storagegatewayCachedIscsiVolume": {},
        "@cdktf/provider-aws.storagegatewayFileSystemAssociation": {},
        "@cdktf/provider-aws.storagegatewayGateway": {},
        "@cdktf/provider-aws.storagegatewayNfsFileShare": {},
        "@cdktf/provider-aws.storagegatewaySmbFileShare": {},
        "@cdktf/provider-aws.storagegatewayStoredIscsiVolume": {},
        "@cdktf/provider-aws.storagegatewayTapePool": {},
        "@cdktf/provider-aws.storagegatewayUploadBuffer": {},
        "@cdktf/provider-aws.storagegatewayWorkingStorage": {},
        "@cdktf/provider-aws.subnet": {},
        "@cdktf/provider-aws.swfDomain": {},
        "@cdktf/provider-aws.syntheticsCanary": {},
        "@cdktf/provider-aws.timestreamwriteDatabase": {},
        "@cdktf/provider-aws.timestreamwriteTable": {},
        "@cdktf/provider-aws.transcribeLanguageModel": {},
        "@cdktf/provider-aws.transcribeMedicalVocabulary": {},
        "@cdktf/provider-aws.transcribeVocabulary": {},
        "@cdktf/provider-aws.transcribeVocabularyFilter": {},
        "@cdktf/provider-aws.transferAccess": {},
        "@cdktf/provider-aws.transferServer": {},
        "@cdktf/provider-aws.transferSshKey": {},
        "@cdktf/provider-aws.transferTag": {},
        "@cdktf/provider-aws.transferUser": {},
        "@cdktf/provider-aws.transferWorkflow": {},
        "@cdktf/provider-aws.volumeAttachment": {},
        "@cdktf/provider-aws.vpc": {},
        "@cdktf/provider-aws.vpcDhcpOptions": {},
        "@cdktf/provider-aws.vpcDhcpOptionsAssociation": {},
        "@cdktf/provider-aws.vpcEndpoint": {},
        "@cdktf/provider-aws.vpcEndpointConnectionAccepter": {},
        "@cdktf/provider-aws.vpcEndpointConnectionNotification": {},
        "@cdktf/provider-aws.vpcEndpointPolicy": {},
        "@cdktf/provider-aws.vpcEndpointRouteTableAssociation": {},
        "@cdktf/provider-aws.vpcEndpointSecurityGroupAssociation": {},
        "@cdktf/provider-aws.vpcEndpointService": {},
        "@cdktf/provider-aws.vpcEndpointServiceAllowedPrincipal": {},
        "@cdktf/provider-aws.vpcEndpointSubnetAssociation": {},
        "@cdktf/provider-aws.vpcIpam": {},
        "@cdktf/provider-aws.vpcIpamOrganizationAdminAccount": {},
        "@cdktf/provider-aws.vpcIpamPool": {},
        "@cdktf/provider-aws.vpcIpamPoolCidr": {},
        "@cdktf/provider-aws.vpcIpamPoolCidrAllocation": {},
        "@cdktf/provider-aws.vpcIpamPreviewNextCidr": {},
        "@cdktf/provider-aws.vpcIpamScope": {},
        "@cdktf/provider-aws.vpcIpv4CidrBlockAssociation": {},
        "@cdktf/provider-aws.vpcIpv6CidrBlockAssociation": {},
        "@cdktf/provider-aws.vpcPeeringConnection": {},
        "@cdktf/provider-aws.vpcPeeringConnectionAccepter": {},
        "@cdktf/provider-aws.vpcPeeringConnectionOptions": {},
        "@cdktf/provider-aws.vpnConnection": {},
        "@cdktf/provider-aws.vpnConnectionRoute": {},
        "@cdktf/provider-aws.vpnGateway": {},
        "@cdktf/provider-aws.vpnGatewayAttachment": {},
        "@cdktf/provider-aws.vpnGatewayRoutePropagation": {},
        "@cdktf/provider-aws.wafByteMatchSet": {},
        "@cdktf/provider-aws.wafGeoMatchSet": {},
        "@cdktf/provider-aws.wafIpset": {},
        "@cdktf/provider-aws.wafRateBasedRule": {},
        "@cdktf/provider-aws.wafRegexMatchSet": {},
        "@cdktf/provider-aws.wafRegexPatternSet": {},
        "@cdktf/provider-aws.wafRule": {},
        "@cdktf/provider-aws.wafRuleGroup": {},
        "@cdktf/provider-aws.wafSizeConstraintSet": {},
        "@cdktf/provider-aws.wafSqlInjectionMatchSet": {},
        "@cdktf/provider-aws.wafWebAcl": {},
        "@cdktf/provider-aws.wafXssMatchSet": {},
        "@cdktf/provider-aws.wafregionalByteMatchSet": {},
        "@cdktf/provider-aws.wafregionalGeoMatchSet": {},
        "@cdktf/provider-aws.wafregionalIpset": {},
        "@cdktf/provider-aws.wafregionalRateBasedRule": {},
        "@cdktf/provider-aws.wafregionalRegexMatchSet": {},
        "@cdktf/provider-aws.wafregionalRegexPatternSet": {},
        "@cdktf/provider-aws.wafregionalRule": {},
        "@cdktf/provider-aws.wafregionalRuleGroup": {},
        "@cdktf/provider-aws.wafregionalSizeConstraintSet": {},
        "@cdktf/provider-aws.wafregionalSqlInjectionMatchSet": {},
        "@cdktf/provider-aws.wafregionalWebAcl": {},
        "@cdktf/provider-aws.wafregionalWebAclAssociation": {},
        "@cdktf/provider-aws.wafregionalXssMatchSet": {},
        "@cdktf/provider-aws.wafv2IpSet": {},
        "@cdktf/provider-aws.wafv2RegexPatternSet": {},
        "@cdktf/provider-aws.wafv2RuleGroup": {},
        "@cdktf/provider-aws.wafv2WebAcl": {},
        "@cdktf/provider-aws.wafv2WebAclAssociation": {},
        "@cdktf/provider-aws.wafv2WebAclLoggingConfiguration": {},
        "@cdktf/provider-aws.worklinkFleet": {},
        "@cdktf/provider-aws.worklinkWebsiteCertificateAuthorityAssociation": {},
        "@cdktf/provider-aws.workspacesDirectory": {},
        "@cdktf/provider-aws.workspacesIpGroup": {},
        "@cdktf/provider-aws.workspacesWorkspace": {},
        "@cdktf/provider-aws.xrayEncryptionConfig": {},
        "@cdktf/provider-aws.xrayGroup": {},
        "@cdktf/provider-aws.xraySamplingRule": {}
      },
      "targets": {
        "dotnet": {
          "namespace": "HashiCorp.Cdktf.Providers.Aws",
          "packageId": "HashiCorp.Cdktf.Providers.Aws"
        },
        "go": {
          "moduleName": "github.com/cdktf/cdktf-provider-aws-go",
          "packageName": "aws"
        },
        "java": {
          "maven": {
            "artifactId": "cdktf-provider-aws",
            "groupId": "com.hashicorp"
          },
          "package": "com.hashicorp.cdktf.providers.aws"
        },
        "js": {
          "npm": "@cdktf/provider-aws"
        },
        "python": {
          "distName": "cdktf-cdktf-provider-aws",
          "module": "cdktf_cdktf_provider_aws"
        }
      }
    },
    "@cdktf/provider-azurerm": {
      "submodules": {
        "@cdktf/provider-azurerm.aadb2CDirectory": {},
        "@cdktf/provider-azurerm.activeDirectoryDomainService": {},
        "@cdktf/provider-azurerm.activeDirectoryDomainServiceReplicaSet": {},
        "@cdktf/provider-azurerm.activeDirectoryDomainServiceTrust": {},
        "@cdktf/provider-azurerm.advancedThreatProtection": {},
        "@cdktf/provider-azurerm.analysisServicesServer": {},
        "@cdktf/provider-azurerm.apiConnection": {},
        "@cdktf/provider-azurerm.apiManagement": {},
        "@cdktf/provider-azurerm.apiManagementApi": {},
        "@cdktf/provider-azurerm.apiManagementApiDiagnostic": {},
        "@cdktf/provider-azurerm.apiManagementApiOperation": {},
        "@cdktf/provider-azurerm.apiManagementApiOperationPolicy": {},
        "@cdktf/provider-azurerm.apiManagementApiOperationTag": {},
        "@cdktf/provider-azurerm.apiManagementApiPolicy": {},
        "@cdktf/provider-azurerm.apiManagementApiRelease": {},
        "@cdktf/provider-azurerm.apiManagementApiSchema": {},
        "@cdktf/provider-azurerm.apiManagementApiTag": {},
        "@cdktf/provider-azurerm.apiManagementApiTagDescription": {},
        "@cdktf/provider-azurerm.apiManagementApiVersionSet": {},
        "@cdktf/provider-azurerm.apiManagementAuthorizationServer": {},
        "@cdktf/provider-azurerm.apiManagementBackend": {},
        "@cdktf/provider-azurerm.apiManagementCertificate": {},
        "@cdktf/provider-azurerm.apiManagementCustomDomain": {},
        "@cdktf/provider-azurerm.apiManagementDiagnostic": {},
        "@cdktf/provider-azurerm.apiManagementEmailTemplate": {},
        "@cdktf/provider-azurerm.apiManagementGateway": {},
        "@cdktf/provider-azurerm.apiManagementGatewayApi": {},
        "@cdktf/provider-azurerm.apiManagementGatewayCertificateAuthority": {},
        "@cdktf/provider-azurerm.apiManagementGatewayHostNameConfiguration": {},
        "@cdktf/provider-azurerm.apiManagementGlobalSchema": {},
        "@cdktf/provider-azurerm.apiManagementGroup": {},
        "@cdktf/provider-azurerm.apiManagementGroupUser": {},
        "@cdktf/provider-azurerm.apiManagementIdentityProviderAad": {},
        "@cdktf/provider-azurerm.apiManagementIdentityProviderAadb2C": {},
        "@cdktf/provider-azurerm.apiManagementIdentityProviderFacebook": {},
        "@cdktf/provider-azurerm.apiManagementIdentityProviderGoogle": {},
        "@cdktf/provider-azurerm.apiManagementIdentityProviderMicrosoft": {},
        "@cdktf/provider-azurerm.apiManagementIdentityProviderTwitter": {},
        "@cdktf/provider-azurerm.apiManagementLogger": {},
        "@cdktf/provider-azurerm.apiManagementNamedValue": {},
        "@cdktf/provider-azurerm.apiManagementNotificationRecipientEmail": {},
        "@cdktf/provider-azurerm.apiManagementNotificationRecipientUser": {},
        "@cdktf/provider-azurerm.apiManagementOpenidConnectProvider": {},
        "@cdktf/provider-azurerm.apiManagementPolicy": {},
        "@cdktf/provider-azurerm.apiManagementProduct": {},
        "@cdktf/provider-azurerm.apiManagementProductApi": {},
        "@cdktf/provider-azurerm.apiManagementProductGroup": {},
        "@cdktf/provider-azurerm.apiManagementProductPolicy": {},
        "@cdktf/provider-azurerm.apiManagementProductTag": {},
        "@cdktf/provider-azurerm.apiManagementRedisCache": {},
        "@cdktf/provider-azurerm.apiManagementSubscription": {},
        "@cdktf/provider-azurerm.apiManagementTag": {},
        "@cdktf/provider-azurerm.apiManagementUser": {},
        "@cdktf/provider-azurerm.appConfiguration": {},
        "@cdktf/provider-azurerm.appConfigurationFeature": {},
        "@cdktf/provider-azurerm.appConfigurationKey": {},
        "@cdktf/provider-azurerm.appService": {},
        "@cdktf/provider-azurerm.appServiceActiveSlot": {},
        "@cdktf/provider-azurerm.appServiceCertificate": {},
        "@cdktf/provider-azurerm.appServiceCertificateBinding": {},
        "@cdktf/provider-azurerm.appServiceCertificateOrder": {},
        "@cdktf/provider-azurerm.appServiceConnection": {},
        "@cdktf/provider-azurerm.appServiceCustomHostnameBinding": {},
        "@cdktf/provider-azurerm.appServiceEnvironment": {},
        "@cdktf/provider-azurerm.appServiceEnvironmentV3": {},
        "@cdktf/provider-azurerm.appServiceHybridConnection": {},
        "@cdktf/provider-azurerm.appServiceManagedCertificate": {},
        "@cdktf/provider-azurerm.appServicePlan": {},
        "@cdktf/provider-azurerm.appServicePublicCertificate": {},
        "@cdktf/provider-azurerm.appServiceSlot": {},
        "@cdktf/provider-azurerm.appServiceSlotCustomHostnameBinding": {},
        "@cdktf/provider-azurerm.appServiceSlotVirtualNetworkSwiftConnection": {},
        "@cdktf/provider-azurerm.appServiceSourceControl": {},
        "@cdktf/provider-azurerm.appServiceSourceControlSlot": {},
        "@cdktf/provider-azurerm.appServiceSourceControlToken": {},
        "@cdktf/provider-azurerm.appServiceVirtualNetworkSwiftConnection": {},
        "@cdktf/provider-azurerm.applicationGateway": {},
        "@cdktf/provider-azurerm.applicationInsights": {},
        "@cdktf/provider-azurerm.applicationInsightsAnalyticsItem": {},
        "@cdktf/provider-azurerm.applicationInsightsApiKey": {},
        "@cdktf/provider-azurerm.applicationInsightsSmartDetectionRule": {},
        "@cdktf/provider-azurerm.applicationInsightsWebTest": {},
        "@cdktf/provider-azurerm.applicationInsightsWorkbook": {},
        "@cdktf/provider-azurerm.applicationInsightsWorkbookTemplate": {},
        "@cdktf/provider-azurerm.applicationSecurityGroup": {},
        "@cdktf/provider-azurerm.attestationProvider": {},
        "@cdktf/provider-azurerm.automationAccount": {},
        "@cdktf/provider-azurerm.automationCertificate": {},
        "@cdktf/provider-azurerm.automationConnection": {},
        "@cdktf/provider-azurerm.automationConnectionCertificate": {},
        "@cdktf/provider-azurerm.automationConnectionClassicCertificate": {},
        "@cdktf/provider-azurerm.automationConnectionServicePrincipal": {},
        "@cdktf/provider-azurerm.automationConnectionType": {},
        "@cdktf/provider-azurerm.automationCredential": {},
        "@cdktf/provider-azurerm.automationDscConfiguration": {},
        "@cdktf/provider-azurerm.automationDscNodeconfiguration": {},
        "@cdktf/provider-azurerm.automationHybridRunbookWorker": {},
        "@cdktf/provider-azurerm.automationHybridRunbookWorkerGroup": {},
        "@cdktf/provider-azurerm.automationJobSchedule": {},
        "@cdktf/provider-azurerm.automationModule": {},
        "@cdktf/provider-azurerm.automationRunbook": {},
        "@cdktf/provider-azurerm.automationSchedule": {},
        "@cdktf/provider-azurerm.automationSoftwareUpdateConfiguration": {},
        "@cdktf/provider-azurerm.automationSourceControl": {},
        "@cdktf/provider-azurerm.automationVariableBool": {},
        "@cdktf/provider-azurerm.automationVariableDatetime": {},
        "@cdktf/provider-azurerm.automationVariableInt": {},
        "@cdktf/provider-azurerm.automationVariableString": {},
        "@cdktf/provider-azurerm.automationWatcher": {},
        "@cdktf/provider-azurerm.automationWebhook": {},
        "@cdktf/provider-azurerm.availabilitySet": {},
        "@cdktf/provider-azurerm.backupContainerStorageAccount": {},
        "@cdktf/provider-azurerm.backupPolicyFileShare": {},
        "@cdktf/provider-azurerm.backupPolicyVm": {},
        "@cdktf/provider-azurerm.backupPolicyVmWorkload": {},
        "@cdktf/provider-azurerm.backupProtectedFileShare": {},
        "@cdktf/provider-azurerm.backupProtectedVm": {},
        "@cdktf/provider-azurerm.bastionHost": {},
        "@cdktf/provider-azurerm.batchAccount": {},
        "@cdktf/provider-azurerm.batchApplication": {},
        "@cdktf/provider-azurerm.batchCertificate": {},
        "@cdktf/provider-azurerm.batchJob": {},
        "@cdktf/provider-azurerm.batchPool": {},
        "@cdktf/provider-azurerm.blueprintAssignment": {},
        "@cdktf/provider-azurerm.botChannelAlexa": {},
        "@cdktf/provider-azurerm.botChannelDirectLineSpeech": {},
        "@cdktf/provider-azurerm.botChannelDirectline": {},
        "@cdktf/provider-azurerm.botChannelEmail": {},
        "@cdktf/provider-azurerm.botChannelFacebook": {},
        "@cdktf/provider-azurerm.botChannelLine": {},
        "@cdktf/provider-azurerm.botChannelMsTeams": {},
        "@cdktf/provider-azurerm.botChannelSlack": {},
        "@cdktf/provider-azurerm.botChannelSms": {},
        "@cdktf/provider-azurerm.botChannelWebChat": {},
        "@cdktf/provider-azurerm.botChannelsRegistration": {},
        "@cdktf/provider-azurerm.botConnection": {},
        "@cdktf/provider-azurerm.botServiceAzureBot": {},
        "@cdktf/provider-azurerm.botWebApp": {},
        "@cdktf/provider-azurerm.capacityReservation": {},
        "@cdktf/provider-azurerm.capacityReservationGroup": {},
        "@cdktf/provider-azurerm.cdnEndpoint": {},
        "@cdktf/provider-azurerm.cdnEndpointCustomDomain": {},
        "@cdktf/provider-azurerm.cdnFrontdoorCustomDomain": {},
        "@cdktf/provider-azurerm.cdnFrontdoorCustomDomainAssociation": {},
        "@cdktf/provider-azurerm.cdnFrontdoorEndpoint": {},
        "@cdktf/provider-azurerm.cdnFrontdoorFirewallPolicy": {},
        "@cdktf/provider-azurerm.cdnFrontdoorOrigin": {},
        "@cdktf/provider-azurerm.cdnFrontdoorOriginGroup": {},
        "@cdktf/provider-azurerm.cdnFrontdoorProfile": {},
        "@cdktf/provider-azurerm.cdnFrontdoorRoute": {},
        "@cdktf/provider-azurerm.cdnFrontdoorRouteDisableLinkToDefaultDomain": {},
        "@cdktf/provider-azurerm.cdnFrontdoorRule": {},
        "@cdktf/provider-azurerm.cdnFrontdoorRuleSet": {},
        "@cdktf/provider-azurerm.cdnFrontdoorSecret": {},
        "@cdktf/provider-azurerm.cdnFrontdoorSecurityPolicy": {},
        "@cdktf/provider-azurerm.cdnProfile": {},
        "@cdktf/provider-azurerm.cognitiveAccount": {},
        "@cdktf/provider-azurerm.cognitiveAccountCustomerManagedKey": {},
        "@cdktf/provider-azurerm.communicationService": {},
        "@cdktf/provider-azurerm.confidentialLedger": {},
        "@cdktf/provider-azurerm.consumptionBudgetManagementGroup": {},
        "@cdktf/provider-azurerm.consumptionBudgetResourceGroup": {},
        "@cdktf/provider-azurerm.consumptionBudgetSubscription": {},
        "@cdktf/provider-azurerm.containerConnectedRegistry": {},
        "@cdktf/provider-azurerm.containerGroup": {},
        "@cdktf/provider-azurerm.containerRegistry": {},
        "@cdktf/provider-azurerm.containerRegistryAgentPool": {},
        "@cdktf/provider-azurerm.containerRegistryScopeMap": {},
        "@cdktf/provider-azurerm.containerRegistryTask": {},
        "@cdktf/provider-azurerm.containerRegistryTaskScheduleRunNow": {},
        "@cdktf/provider-azurerm.containerRegistryToken": {},
        "@cdktf/provider-azurerm.containerRegistryTokenPassword": {},
        "@cdktf/provider-azurerm.containerRegistryWebhook": {},
        "@cdktf/provider-azurerm.cosmosdbAccount": {},
        "@cdktf/provider-azurerm.cosmosdbCassandraCluster": {},
        "@cdktf/provider-azurerm.cosmosdbCassandraDatacenter": {},
        "@cdktf/provider-azurerm.cosmosdbCassandraKeyspace": {},
        "@cdktf/provider-azurerm.cosmosdbCassandraTable": {},
        "@cdktf/provider-azurerm.cosmosdbGremlinDatabase": {},
        "@cdktf/provider-azurerm.cosmosdbGremlinGraph": {},
        "@cdktf/provider-azurerm.cosmosdbMongoCollection": {},
        "@cdktf/provider-azurerm.cosmosdbMongoDatabase": {},
        "@cdktf/provider-azurerm.cosmosdbNotebookWorkspace": {},
        "@cdktf/provider-azurerm.cosmosdbSqlContainer": {},
        "@cdktf/provider-azurerm.cosmosdbSqlDatabase": {},
        "@cdktf/provider-azurerm.cosmosdbSqlDedicatedGateway": {},
        "@cdktf/provider-azurerm.cosmosdbSqlFunction": {},
        "@cdktf/provider-azurerm.cosmosdbSqlRoleAssignment": {},
        "@cdktf/provider-azurerm.cosmosdbSqlRoleDefinition": {},
        "@cdktf/provider-azurerm.cosmosdbSqlStoredProcedure": {},
        "@cdktf/provider-azurerm.cosmosdbSqlTrigger": {},
        "@cdktf/provider-azurerm.cosmosdbTable": {},
        "@cdktf/provider-azurerm.customProvider": {},
        "@cdktf/provider-azurerm.dashboard": {},
        "@cdktf/provider-azurerm.dashboardGrafana": {},
        "@cdktf/provider-azurerm.dataAzurermAadb2CDirectory": {},
        "@cdktf/provider-azurerm.dataAzurermActiveDirectoryDomainService": {},
        "@cdktf/provider-azurerm.dataAzurermAdvisorRecommendations": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagement": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementApi": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementApiVersionSet": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementGateway": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementGatewayHostNameConfiguration": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementGroup": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementProduct": {},
        "@cdktf/provider-azurerm.dataAzurermApiManagementUser": {},
        "@cdktf/provider-azurerm.dataAzurermAppConfiguration": {},
        "@cdktf/provider-azurerm.dataAzurermAppConfigurationKey": {},
        "@cdktf/provider-azurerm.dataAzurermAppConfigurationKeys": {},
        "@cdktf/provider-azurerm.dataAzurermAppService": {},
        "@cdktf/provider-azurerm.dataAzurermAppServiceCertificate": {},
        "@cdktf/provider-azurerm.dataAzurermAppServiceCertificateOrder": {},
        "@cdktf/provider-azurerm.dataAzurermAppServiceEnvironment": {},
        "@cdktf/provider-azurerm.dataAzurermAppServiceEnvironmentV3": {},
        "@cdktf/provider-azurerm.dataAzurermAppServicePlan": {},
        "@cdktf/provider-azurerm.dataAzurermApplicationGateway": {},
        "@cdktf/provider-azurerm.dataAzurermApplicationInsights": {},
        "@cdktf/provider-azurerm.dataAzurermApplicationSecurityGroup": {},
        "@cdktf/provider-azurerm.dataAzurermAttestationProvider": {},
        "@cdktf/provider-azurerm.dataAzurermAutomationAccount": {},
        "@cdktf/provider-azurerm.dataAzurermAutomationVariableBool": {},
        "@cdktf/provider-azurerm.dataAzurermAutomationVariableDatetime": {},
        "@cdktf/provider-azurerm.dataAzurermAutomationVariableInt": {},
        "@cdktf/provider-azurerm.dataAzurermAutomationVariableString": {},
        "@cdktf/provider-azurerm.dataAzurermAvailabilitySet": {},
        "@cdktf/provider-azurerm.dataAzurermBackupPolicyFileShare": {},
        "@cdktf/provider-azurerm.dataAzurermBackupPolicyVm": {},
        "@cdktf/provider-azurerm.dataAzurermBatchAccount": {},
        "@cdktf/provider-azurerm.dataAzurermBatchApplication": {},
        "@cdktf/provider-azurerm.dataAzurermBatchCertificate": {},
        "@cdktf/provider-azurerm.dataAzurermBatchPool": {},
        "@cdktf/provider-azurerm.dataAzurermBillingEnrollmentAccountScope": {},
        "@cdktf/provider-azurerm.dataAzurermBillingMcaAccountScope": {},
        "@cdktf/provider-azurerm.dataAzurermBillingMpaAccountScope": {},
        "@cdktf/provider-azurerm.dataAzurermBlueprintDefinition": {},
        "@cdktf/provider-azurerm.dataAzurermBlueprintPublishedVersion": {},
        "@cdktf/provider-azurerm.dataAzurermCdnFrontdoorEndpoint": {},
        "@cdktf/provider-azurerm.dataAzurermCdnFrontdoorFirewallPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermCdnFrontdoorOriginGroup": {},
        "@cdktf/provider-azurerm.dataAzurermCdnFrontdoorProfile": {},
        "@cdktf/provider-azurerm.dataAzurermCdnFrontdoorRuleSet": {},
        "@cdktf/provider-azurerm.dataAzurermCdnFrontdoorSecret": {},
        "@cdktf/provider-azurerm.dataAzurermCdnProfile": {},
        "@cdktf/provider-azurerm.dataAzurermClientConfig": {},
        "@cdktf/provider-azurerm.dataAzurermCognitiveAccount": {},
        "@cdktf/provider-azurerm.dataAzurermConfidentialLedger": {},
        "@cdktf/provider-azurerm.dataAzurermConsumptionBudgetResourceGroup": {},
        "@cdktf/provider-azurerm.dataAzurermConsumptionBudgetSubscription": {},
        "@cdktf/provider-azurerm.dataAzurermContainerGroup": {},
        "@cdktf/provider-azurerm.dataAzurermContainerRegistry": {},
        "@cdktf/provider-azurerm.dataAzurermContainerRegistryScopeMap": {},
        "@cdktf/provider-azurerm.dataAzurermContainerRegistryToken": {},
        "@cdktf/provider-azurerm.dataAzurermCosmosdbAccount": {},
        "@cdktf/provider-azurerm.dataAzurermCosmosdbMongoDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermCosmosdbRestorableDatabaseAccounts": {},
        "@cdktf/provider-azurerm.dataAzurermCosmosdbSqlDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermCosmosdbSqlRoleDefinition": {},
        "@cdktf/provider-azurerm.dataAzurermDataFactory": {},
        "@cdktf/provider-azurerm.dataAzurermDataProtectionBackupVault": {},
        "@cdktf/provider-azurerm.dataAzurermDataShare": {},
        "@cdktf/provider-azurerm.dataAzurermDataShareAccount": {},
        "@cdktf/provider-azurerm.dataAzurermDataShareDatasetBlobStorage": {},
        "@cdktf/provider-azurerm.dataAzurermDataShareDatasetDataLakeGen2": {},
        "@cdktf/provider-azurerm.dataAzurermDataShareDatasetKustoCluster": {},
        "@cdktf/provider-azurerm.dataAzurermDataShareDatasetKustoDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermDatabaseMigrationProject": {},
        "@cdktf/provider-azurerm.dataAzurermDatabaseMigrationService": {},
        "@cdktf/provider-azurerm.dataAzurermDatabricksWorkspace": {},
        "@cdktf/provider-azurerm.dataAzurermDatabricksWorkspacePrivateEndpointConnection": {},
        "@cdktf/provider-azurerm.dataAzurermDedicatedHost": {},
        "@cdktf/provider-azurerm.dataAzurermDedicatedHostGroup": {},
        "@cdktf/provider-azurerm.dataAzurermDevTestLab": {},
        "@cdktf/provider-azurerm.dataAzurermDevTestVirtualNetwork": {},
        "@cdktf/provider-azurerm.dataAzurermDigitalTwinsInstance": {},
        "@cdktf/provider-azurerm.dataAzurermDiskAccess": {},
        "@cdktf/provider-azurerm.dataAzurermDiskEncryptionSet": {},
        "@cdktf/provider-azurerm.dataAzurermDnsARecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsAaaaRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsCaaRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsCnameRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsMxRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsNsRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsPtrRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsSoaRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsSrvRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsTxtRecord": {},
        "@cdktf/provider-azurerm.dataAzurermDnsZone": {},
        "@cdktf/provider-azurerm.dataAzurermElasticCloudElasticsearch": {},
        "@cdktf/provider-azurerm.dataAzurermEventgridDomain": {},
        "@cdktf/provider-azurerm.dataAzurermEventgridDomainTopic": {},
        "@cdktf/provider-azurerm.dataAzurermEventgridSystemTopic": {},
        "@cdktf/provider-azurerm.dataAzurermEventgridTopic": {},
        "@cdktf/provider-azurerm.dataAzurermEventhub": {},
        "@cdktf/provider-azurerm.dataAzurermEventhubAuthorizationRule": {},
        "@cdktf/provider-azurerm.dataAzurermEventhubCluster": {},
        "@cdktf/provider-azurerm.dataAzurermEventhubConsumerGroup": {},
        "@cdktf/provider-azurerm.dataAzurermEventhubNamespace": {},
        "@cdktf/provider-azurerm.dataAzurermEventhubNamespaceAuthorizationRule": {},
        "@cdktf/provider-azurerm.dataAzurermExpressRouteCircuit": {},
        "@cdktf/provider-azurerm.dataAzurermExtendedLocations": {},
        "@cdktf/provider-azurerm.dataAzurermFirewall": {},
        "@cdktf/provider-azurerm.dataAzurermFirewallPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermFunctionApp": {},
        "@cdktf/provider-azurerm.dataAzurermFunctionAppHostKeys": {},
        "@cdktf/provider-azurerm.dataAzurermHdinsightCluster": {},
        "@cdktf/provider-azurerm.dataAzurermHealthcareDicomService": {},
        "@cdktf/provider-azurerm.dataAzurermHealthcareFhirService": {},
        "@cdktf/provider-azurerm.dataAzurermHealthcareMedtechService": {},
        "@cdktf/provider-azurerm.dataAzurermHealthcareService": {},
        "@cdktf/provider-azurerm.dataAzurermHealthcareWorkspace": {},
        "@cdktf/provider-azurerm.dataAzurermImage": {},
        "@cdktf/provider-azurerm.dataAzurermImages": {},
        "@cdktf/provider-azurerm.dataAzurermIothub": {},
        "@cdktf/provider-azurerm.dataAzurermIothubDps": {},
        "@cdktf/provider-azurerm.dataAzurermIothubDpsSharedAccessPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermIothubSharedAccessPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermIpGroup": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVault": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultAccessPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultCertificate": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultCertificateData": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultCertificateIssuer": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultEncryptedValue": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultKey": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultManagedHardwareSecurityModule": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultSecret": {},
        "@cdktf/provider-azurerm.dataAzurermKeyVaultSecrets": {},
        "@cdktf/provider-azurerm.dataAzurermKubernetesCluster": {},
        "@cdktf/provider-azurerm.dataAzurermKubernetesClusterNodePool": {},
        "@cdktf/provider-azurerm.dataAzurermKubernetesServiceVersions": {},
        "@cdktf/provider-azurerm.dataAzurermKustoCluster": {},
        "@cdktf/provider-azurerm.dataAzurermKustoDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermLb": {},
        "@cdktf/provider-azurerm.dataAzurermLbBackendAddressPool": {},
        "@cdktf/provider-azurerm.dataAzurermLbRule": {},
        "@cdktf/provider-azurerm.dataAzurermLinuxFunctionApp": {},
        "@cdktf/provider-azurerm.dataAzurermLinuxWebApp": {},
        "@cdktf/provider-azurerm.dataAzurermLocalNetworkGateway": {},
        "@cdktf/provider-azurerm.dataAzurermLogAnalyticsWorkspace": {},
        "@cdktf/provider-azurerm.dataAzurermLogicAppIntegrationAccount": {},
        "@cdktf/provider-azurerm.dataAzurermLogicAppStandard": {},
        "@cdktf/provider-azurerm.dataAzurermLogicAppWorkflow": {},
        "@cdktf/provider-azurerm.dataAzurermMachineLearningWorkspace": {},
        "@cdktf/provider-azurerm.dataAzurermMaintenanceConfiguration": {},
        "@cdktf/provider-azurerm.dataAzurermManagedApi": {},
        "@cdktf/provider-azurerm.dataAzurermManagedApplicationDefinition": {},
        "@cdktf/provider-azurerm.dataAzurermManagedDisk": {},
        "@cdktf/provider-azurerm.dataAzurermManagementGroup": {},
        "@cdktf/provider-azurerm.dataAzurermManagementGroupTemplateDeployment": {},
        "@cdktf/provider-azurerm.dataAzurermMapsAccount": {},
        "@cdktf/provider-azurerm.dataAzurermMariadbServer": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorActionGroup": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorDataCollectionEndpoint": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorDataCollectionRule": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorDiagnosticCategories": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorLogProfile": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorScheduledQueryRulesAlert": {},
        "@cdktf/provider-azurerm.dataAzurermMonitorScheduledQueryRulesLog": {},
        "@cdktf/provider-azurerm.dataAzurermMssqlDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermMssqlElasticpool": {},
        "@cdktf/provider-azurerm.dataAzurermMssqlManagedInstance": {},
        "@cdktf/provider-azurerm.dataAzurermMssqlServer": {},
        "@cdktf/provider-azurerm.dataAzurermMysqlFlexibleServer": {},
        "@cdktf/provider-azurerm.dataAzurermMysqlServer": {},
        "@cdktf/provider-azurerm.dataAzurermNatGateway": {},
        "@cdktf/provider-azurerm.dataAzurermNetappAccount": {},
        "@cdktf/provider-azurerm.dataAzurermNetappPool": {},
        "@cdktf/provider-azurerm.dataAzurermNetappSnapshot": {},
        "@cdktf/provider-azurerm.dataAzurermNetappSnapshotPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermNetappVolume": {},
        "@cdktf/provider-azurerm.dataAzurermNetworkDdosProtectionPlan": {},
        "@cdktf/provider-azurerm.dataAzurermNetworkInterface": {},
        "@cdktf/provider-azurerm.dataAzurermNetworkSecurityGroup": {},
        "@cdktf/provider-azurerm.dataAzurermNetworkServiceTags": {},
        "@cdktf/provider-azurerm.dataAzurermNetworkWatcher": {},
        "@cdktf/provider-azurerm.dataAzurermNotificationHub": {},
        "@cdktf/provider-azurerm.dataAzurermNotificationHubNamespace": {},
        "@cdktf/provider-azurerm.dataAzurermPlatformImage": {},
        "@cdktf/provider-azurerm.dataAzurermPolicyAssignment": {},
        "@cdktf/provider-azurerm.dataAzurermPolicyDefinition": {},
        "@cdktf/provider-azurerm.dataAzurermPolicySetDefinition": {},
        "@cdktf/provider-azurerm.dataAzurermPolicyVirtualMachineConfigurationAssignment": {},
        "@cdktf/provider-azurerm.dataAzurermPortalDashboard": {},
        "@cdktf/provider-azurerm.dataAzurermPostgresqlFlexibleServer": {},
        "@cdktf/provider-azurerm.dataAzurermPostgresqlServer": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsARecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsAaaaRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsCnameRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsMxRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsPtrRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsSoaRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsSrvRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsTxtRecord": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsZone": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateDnsZoneVirtualNetworkLink": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateEndpointConnection": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateLinkService": {},
        "@cdktf/provider-azurerm.dataAzurermPrivateLinkServiceEndpointConnections": {},
        "@cdktf/provider-azurerm.dataAzurermProximityPlacementGroup": {},
        "@cdktf/provider-azurerm.dataAzurermPublicIp": {},
        "@cdktf/provider-azurerm.dataAzurermPublicIpPrefix": {},
        "@cdktf/provider-azurerm.dataAzurermPublicIps": {},
        "@cdktf/provider-azurerm.dataAzurermPublicMaintenanceConfigurations": {},
        "@cdktf/provider-azurerm.dataAzurermRecoveryServicesVault": {},
        "@cdktf/provider-azurerm.dataAzurermRedisCache": {},
        "@cdktf/provider-azurerm.dataAzurermRedisEnterpriseDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermResourceGroup": {},
        "@cdktf/provider-azurerm.dataAzurermResourceGroupTemplateDeployment": {},
        "@cdktf/provider-azurerm.dataAzurermResources": {},
        "@cdktf/provider-azurerm.dataAzurermRoleDefinition": {},
        "@cdktf/provider-azurerm.dataAzurermRouteFilter": {},
        "@cdktf/provider-azurerm.dataAzurermRouteTable": {},
        "@cdktf/provider-azurerm.dataAzurermSearchService": {},
        "@cdktf/provider-azurerm.dataAzurermSentinelAlertRule": {},
        "@cdktf/provider-azurerm.dataAzurermSentinelAlertRuleTemplate": {},
        "@cdktf/provider-azurerm.dataAzurermServicePlan": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusNamespace": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusNamespaceAuthorizationRule": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusNamespaceDisasterRecoveryConfig": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusQueue": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusQueueAuthorizationRule": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusSubscription": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusTopic": {},
        "@cdktf/provider-azurerm.dataAzurermServicebusTopicAuthorizationRule": {},
        "@cdktf/provider-azurerm.dataAzurermSharedImage": {},
        "@cdktf/provider-azurerm.dataAzurermSharedImageGallery": {},
        "@cdktf/provider-azurerm.dataAzurermSharedImageVersion": {},
        "@cdktf/provider-azurerm.dataAzurermSharedImageVersions": {},
        "@cdktf/provider-azurerm.dataAzurermSignalrService": {},
        "@cdktf/provider-azurerm.dataAzurermSiteRecoveryFabric": {},
        "@cdktf/provider-azurerm.dataAzurermSiteRecoveryProtectionContainer": {},
        "@cdktf/provider-azurerm.dataAzurermSiteRecoveryReplicationPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermSnapshot": {},
        "@cdktf/provider-azurerm.dataAzurermSourceControlToken": {},
        "@cdktf/provider-azurerm.dataAzurermSpatialAnchorsAccount": {},
        "@cdktf/provider-azurerm.dataAzurermSpringCloudApp": {},
        "@cdktf/provider-azurerm.dataAzurermSpringCloudService": {},
        "@cdktf/provider-azurerm.dataAzurermSqlDatabase": {},
        "@cdktf/provider-azurerm.dataAzurermSqlManagedInstance": {},
        "@cdktf/provider-azurerm.dataAzurermSqlServer": {},
        "@cdktf/provider-azurerm.dataAzurermSshPublicKey": {},
        "@cdktf/provider-azurerm.dataAzurermStorageAccount": {},
        "@cdktf/provider-azurerm.dataAzurermStorageAccountBlobContainerSas": {},
        "@cdktf/provider-azurerm.dataAzurermStorageAccountSas": {},
        "@cdktf/provider-azurerm.dataAzurermStorageBlob": {},
        "@cdktf/provider-azurerm.dataAzurermStorageContainer": {},
        "@cdktf/provider-azurerm.dataAzurermStorageEncryptionScope": {},
        "@cdktf/provider-azurerm.dataAzurermStorageManagementPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermStorageShare": {},
        "@cdktf/provider-azurerm.dataAzurermStorageSync": {},
        "@cdktf/provider-azurerm.dataAzurermStorageSyncGroup": {},
        "@cdktf/provider-azurerm.dataAzurermStorageTableEntity": {},
        "@cdktf/provider-azurerm.dataAzurermStreamAnalyticsJob": {},
        "@cdktf/provider-azurerm.dataAzurermSubnet": {},
        "@cdktf/provider-azurerm.dataAzurermSubscription": {},
        "@cdktf/provider-azurerm.dataAzurermSubscriptionTemplateDeployment": {},
        "@cdktf/provider-azurerm.dataAzurermSubscriptions": {},
        "@cdktf/provider-azurerm.dataAzurermSynapseWorkspace": {},
        "@cdktf/provider-azurerm.dataAzurermTemplateSpecVersion": {},
        "@cdktf/provider-azurerm.dataAzurermTenantTemplateDeployment": {},
        "@cdktf/provider-azurerm.dataAzurermTrafficManagerGeographicalLocation": {},
        "@cdktf/provider-azurerm.dataAzurermTrafficManagerProfile": {},
        "@cdktf/provider-azurerm.dataAzurermUserAssignedIdentity": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualHub": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualMachine": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualMachineScaleSet": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualNetwork": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualNetworkGateway": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualNetworkGatewayConnection": {},
        "@cdktf/provider-azurerm.dataAzurermVirtualWan": {},
        "@cdktf/provider-azurerm.dataAzurermVmwarePrivateCloud": {},
        "@cdktf/provider-azurerm.dataAzurermVpnGateway": {},
        "@cdktf/provider-azurerm.dataAzurermWebApplicationFirewallPolicy": {},
        "@cdktf/provider-azurerm.dataAzurermWebPubsub": {},
        "@cdktf/provider-azurerm.dataAzurermWebPubsubPrivateLinkResource": {},
        "@cdktf/provider-azurerm.dataAzurermWindowsFunctionApp": {},
        "@cdktf/provider-azurerm.dataAzurermWindowsWebApp": {},
        "@cdktf/provider-azurerm.dataFactory": {},
        "@cdktf/provider-azurerm.dataFactoryCustomDataset": {},
        "@cdktf/provider-azurerm.dataFactoryDataFlow": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetAzureBlob": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetBinary": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetCosmosdbSqlapi": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetDelimitedText": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetHttp": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetJson": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetMysql": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetParquet": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetPostgresql": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetSnowflake": {},
        "@cdktf/provider-azurerm.dataFactoryDatasetSqlServerTable": {},
        "@cdktf/provider-azurerm.dataFactoryFlowletDataFlow": {},
        "@cdktf/provider-azurerm.dataFactoryIntegrationRuntimeAzure": {},
        "@cdktf/provider-azurerm.dataFactoryIntegrationRuntimeAzureSsis": {},
        "@cdktf/provider-azurerm.dataFactoryIntegrationRuntimeManaged": {},
        "@cdktf/provider-azurerm.dataFactoryIntegrationRuntimeSelfHosted": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedCustomService": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureBlobStorage": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureDatabricks": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureFileStorage": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureFunction": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureSearch": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureSqlDatabase": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceAzureTableStorage": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceCosmosdb": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceCosmosdbMongoapi": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceDataLakeStorageGen2": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceKeyVault": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceKusto": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceMysql": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceOdata": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceOdbc": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServicePostgresql": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceSftp": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceSnowflake": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceSqlServer": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceSynapse": {},
        "@cdktf/provider-azurerm.dataFactoryLinkedServiceWeb": {},
        "@cdktf/provider-azurerm.dataFactoryManagedPrivateEndpoint": {},
        "@cdktf/provider-azurerm.dataFactoryPipeline": {},
        "@cdktf/provider-azurerm.dataFactoryTriggerBlobEvent": {},
        "@cdktf/provider-azurerm.dataFactoryTriggerCustomEvent": {},
        "@cdktf/provider-azurerm.dataFactoryTriggerSchedule": {},
        "@cdktf/provider-azurerm.dataFactoryTriggerTumblingWindow": {},
        "@cdktf/provider-azurerm.dataProtectionBackupInstanceBlobStorage": {},
        "@cdktf/provider-azurerm.dataProtectionBackupInstanceDisk": {},
        "@cdktf/provider-azurerm.dataProtectionBackupInstancePostgresql": {},
        "@cdktf/provider-azurerm.dataProtectionBackupPolicyBlobStorage": {},
        "@cdktf/provider-azurerm.dataProtectionBackupPolicyDisk": {},
        "@cdktf/provider-azurerm.dataProtectionBackupPolicyPostgresql": {},
        "@cdktf/provider-azurerm.dataProtectionBackupVault": {},
        "@cdktf/provider-azurerm.dataProtectionResourceGuard": {},
        "@cdktf/provider-azurerm.dataShare": {},
        "@cdktf/provider-azurerm.dataShareAccount": {},
        "@cdktf/provider-azurerm.dataShareDatasetBlobStorage": {},
        "@cdktf/provider-azurerm.dataShareDatasetDataLakeGen2": {},
        "@cdktf/provider-azurerm.dataShareDatasetKustoCluster": {},
        "@cdktf/provider-azurerm.dataShareDatasetKustoDatabase": {},
        "@cdktf/provider-azurerm.databaseMigrationProject": {},
        "@cdktf/provider-azurerm.databaseMigrationService": {},
        "@cdktf/provider-azurerm.databoxEdgeDevice": {},
        "@cdktf/provider-azurerm.databoxEdgeOrder": {},
        "@cdktf/provider-azurerm.databricksAccessConnector": {},
        "@cdktf/provider-azurerm.databricksWorkspace": {},
        "@cdktf/provider-azurerm.databricksWorkspaceCustomerManagedKey": {},
        "@cdktf/provider-azurerm.datadogMonitor": {},
        "@cdktf/provider-azurerm.datadogMonitorSsoConfiguration": {},
        "@cdktf/provider-azurerm.datadogMonitorTagRule": {},
        "@cdktf/provider-azurerm.dedicatedHardwareSecurityModule": {},
        "@cdktf/provider-azurerm.dedicatedHost": {},
        "@cdktf/provider-azurerm.dedicatedHostGroup": {},
        "@cdktf/provider-azurerm.devTestGlobalVmShutdownSchedule": {},
        "@cdktf/provider-azurerm.devTestLab": {},
        "@cdktf/provider-azurerm.devTestLinuxVirtualMachine": {},
        "@cdktf/provider-azurerm.devTestPolicy": {},
        "@cdktf/provider-azurerm.devTestSchedule": {},
        "@cdktf/provider-azurerm.devTestVirtualNetwork": {},
        "@cdktf/provider-azurerm.devTestWindowsVirtualMachine": {},
        "@cdktf/provider-azurerm.digitalTwinsEndpointEventgrid": {},
        "@cdktf/provider-azurerm.digitalTwinsEndpointEventhub": {},
        "@cdktf/provider-azurerm.digitalTwinsEndpointServicebus": {},
        "@cdktf/provider-azurerm.digitalTwinsInstance": {},
        "@cdktf/provider-azurerm.diskAccess": {},
        "@cdktf/provider-azurerm.diskEncryptionSet": {},
        "@cdktf/provider-azurerm.diskPool": {},
        "@cdktf/provider-azurerm.diskPoolIscsiTarget": {},
        "@cdktf/provider-azurerm.diskPoolIscsiTargetLun": {},
        "@cdktf/provider-azurerm.diskPoolManagedDiskAttachment": {},
        "@cdktf/provider-azurerm.dnsARecord": {},
        "@cdktf/provider-azurerm.dnsAaaaRecord": {},
        "@cdktf/provider-azurerm.dnsCaaRecord": {},
        "@cdktf/provider-azurerm.dnsCnameRecord": {},
        "@cdktf/provider-azurerm.dnsMxRecord": {},
        "@cdktf/provider-azurerm.dnsNsRecord": {},
        "@cdktf/provider-azurerm.dnsPtrRecord": {},
        "@cdktf/provider-azurerm.dnsSrvRecord": {},
        "@cdktf/provider-azurerm.dnsTxtRecord": {},
        "@cdktf/provider-azurerm.dnsZone": {},
        "@cdktf/provider-azurerm.elasticCloudElasticsearch": {},
        "@cdktf/provider-azurerm.eventgridDomain": {},
        "@cdktf/provider-azurerm.eventgridDomainTopic": {},
        "@cdktf/provider-azurerm.eventgridEventSubscription": {},
        "@cdktf/provider-azurerm.eventgridSystemTopic": {},
        "@cdktf/provider-azurerm.eventgridSystemTopicEventSubscription": {},
        "@cdktf/provider-azurerm.eventgridTopic": {},
        "@cdktf/provider-azurerm.eventhub": {},
        "@cdktf/provider-azurerm.eventhubAuthorizationRule": {},
        "@cdktf/provider-azurerm.eventhubCluster": {},
        "@cdktf/provider-azurerm.eventhubConsumerGroup": {},
        "@cdktf/provider-azurerm.eventhubNamespace": {},
        "@cdktf/provider-azurerm.eventhubNamespaceAuthorizationRule": {},
        "@cdktf/provider-azurerm.eventhubNamespaceCustomerManagedKey": {},
        "@cdktf/provider-azurerm.eventhubNamespaceDisasterRecoveryConfig": {},
        "@cdktf/provider-azurerm.eventhubNamespaceSchemaGroup": {},
        "@cdktf/provider-azurerm.expressRouteCircuit": {},
        "@cdktf/provider-azurerm.expressRouteCircuitAuthorization": {},
        "@cdktf/provider-azurerm.expressRouteCircuitConnection": {},
        "@cdktf/provider-azurerm.expressRouteCircuitPeering": {},
        "@cdktf/provider-azurerm.expressRouteConnection": {},
        "@cdktf/provider-azurerm.expressRouteGateway": {},
        "@cdktf/provider-azurerm.expressRoutePort": {},
        "@cdktf/provider-azurerm.federatedIdentityCredential": {},
        "@cdktf/provider-azurerm.firewall": {},
        "@cdktf/provider-azurerm.firewallApplicationRuleCollection": {},
        "@cdktf/provider-azurerm.firewallNatRuleCollection": {},
        "@cdktf/provider-azurerm.firewallNetworkRuleCollection": {},
        "@cdktf/provider-azurerm.firewallPolicy": {},
        "@cdktf/provider-azurerm.firewallPolicyRuleCollectionGroup": {},
        "@cdktf/provider-azurerm.fluidRelayServer": {},
        "@cdktf/provider-azurerm.frontdoor": {},
        "@cdktf/provider-azurerm.frontdoorCustomHttpsConfiguration": {},
        "@cdktf/provider-azurerm.frontdoorFirewallPolicy": {},
        "@cdktf/provider-azurerm.frontdoorRulesEngine": {},
        "@cdktf/provider-azurerm.functionApp": {},
        "@cdktf/provider-azurerm.functionAppActiveSlot": {},
        "@cdktf/provider-azurerm.functionAppFunction": {},
        "@cdktf/provider-azurerm.functionAppHybridConnection": {},
        "@cdktf/provider-azurerm.functionAppSlot": {},
        "@cdktf/provider-azurerm.galleryApplication": {},
        "@cdktf/provider-azurerm.galleryApplicationVersion": {},
        "@cdktf/provider-azurerm.hdinsightHadoopCluster": {},
        "@cdktf/provider-azurerm.hdinsightHbaseCluster": {},
        "@cdktf/provider-azurerm.hdinsightInteractiveQueryCluster": {},
        "@cdktf/provider-azurerm.hdinsightKafkaCluster": {},
        "@cdktf/provider-azurerm.hdinsightSparkCluster": {},
        "@cdktf/provider-azurerm.healthbot": {},
        "@cdktf/provider-azurerm.healthcareDicomService": {},
        "@cdktf/provider-azurerm.healthcareFhirService": {},
        "@cdktf/provider-azurerm.healthcareMedtechService": {},
        "@cdktf/provider-azurerm.healthcareMedtechServiceFhirDestination": {},
        "@cdktf/provider-azurerm.healthcareService": {},
        "@cdktf/provider-azurerm.healthcareWorkspace": {},
        "@cdktf/provider-azurerm.hpcCache": {},
        "@cdktf/provider-azurerm.hpcCacheAccessPolicy": {},
        "@cdktf/provider-azurerm.hpcCacheBlobNfsTarget": {},
        "@cdktf/provider-azurerm.hpcCacheBlobTarget": {},
        "@cdktf/provider-azurerm.hpcCacheNfsTarget": {},
        "@cdktf/provider-azurerm.image": {},
        "@cdktf/provider-azurerm.integrationServiceEnvironment": {},
        "@cdktf/provider-azurerm.iotSecurityDeviceGroup": {},
        "@cdktf/provider-azurerm.iotSecuritySolution": {},
        "@cdktf/provider-azurerm.iotTimeSeriesInsightsAccessPolicy": {},
        "@cdktf/provider-azurerm.iotTimeSeriesInsightsEventSourceEventhub": {},
        "@cdktf/provider-azurerm.iotTimeSeriesInsightsEventSourceIothub": {},
        "@cdktf/provider-azurerm.iotTimeSeriesInsightsGen2Environment": {},
        "@cdktf/provider-azurerm.iotTimeSeriesInsightsReferenceDataSet": {},
        "@cdktf/provider-azurerm.iotTimeSeriesInsightsStandardEnvironment": {},
        "@cdktf/provider-azurerm.iotcentralApplication": {},
        "@cdktf/provider-azurerm.iotcentralApplicationNetworkRuleSet": {},
        "@cdktf/provider-azurerm.iothub": {},
        "@cdktf/provider-azurerm.iothubCertificate": {},
        "@cdktf/provider-azurerm.iothubConsumerGroup": {},
        "@cdktf/provider-azurerm.iothubDeviceUpdateAccount": {},
        "@cdktf/provider-azurerm.iothubDeviceUpdateInstance": {},
        "@cdktf/provider-azurerm.iothubDps": {},
        "@cdktf/provider-azurerm.iothubDpsCertificate": {},
        "@cdktf/provider-azurerm.iothubDpsSharedAccessPolicy": {},
        "@cdktf/provider-azurerm.iothubEndpointEventhub": {},
        "@cdktf/provider-azurerm.iothubEndpointServicebusQueue": {},
        "@cdktf/provider-azurerm.iothubEndpointServicebusTopic": {},
        "@cdktf/provider-azurerm.iothubEndpointStorageContainer": {},
        "@cdktf/provider-azurerm.iothubEnrichment": {},
        "@cdktf/provider-azurerm.iothubFallbackRoute": {},
        "@cdktf/provider-azurerm.iothubRoute": {},
        "@cdktf/provider-azurerm.iothubSharedAccessPolicy": {},
        "@cdktf/provider-azurerm.ipGroup": {},
        "@cdktf/provider-azurerm.keyVault": {},
        "@cdktf/provider-azurerm.keyVaultAccessPolicy": {},
        "@cdktf/provider-azurerm.keyVaultCertificate": {},
        "@cdktf/provider-azurerm.keyVaultCertificateIssuer": {},
        "@cdktf/provider-azurerm.keyVaultKey": {},
        "@cdktf/provider-azurerm.keyVaultManagedHardwareSecurityModule": {},
        "@cdktf/provider-azurerm.keyVaultManagedStorageAccount": {},
        "@cdktf/provider-azurerm.keyVaultManagedStorageAccountSasTokenDefinition": {},
        "@cdktf/provider-azurerm.keyVaultSecret": {},
        "@cdktf/provider-azurerm.kubernetesCluster": {},
        "@cdktf/provider-azurerm.kubernetesClusterNodePool": {},
        "@cdktf/provider-azurerm.kubernetesFleetManager": {},
        "@cdktf/provider-azurerm.kustoAttachedDatabaseConfiguration": {},
        "@cdktf/provider-azurerm.kustoCluster": {},
        "@cdktf/provider-azurerm.kustoClusterCustomerManagedKey": {},
        "@cdktf/provider-azurerm.kustoClusterManagedPrivateEndpoint": {},
        "@cdktf/provider-azurerm.kustoClusterPrincipalAssignment": {},
        "@cdktf/provider-azurerm.kustoDatabase": {},
        "@cdktf/provider-azurerm.kustoDatabasePrincipalAssignment": {},
        "@cdktf/provider-azurerm.kustoEventgridDataConnection": {},
        "@cdktf/provider-azurerm.kustoEventhubDataConnection": {},
        "@cdktf/provider-azurerm.kustoIothubDataConnection": {},
        "@cdktf/provider-azurerm.kustoScript": {},
        "@cdktf/provider-azurerm.lb": {},
        "@cdktf/provider-azurerm.lbBackendAddressPool": {},
        "@cdktf/provider-azurerm.lbBackendAddressPoolAddress": {},
        "@cdktf/provider-azurerm.lbNatPool": {},
        "@cdktf/provider-azurerm.lbNatRule": {},
        "@cdktf/provider-azurerm.lbOutboundRule": {},
        "@cdktf/provider-azurerm.lbProbe": {},
        "@cdktf/provider-azurerm.lbRule": {},
        "@cdktf/provider-azurerm.lighthouseAssignment": {},
        "@cdktf/provider-azurerm.lighthouseDefinition": {},
        "@cdktf/provider-azurerm.linuxFunctionApp": {},
        "@cdktf/provider-azurerm.linuxFunctionAppSlot": {},
        "@cdktf/provider-azurerm.linuxVirtualMachine": {},
        "@cdktf/provider-azurerm.linuxVirtualMachineScaleSet": {},
        "@cdktf/provider-azurerm.linuxWebApp": {},
        "@cdktf/provider-azurerm.linuxWebAppSlot": {},
        "@cdktf/provider-azurerm.loadTest": {},
        "@cdktf/provider-azurerm.localNetworkGateway": {},
        "@cdktf/provider-azurerm.logAnalyticsCluster": {},
        "@cdktf/provider-azurerm.logAnalyticsClusterCustomerManagedKey": {},
        "@cdktf/provider-azurerm.logAnalyticsDataExportRule": {},
        "@cdktf/provider-azurerm.logAnalyticsDatasourceWindowsEvent": {},
        "@cdktf/provider-azurerm.logAnalyticsDatasourceWindowsPerformanceCounter": {},
        "@cdktf/provider-azurerm.logAnalyticsLinkedService": {},
        "@cdktf/provider-azurerm.logAnalyticsLinkedStorageAccount": {},
        "@cdktf/provider-azurerm.logAnalyticsQueryPack": {},
        "@cdktf/provider-azurerm.logAnalyticsQueryPackQuery": {},
        "@cdktf/provider-azurerm.logAnalyticsSavedSearch": {},
        "@cdktf/provider-azurerm.logAnalyticsSolution": {},
        "@cdktf/provider-azurerm.logAnalyticsStorageInsights": {},
        "@cdktf/provider-azurerm.logAnalyticsWorkspace": {},
        "@cdktf/provider-azurerm.logicAppActionCustom": {},
        "@cdktf/provider-azurerm.logicAppActionHttp": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccount": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountAgreement": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountAssembly": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountBatchConfiguration": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountCertificate": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountMap": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountPartner": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountSchema": {},
        "@cdktf/provider-azurerm.logicAppIntegrationAccountSession": {},
        "@cdktf/provider-azurerm.logicAppStandard": {},
        "@cdktf/provider-azurerm.logicAppTriggerCustom": {},
        "@cdktf/provider-azurerm.logicAppTriggerHttpRequest": {},
        "@cdktf/provider-azurerm.logicAppTriggerRecurrence": {},
        "@cdktf/provider-azurerm.logicAppWorkflow": {},
        "@cdktf/provider-azurerm.logzMonitor": {},
        "@cdktf/provider-azurerm.logzSubAccount": {},
        "@cdktf/provider-azurerm.logzSubAccountTagRule": {},
        "@cdktf/provider-azurerm.logzTagRule": {},
        "@cdktf/provider-azurerm.machineLearningComputeCluster": {},
        "@cdktf/provider-azurerm.machineLearningComputeInstance": {},
        "@cdktf/provider-azurerm.machineLearningInferenceCluster": {},
        "@cdktf/provider-azurerm.machineLearningSynapseSpark": {},
        "@cdktf/provider-azurerm.machineLearningWorkspace": {},
        "@cdktf/provider-azurerm.maintenanceAssignmentDedicatedHost": {},
        "@cdktf/provider-azurerm.maintenanceAssignmentVirtualMachine": {},
        "@cdktf/provider-azurerm.maintenanceAssignmentVirtualMachineScaleSet": {},
        "@cdktf/provider-azurerm.maintenanceConfiguration": {},
        "@cdktf/provider-azurerm.managedApplication": {},
        "@cdktf/provider-azurerm.managedApplicationDefinition": {},
        "@cdktf/provider-azurerm.managedDisk": {},
        "@cdktf/provider-azurerm.managedDiskSasToken": {},
        "@cdktf/provider-azurerm.managementGroup": {},
        "@cdktf/provider-azurerm.managementGroupPolicyAssignment": {},
        "@cdktf/provider-azurerm.managementGroupPolicyExemption": {},
        "@cdktf/provider-azurerm.managementGroupPolicyRemediation": {},
        "@cdktf/provider-azurerm.managementGroupSubscriptionAssociation": {},
        "@cdktf/provider-azurerm.managementGroupTemplateDeployment": {},
        "@cdktf/provider-azurerm.managementLock": {},
        "@cdktf/provider-azurerm.mapsAccount": {},
        "@cdktf/provider-azurerm.mapsCreator": {},
        "@cdktf/provider-azurerm.mariadbConfiguration": {},
        "@cdktf/provider-azurerm.mariadbDatabase": {},
        "@cdktf/provider-azurerm.mariadbFirewallRule": {},
        "@cdktf/provider-azurerm.mariadbServer": {},
        "@cdktf/provider-azurerm.mariadbVirtualNetworkRule": {},
        "@cdktf/provider-azurerm.marketplaceAgreement": {},
        "@cdktf/provider-azurerm.mediaAsset": {},
        "@cdktf/provider-azurerm.mediaAssetFilter": {},
        "@cdktf/provider-azurerm.mediaContentKeyPolicy": {},
        "@cdktf/provider-azurerm.mediaJob": {},
        "@cdktf/provider-azurerm.mediaLiveEvent": {},
        "@cdktf/provider-azurerm.mediaLiveEventOutput": {},
        "@cdktf/provider-azurerm.mediaServicesAccount": {},
        "@cdktf/provider-azurerm.mediaStreamingEndpoint": {},
        "@cdktf/provider-azurerm.mediaStreamingLocator": {},
        "@cdktf/provider-azurerm.mediaStreamingPolicy": {},
        "@cdktf/provider-azurerm.mediaTransform": {},
        "@cdktf/provider-azurerm.monitorAadDiagnosticSetting": {},
        "@cdktf/provider-azurerm.monitorActionGroup": {},
        "@cdktf/provider-azurerm.monitorActionRuleActionGroup": {},
        "@cdktf/provider-azurerm.monitorActionRuleSuppression": {},
        "@cdktf/provider-azurerm.monitorActivityLogAlert": {},
        "@cdktf/provider-azurerm.monitorAlertProcessingRuleActionGroup": {},
        "@cdktf/provider-azurerm.monitorAlertProcessingRuleSuppression": {},
        "@cdktf/provider-azurerm.monitorAutoscaleSetting": {},
        "@cdktf/provider-azurerm.monitorDataCollectionEndpoint": {},
        "@cdktf/provider-azurerm.monitorDataCollectionRule": {},
        "@cdktf/provider-azurerm.monitorDataCollectionRuleAssociation": {},
        "@cdktf/provider-azurerm.monitorDiagnosticSetting": {},
        "@cdktf/provider-azurerm.monitorLogProfile": {},
        "@cdktf/provider-azurerm.monitorMetricAlert": {},
        "@cdktf/provider-azurerm.monitorPrivateLinkScope": {},
        "@cdktf/provider-azurerm.monitorPrivateLinkScopedService": {},
        "@cdktf/provider-azurerm.monitorScheduledQueryRulesAlert": {},
        "@cdktf/provider-azurerm.monitorScheduledQueryRulesAlertV2": {},
        "@cdktf/provider-azurerm.monitorScheduledQueryRulesLog": {},
        "@cdktf/provider-azurerm.monitorSmartDetectorAlertRule": {},
        "@cdktf/provider-azurerm.mssqlDatabase": {},
        "@cdktf/provider-azurerm.mssqlDatabaseExtendedAuditingPolicy": {},
        "@cdktf/provider-azurerm.mssqlDatabaseVulnerabilityAssessmentRuleBaseline": {},
        "@cdktf/provider-azurerm.mssqlElasticpool": {},
        "@cdktf/provider-azurerm.mssqlFailoverGroup": {},
        "@cdktf/provider-azurerm.mssqlFirewallRule": {},
        "@cdktf/provider-azurerm.mssqlJobAgent": {},
        "@cdktf/provider-azurerm.mssqlJobCredential": {},
        "@cdktf/provider-azurerm.mssqlManagedDatabase": {},
        "@cdktf/provider-azurerm.mssqlManagedInstance": {},
        "@cdktf/provider-azurerm.mssqlManagedInstanceActiveDirectoryAdministrator": {},
        "@cdktf/provider-azurerm.mssqlManagedInstanceFailoverGroup": {},
        "@cdktf/provider-azurerm.mssqlManagedInstanceSecurityAlertPolicy": {},
        "@cdktf/provider-azurerm.mssqlManagedInstanceVulnerabilityAssessment": {},
        "@cdktf/provider-azurerm.mssqlOutboundFirewallRule": {},
        "@cdktf/provider-azurerm.mssqlServer": {},
        "@cdktf/provider-azurerm.mssqlServerDnsAlias": {},
        "@cdktf/provider-azurerm.mssqlServerExtendedAuditingPolicy": {},
        "@cdktf/provider-azurerm.mssqlServerMicrosoftSupportAuditingPolicy": {},
        "@cdktf/provider-azurerm.mssqlServerSecurityAlertPolicy": {},
        "@cdktf/provider-azurerm.mssqlServerTransparentDataEncryption": {},
        "@cdktf/provider-azurerm.mssqlServerVulnerabilityAssessment": {},
        "@cdktf/provider-azurerm.mssqlVirtualMachine": {},
        "@cdktf/provider-azurerm.mssqlVirtualNetworkRule": {},
        "@cdktf/provider-azurerm.mysqlActiveDirectoryAdministrator": {},
        "@cdktf/provider-azurerm.mysqlConfiguration": {},
        "@cdktf/provider-azurerm.mysqlDatabase": {},
        "@cdktf/provider-azurerm.mysqlFirewallRule": {},
        "@cdktf/provider-azurerm.mysqlFlexibleDatabase": {},
        "@cdktf/provider-azurerm.mysqlFlexibleServer": {},
        "@cdktf/provider-azurerm.mysqlFlexibleServerConfiguration": {},
        "@cdktf/provider-azurerm.mysqlFlexibleServerFirewallRule": {},
        "@cdktf/provider-azurerm.mysqlServer": {},
        "@cdktf/provider-azurerm.mysqlServerKey": {},
        "@cdktf/provider-azurerm.mysqlVirtualNetworkRule": {},
        "@cdktf/provider-azurerm.natGateway": {},
        "@cdktf/provider-azurerm.natGatewayPublicIpAssociation": {},
        "@cdktf/provider-azurerm.natGatewayPublicIpPrefixAssociation": {},
        "@cdktf/provider-azurerm.netappAccount": {},
        "@cdktf/provider-azurerm.netappPool": {},
        "@cdktf/provider-azurerm.netappSnapshot": {},
        "@cdktf/provider-azurerm.netappSnapshotPolicy": {},
        "@cdktf/provider-azurerm.netappVolume": {},
        "@cdktf/provider-azurerm.networkConnectionMonitor": {},
        "@cdktf/provider-azurerm.networkDdosProtectionPlan": {},
        "@cdktf/provider-azurerm.networkInterface": {},
        "@cdktf/provider-azurerm.networkInterfaceApplicationGatewayBackendAddressPoolAssociation": {},
        "@cdktf/provider-azurerm.networkInterfaceApplicationSecurityGroupAssociation": {},
        "@cdktf/provider-azurerm.networkInterfaceBackendAddressPoolAssociation": {},
        "@cdktf/provider-azurerm.networkInterfaceNatRuleAssociation": {},
        "@cdktf/provider-azurerm.networkInterfaceSecurityGroupAssociation": {},
        "@cdktf/provider-azurerm.networkPacketCapture": {},
        "@cdktf/provider-azurerm.networkProfile": {},
        "@cdktf/provider-azurerm.networkSecurityGroup": {},
        "@cdktf/provider-azurerm.networkSecurityRule": {},
        "@cdktf/provider-azurerm.networkWatcher": {},
        "@cdktf/provider-azurerm.networkWatcherFlowLog": {},
        "@cdktf/provider-azurerm.nginxCertificate": {},
        "@cdktf/provider-azurerm.nginxConfiguration": {},
        "@cdktf/provider-azurerm.nginxDeployment": {},
        "@cdktf/provider-azurerm.notificationHub": {},
        "@cdktf/provider-azurerm.notificationHubAuthorizationRule": {},
        "@cdktf/provider-azurerm.notificationHubNamespace": {},
        "@cdktf/provider-azurerm.orbitalContactProfile": {},
        "@cdktf/provider-azurerm.orbitalSpacecraft": {},
        "@cdktf/provider-azurerm.orchestratedVirtualMachineScaleSet": {},
        "@cdktf/provider-azurerm.pointToSiteVpnGateway": {},
        "@cdktf/provider-azurerm.policyDefinition": {},
        "@cdktf/provider-azurerm.policySetDefinition": {},
        "@cdktf/provider-azurerm.policyVirtualMachineConfigurationAssignment": {},
        "@cdktf/provider-azurerm.portalDashboard": {},
        "@cdktf/provider-azurerm.portalTenantConfiguration": {},
        "@cdktf/provider-azurerm.postgresqlActiveDirectoryAdministrator": {},
        "@cdktf/provider-azurerm.postgresqlConfiguration": {},
        "@cdktf/provider-azurerm.postgresqlDatabase": {},
        "@cdktf/provider-azurerm.postgresqlFirewallRule": {},
        "@cdktf/provider-azurerm.postgresqlFlexibleServer": {},
        "@cdktf/provider-azurerm.postgresqlFlexibleServerConfiguration": {},
        "@cdktf/provider-azurerm.postgresqlFlexibleServerDatabase": {},
        "@cdktf/provider-azurerm.postgresqlFlexibleServerFirewallRule": {},
        "@cdktf/provider-azurerm.postgresqlServer": {},
        "@cdktf/provider-azurerm.postgresqlServerKey": {},
        "@cdktf/provider-azurerm.postgresqlVirtualNetworkRule": {},
        "@cdktf/provider-azurerm.powerbiEmbedded": {},
        "@cdktf/provider-azurerm.privateDnsARecord": {},
        "@cdktf/provider-azurerm.privateDnsAaaaRecord": {},
        "@cdktf/provider-azurerm.privateDnsCnameRecord": {},
        "@cdktf/provider-azurerm.privateDnsMxRecord": {},
        "@cdktf/provider-azurerm.privateDnsPtrRecord": {},
        "@cdktf/provider-azurerm.privateDnsResolver": {},
        "@cdktf/provider-azurerm.privateDnsResolverDnsForwardingRuleset": {},
        "@cdktf/provider-azurerm.privateDnsResolverForwardingRule": {},
        "@cdktf/provider-azurerm.privateDnsResolverInboundEndpoint": {},
        "@cdktf/provider-azurerm.privateDnsResolverOutboundEndpoint": {},
        "@cdktf/provider-azurerm.privateDnsResolverVirtualNetworkLink": {},
        "@cdktf/provider-azurerm.privateDnsSrvRecord": {},
        "@cdktf/provider-azurerm.privateDnsTxtRecord": {},
        "@cdktf/provider-azurerm.privateDnsZone": {},
        "@cdktf/provider-azurerm.privateDnsZoneVirtualNetworkLink": {},
        "@cdktf/provider-azurerm.privateEndpoint": {},
        "@cdktf/provider-azurerm.privateLinkService": {},
        "@cdktf/provider-azurerm.provider": {},
        "@cdktf/provider-azurerm.proximityPlacementGroup": {},
        "@cdktf/provider-azurerm.publicIp": {},
        "@cdktf/provider-azurerm.publicIpPrefix": {},
        "@cdktf/provider-azurerm.purviewAccount": {},
        "@cdktf/provider-azurerm.recoveryServicesVault": {},
        "@cdktf/provider-azurerm.redisCache": {},
        "@cdktf/provider-azurerm.redisEnterpriseCluster": {},
        "@cdktf/provider-azurerm.redisEnterpriseDatabase": {},
        "@cdktf/provider-azurerm.redisFirewallRule": {},
        "@cdktf/provider-azurerm.redisLinkedServer": {},
        "@cdktf/provider-azurerm.relayHybridConnection": {},
        "@cdktf/provider-azurerm.relayHybridConnectionAuthorizationRule": {},
        "@cdktf/provider-azurerm.relayNamespace": {},
        "@cdktf/provider-azurerm.relayNamespaceAuthorizationRule": {},
        "@cdktf/provider-azurerm.resourceGroup": {},
        "@cdktf/provider-azurerm.resourceGroupCostManagementExport": {},
        "@cdktf/provider-azurerm.resourceGroupPolicyAssignment": {},
        "@cdktf/provider-azurerm.resourceGroupPolicyExemption": {},
        "@cdktf/provider-azurerm.resourceGroupPolicyRemediation": {},
        "@cdktf/provider-azurerm.resourceGroupTemplateDeployment": {},
        "@cdktf/provider-azurerm.resourcePolicyAssignment": {},
        "@cdktf/provider-azurerm.resourcePolicyExemption": {},
        "@cdktf/provider-azurerm.resourcePolicyRemediation": {},
        "@cdktf/provider-azurerm.resourceProviderRegistration": {},
        "@cdktf/provider-azurerm.roleAssignment": {},
        "@cdktf/provider-azurerm.roleDefinition": {},
        "@cdktf/provider-azurerm.route": {},
        "@cdktf/provider-azurerm.routeFilter": {},
        "@cdktf/provider-azurerm.routeServer": {},
        "@cdktf/provider-azurerm.routeServerBgpConnection": {},
        "@cdktf/provider-azurerm.routeTable": {},
        "@cdktf/provider-azurerm.searchService": {},
        "@cdktf/provider-azurerm.searchSharedPrivateLinkService": {},
        "@cdktf/provider-azurerm.securityCenterAssessment": {},
        "@cdktf/provider-azurerm.securityCenterAssessmentPolicy": {},
        "@cdktf/provider-azurerm.securityCenterAutoProvisioning": {},
        "@cdktf/provider-azurerm.securityCenterAutomation": {},
        "@cdktf/provider-azurerm.securityCenterContact": {},
        "@cdktf/provider-azurerm.securityCenterServerVulnerabilityAssessment": {},
        "@cdktf/provider-azurerm.securityCenterServerVulnerabilityAssessmentVirtualMachine": {},
        "@cdktf/provider-azurerm.securityCenterSetting": {},
        "@cdktf/provider-azurerm.securityCenterSubscriptionPricing": {},
        "@cdktf/provider-azurerm.securityCenterWorkspace": {},
        "@cdktf/provider-azurerm.sentinelAlertRuleFusion": {},
        "@cdktf/provider-azurerm.sentinelAlertRuleMachineLearningBehaviorAnalytics": {},
        "@cdktf/provider-azurerm.sentinelAlertRuleMsSecurityIncident": {},
        "@cdktf/provider-azurerm.sentinelAlertRuleNrt": {},
        "@cdktf/provider-azurerm.sentinelAlertRuleScheduled": {},
        "@cdktf/provider-azurerm.sentinelAutomationRule": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorAwsCloudTrail": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorAwsS3": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorAzureActiveDirectory": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorAzureAdvancedThreatProtection": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorAzureSecurityCenter": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorDynamics365": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorIot": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorMicrosoftCloudAppSecurity": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorMicrosoftDefenderAdvancedThreatProtection": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorOffice365": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorOffice365Project": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorOfficeAtp": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorOfficeIrm": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorOfficePowerBi": {},
        "@cdktf/provider-azurerm.sentinelDataConnectorThreatIntelligence": {},
        "@cdktf/provider-azurerm.sentinelWatchlist": {},
        "@cdktf/provider-azurerm.sentinelWatchlistItem": {},
        "@cdktf/provider-azurerm.serviceFabricCluster": {},
        "@cdktf/provider-azurerm.serviceFabricManagedCluster": {},
        "@cdktf/provider-azurerm.servicePlan": {},
        "@cdktf/provider-azurerm.servicebusNamespace": {},
        "@cdktf/provider-azurerm.servicebusNamespaceAuthorizationRule": {},
        "@cdktf/provider-azurerm.servicebusNamespaceDisasterRecoveryConfig": {},
        "@cdktf/provider-azurerm.servicebusNamespaceNetworkRuleSet": {},
        "@cdktf/provider-azurerm.servicebusQueue": {},
        "@cdktf/provider-azurerm.servicebusQueueAuthorizationRule": {},
        "@cdktf/provider-azurerm.servicebusSubscription": {},
        "@cdktf/provider-azurerm.servicebusSubscriptionRule": {},
        "@cdktf/provider-azurerm.servicebusTopic": {},
        "@cdktf/provider-azurerm.servicebusTopicAuthorizationRule": {},
        "@cdktf/provider-azurerm.sharedImage": {},
        "@cdktf/provider-azurerm.sharedImageGallery": {},
        "@cdktf/provider-azurerm.sharedImageVersion": {},
        "@cdktf/provider-azurerm.signalrService": {},
        "@cdktf/provider-azurerm.signalrServiceNetworkAcl": {},
        "@cdktf/provider-azurerm.signalrSharedPrivateLinkResource": {},
        "@cdktf/provider-azurerm.siteRecoveryFabric": {},
        "@cdktf/provider-azurerm.siteRecoveryNetworkMapping": {},
        "@cdktf/provider-azurerm.siteRecoveryProtectionContainer": {},
        "@cdktf/provider-azurerm.siteRecoveryProtectionContainerMapping": {},
        "@cdktf/provider-azurerm.siteRecoveryReplicatedVm": {},
        "@cdktf/provider-azurerm.siteRecoveryReplicationPolicy": {},
        "@cdktf/provider-azurerm.snapshot": {},
        "@cdktf/provider-azurerm.sourceControlToken": {},
        "@cdktf/provider-azurerm.spatialAnchorsAccount": {},
        "@cdktf/provider-azurerm.springCloudActiveDeployment": {},
        "@cdktf/provider-azurerm.springCloudApiPortal": {},
        "@cdktf/provider-azurerm.springCloudApiPortalCustomDomain": {},
        "@cdktf/provider-azurerm.springCloudApp": {},
        "@cdktf/provider-azurerm.springCloudAppCosmosdbAssociation": {},
        "@cdktf/provider-azurerm.springCloudAppMysqlAssociation": {},
        "@cdktf/provider-azurerm.springCloudAppRedisAssociation": {},
        "@cdktf/provider-azurerm.springCloudBuildDeployment": {},
        "@cdktf/provider-azurerm.springCloudBuildPackBinding": {},
        "@cdktf/provider-azurerm.springCloudBuilder": {},
        "@cdktf/provider-azurerm.springCloudCertificate": {},
        "@cdktf/provider-azurerm.springCloudConfigurationService": {},
        "@cdktf/provider-azurerm.springCloudConnection": {},
        "@cdktf/provider-azurerm.springCloudContainerDeployment": {},
        "@cdktf/provider-azurerm.springCloudCustomDomain": {},
        "@cdktf/provider-azurerm.springCloudGateway": {},
        "@cdktf/provider-azurerm.springCloudGatewayCustomDomain": {},
        "@cdktf/provider-azurerm.springCloudGatewayRouteConfig": {},
        "@cdktf/provider-azurerm.springCloudJavaDeployment": {},
        "@cdktf/provider-azurerm.springCloudService": {},
        "@cdktf/provider-azurerm.springCloudStorage": {},
        "@cdktf/provider-azurerm.sqlActiveDirectoryAdministrator": {},
        "@cdktf/provider-azurerm.sqlDatabase": {},
        "@cdktf/provider-azurerm.sqlElasticpool": {},
        "@cdktf/provider-azurerm.sqlFailoverGroup": {},
        "@cdktf/provider-azurerm.sqlFirewallRule": {},
        "@cdktf/provider-azurerm.sqlManagedDatabase": {},
        "@cdktf/provider-azurerm.sqlManagedInstance": {},
        "@cdktf/provider-azurerm.sqlManagedInstanceActiveDirectoryAdministrator": {},
        "@cdktf/provider-azurerm.sqlManagedInstanceFailoverGroup": {},
        "@cdktf/provider-azurerm.sqlServer": {},
        "@cdktf/provider-azurerm.sqlVirtualNetworkRule": {},
        "@cdktf/provider-azurerm.sshPublicKey": {},
        "@cdktf/provider-azurerm.stackHciCluster": {},
        "@cdktf/provider-azurerm.staticSite": {},
        "@cdktf/provider-azurerm.staticSiteCustomDomain": {},
        "@cdktf/provider-azurerm.storageAccount": {},
        "@cdktf/provider-azurerm.storageAccountCustomerManagedKey": {},
        "@cdktf/provider-azurerm.storageAccountNetworkRules": {},
        "@cdktf/provider-azurerm.storageBlob": {},
        "@cdktf/provider-azurerm.storageBlobInventoryPolicy": {},
        "@cdktf/provider-azurerm.storageContainer": {},
        "@cdktf/provider-azurerm.storageDataLakeGen2Filesystem": {},
        "@cdktf/provider-azurerm.storageDataLakeGen2Path": {},
        "@cdktf/provider-azurerm.storageEncryptionScope": {},
        "@cdktf/provider-azurerm.storageManagementPolicy": {},
        "@cdktf/provider-azurerm.storageObjectReplication": {},
        "@cdktf/provider-azurerm.storageQueue": {},
        "@cdktf/provider-azurerm.storageShare": {},
        "@cdktf/provider-azurerm.storageShareDirectory": {},
        "@cdktf/provider-azurerm.storageShareFile": {},
        "@cdktf/provider-azurerm.storageSync": {},
        "@cdktf/provider-azurerm.storageSyncCloudEndpoint": {},
        "@cdktf/provider-azurerm.storageSyncGroup": {},
        "@cdktf/provider-azurerm.storageTable": {},
        "@cdktf/provider-azurerm.storageTableEntity": {},
        "@cdktf/provider-azurerm.streamAnalyticsCluster": {},
        "@cdktf/provider-azurerm.streamAnalyticsFunctionJavascriptUda": {},
        "@cdktf/provider-azurerm.streamAnalyticsFunctionJavascriptUdf": {},
        "@cdktf/provider-azurerm.streamAnalyticsJob": {},
        "@cdktf/provider-azurerm.streamAnalyticsJobSchedule": {},
        "@cdktf/provider-azurerm.streamAnalyticsManagedPrivateEndpoint": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputBlob": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputCosmosdb": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputEventhub": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputFunction": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputMssql": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputPowerbi": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputServicebusQueue": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputServicebusTopic": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputSynapse": {},
        "@cdktf/provider-azurerm.streamAnalyticsOutputTable": {},
        "@cdktf/provider-azurerm.streamAnalyticsReferenceInputBlob": {},
        "@cdktf/provider-azurerm.streamAnalyticsReferenceInputMssql": {},
        "@cdktf/provider-azurerm.streamAnalyticsStreamInputBlob": {},
        "@cdktf/provider-azurerm.streamAnalyticsStreamInputEventhub": {},
        "@cdktf/provider-azurerm.streamAnalyticsStreamInputEventhubV2": {},
        "@cdktf/provider-azurerm.streamAnalyticsStreamInputIothub": {},
        "@cdktf/provider-azurerm.subnet": {},
        "@cdktf/provider-azurerm.subnetNatGatewayAssociation": {},
        "@cdktf/provider-azurerm.subnetNetworkSecurityGroupAssociation": {},
        "@cdktf/provider-azurerm.subnetRouteTableAssociation": {},
        "@cdktf/provider-azurerm.subnetServiceEndpointStoragePolicy": {},
        "@cdktf/provider-azurerm.subscription": {},
        "@cdktf/provider-azurerm.subscriptionCostManagementExport": {},
        "@cdktf/provider-azurerm.subscriptionPolicyAssignment": {},
        "@cdktf/provider-azurerm.subscriptionPolicyExemption": {},
        "@cdktf/provider-azurerm.subscriptionPolicyRemediation": {},
        "@cdktf/provider-azurerm.subscriptionTemplateDeployment": {},
        "@cdktf/provider-azurerm.synapseFirewallRule": {},
        "@cdktf/provider-azurerm.synapseIntegrationRuntimeAzure": {},
        "@cdktf/provider-azurerm.synapseIntegrationRuntimeSelfHosted": {},
        "@cdktf/provider-azurerm.synapseLinkedService": {},
        "@cdktf/provider-azurerm.synapseManagedPrivateEndpoint": {},
        "@cdktf/provider-azurerm.synapsePrivateLinkHub": {},
        "@cdktf/provider-azurerm.synapseRoleAssignment": {},
        "@cdktf/provider-azurerm.synapseSparkPool": {},
        "@cdktf/provider-azurerm.synapseSqlPool": {},
        "@cdktf/provider-azurerm.synapseSqlPoolExtendedAuditingPolicy": {},
        "@cdktf/provider-azurerm.synapseSqlPoolSecurityAlertPolicy": {},
        "@cdktf/provider-azurerm.synapseSqlPoolVulnerabilityAssessment": {},
        "@cdktf/provider-azurerm.synapseSqlPoolVulnerabilityAssessmentBaseline": {},
        "@cdktf/provider-azurerm.synapseSqlPoolWorkloadClassifier": {},
        "@cdktf/provider-azurerm.synapseSqlPoolWorkloadGroup": {},
        "@cdktf/provider-azurerm.synapseWorkspace": {},
        "@cdktf/provider-azurerm.synapseWorkspaceAadAdmin": {},
        "@cdktf/provider-azurerm.synapseWorkspaceExtendedAuditingPolicy": {},
        "@cdktf/provider-azurerm.synapseWorkspaceKey": {},
        "@cdktf/provider-azurerm.synapseWorkspaceSecurityAlertPolicy": {},
        "@cdktf/provider-azurerm.synapseWorkspaceSqlAadAdmin": {},
        "@cdktf/provider-azurerm.synapseWorkspaceVulnerabilityAssessment": {},
        "@cdktf/provider-azurerm.templateDeployment": {},
        "@cdktf/provider-azurerm.tenantTemplateDeployment": {},
        "@cdktf/provider-azurerm.trafficManagerAzureEndpoint": {},
        "@cdktf/provider-azurerm.trafficManagerExternalEndpoint": {},
        "@cdktf/provider-azurerm.trafficManagerNestedEndpoint": {},
        "@cdktf/provider-azurerm.trafficManagerProfile": {},
        "@cdktf/provider-azurerm.userAssignedIdentity": {},
        "@cdktf/provider-azurerm.videoAnalyzer": {},
        "@cdktf/provider-azurerm.videoAnalyzerEdgeModule": {},
        "@cdktf/provider-azurerm.virtualDesktopApplication": {},
        "@cdktf/provider-azurerm.virtualDesktopApplicationGroup": {},
        "@cdktf/provider-azurerm.virtualDesktopHostPool": {},
        "@cdktf/provider-azurerm.virtualDesktopHostPoolRegistrationInfo": {},
        "@cdktf/provider-azurerm.virtualDesktopScalingPlan": {},
        "@cdktf/provider-azurerm.virtualDesktopWorkspace": {},
        "@cdktf/provider-azurerm.virtualDesktopWorkspaceApplicationGroupAssociation": {},
        "@cdktf/provider-azurerm.virtualHub": {},
        "@cdktf/provider-azurerm.virtualHubBgpConnection": {},
        "@cdktf/provider-azurerm.virtualHubConnection": {},
        "@cdktf/provider-azurerm.virtualHubIp": {},
        "@cdktf/provider-azurerm.virtualHubRouteTable": {},
        "@cdktf/provider-azurerm.virtualHubRouteTableRoute": {},
        "@cdktf/provider-azurerm.virtualHubSecurityPartnerProvider": {},
        "@cdktf/provider-azurerm.virtualMachine": {},
        "@cdktf/provider-azurerm.virtualMachineDataDiskAttachment": {},
        "@cdktf/provider-azurerm.virtualMachineExtension": {},
        "@cdktf/provider-azurerm.virtualMachineScaleSet": {},
        "@cdktf/provider-azurerm.virtualMachineScaleSetExtension": {},
        "@cdktf/provider-azurerm.virtualNetwork": {},
        "@cdktf/provider-azurerm.virtualNetworkDnsServers": {},
        "@cdktf/provider-azurerm.virtualNetworkGateway": {},
        "@cdktf/provider-azurerm.virtualNetworkGatewayConnection": {},
        "@cdktf/provider-azurerm.virtualNetworkGatewayNatRule": {},
        "@cdktf/provider-azurerm.virtualNetworkPeering": {},
        "@cdktf/provider-azurerm.virtualWan": {},
        "@cdktf/provider-azurerm.vmwareCluster": {},
        "@cdktf/provider-azurerm.vmwareExpressRouteAuthorization": {},
        "@cdktf/provider-azurerm.vmwarePrivateCloud": {},
        "@cdktf/provider-azurerm.vpnGateway": {},
        "@cdktf/provider-azurerm.vpnGatewayConnection": {},
        "@cdktf/provider-azurerm.vpnGatewayNatRule": {},
        "@cdktf/provider-azurerm.vpnServerConfiguration": {},
        "@cdktf/provider-azurerm.vpnServerConfigurationPolicyGroup": {},
        "@cdktf/provider-azurerm.vpnSite": {},
        "@cdktf/provider-azurerm.webAppActiveSlot": {},
        "@cdktf/provider-azurerm.webAppHybridConnection": {},
        "@cdktf/provider-azurerm.webApplicationFirewallPolicy": {},
        "@cdktf/provider-azurerm.webPubsub": {},
        "@cdktf/provider-azurerm.webPubsubHub": {},
        "@cdktf/provider-azurerm.webPubsubNetworkAcl": {},
        "@cdktf/provider-azurerm.webPubsubSharedPrivateLinkResource": {},
        "@cdktf/provider-azurerm.windowsFunctionApp": {},
        "@cdktf/provider-azurerm.windowsFunctionAppSlot": {},
        "@cdktf/provider-azurerm.windowsVirtualMachine": {},
        "@cdktf/provider-azurerm.windowsVirtualMachineScaleSet": {},
        "@cdktf/provider-azurerm.windowsWebApp": {},
        "@cdktf/provider-azurerm.windowsWebAppSlot": {}
      },
      "targets": {
        "dotnet": {
          "namespace": "HashiCorp.Cdktf.Providers.Azurerm",
          "packageId": "HashiCorp.Cdktf.Providers.Azurerm"
        },
        "go": {
          "moduleName": "github.com/cdktf/cdktf-provider-azurerm-go",
          "packageName": "azurerm"
        },
        "java": {
          "maven": {
            "artifactId": "cdktf-provider-azurerm",
            "groupId": "com.hashicorp"
          },
          "package": "com.hashicorp.cdktf.providers.azurerm"
        },
        "js": {
          "npm": "@cdktf/provider-azurerm"
        },
        "python": {
          "distName": "cdktf-cdktf-provider-azurerm",
          "module": "cdktf_cdktf_provider_azurerm"
        }
      }
    },
    "cdktf": {
      "submodules": {
        "cdktf.testingMatchers": {}
      },
      "targets": {
        "dotnet": {
          "namespace": "HashiCorp.Cdktf",
          "packageId": "HashiCorp.Cdktf"
        },
        "go": {
          "moduleName": "github.com/hashicorp/terraform-cdk-go",
          "packageName": "cdktf"
        },
        "java": {
          "maven": {
            "artifactId": "cdktf",
            "groupId": "com.hashicorp"
          },
          "package": "com.hashicorp.cdktf"
        },
        "js": {
          "npm": "cdktf"
        },
        "python": {
          "distName": "cdktf",
          "module": "cdktf"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    },
    "polycons": {
      "targets": {
        "js": {
          "npm": "polycons"
        },
        "python": {
          "distName": "polycons",
          "module": "polycons"
        }
      }
    }
  },
  "description": "@winglang/wingsdk",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/winglang/wingsdk.git",
  "jsiiVersion": "1.73.0 (build 6faeda3)",
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "@winglang/wingsdk",
  "readme": {
    "markdown": "# Wing SDK\n\nThe Wing SDK is the standard library of the Wing programming language, **but it can also be used as a standalone library from any CDK supported language**.\nFor best experience it should be used with the Wing Language.\n\nIt contains the core set of cloud resources that are needed to build cloud applications.\nThese resources are cloud agnostic and can be used to build applications that run on any cloud provider.\nThe actual provider is determined at synth time by setting a target.\n\nOne of the supported targets is `sim` and can be used to run a cloud application locally, without an internet connection, iterate extremely fast and run tests that include cloud resources without needing to mock them.\n\nThe SDK is released as a private npm module named\n[`@winglang/wingsdk`](https://github.com/winglang/wingsdk/packages/1519521).\n\n## ⛺ Installation\n```shell\nnpm i @winglang/wingsdk\n```\n\n## 📝 Usage\n\n### With Wing\n\nThe Wing SDK is part of Wing's standard library. Create a new file called `hello.w` and import the SDK with `bring cloud;`:\n\n```wing\nbring cloud;\n\nlet queue = new cloud.Queue();\n\nqueue.on_message(inflight (message) => {\n  print(\"Hello, ${message}!\");\n});\n```\n\nThen use `wing compile` to compile your program to different clouds. Run `wing compile --help` to see what options are available!\n\n### As a TypeScript/JavaScript Library\n\nThe Wing SDK can be used just like ordinary [CDK for TF Constructs](https://github.com/hashicorp/terraform-cdk), with the distinctions that the resources are polymorphic and their concrete implementations are determined at synth time. See [Polycons](https://github.com/winglang/polycons) for more details.\n\n```ts\nimport { Construct } from \"constructs\";\nimport * as sdk from \"@winglang/wingsdk\";\n\nclass HelloWorld extends Construct {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    let bucket = new sdk.cloud.Bucket(this, \"bucket\", {\n      public: true,\n    });\n  }\n}\n```\n\nThis construct contains a `Bucket` from the cloud library which represents a polymorphic cloud resources whose actual implementation (local, aws, other clouds) is determined at synth time.\n\nTo use it in an application, you need to supply a synthesizer which will synthesize resources for the desired target.\nIn the example below, a `sim` synthesizer is used which tells the SDK to produce a simulator  (`.wsim`) file.\nThe `.wsim` file can be passed to the Wing console to simulate the bucket using your file system.\nIf the commented out TF AWS synthesizer is used instead, then a Terraform application will be synthesized.\nThe Terraform application will include an AWS S3 Bucket to represent the `Bucket`.\n\n```ts\nimport * as sim from \"../../src/sim\";\nimport * as tfaws from \"../../src/tf-aws\";\n\nconst app = new sim.App();\n// const app = new tfaws.App(); // alternative\nnew HelloWorld(app, \"HelloWorld\");\napp.synth();\n```\n\n## 📖 Documentation\n\n- [Simulator guide](../../docs/simulator.md)\n- [SDK Roadmap](https://github.com/orgs/winglang/projects/3/views/1)\n- [API reference](./API.md)\n- Wing SDK design guidelines (TODO)\n\n## ✋ Contributing\n\nWe welcome community contributions and pull requests. See the [Wing Contributor's Handbook](../../CONTRIBUTING.md) for information on how to set up a development environment and add new resources to the SDK.\n\n## 🐣 Getting help\n\nIf you need help either using or contributing to this project, please join us on our [Wing Slack].\n\n[Wing Slack]: https://t.winglang.io/slack\n\n## ⚖️ License\n\nThis library is licensed under the Apache-2.0 license.\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/winglang/wingsdk.git"
  },
  "schema": "jsii/0.10.0",
  "submodules": {
    "@winglang/wingsdk.cloud": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 1
      },
      "symbolId": "src/cloud/index:"
    },
    "@winglang/wingsdk.core": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 2
      },
      "symbolId": "src/core/index:"
    },
    "@winglang/wingsdk.fs": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 3
      },
      "symbolId": "src/fs/index:"
    },
    "@winglang/wingsdk.sim": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 5
      },
      "symbolId": "src/target-sim/index:"
    },
    "@winglang/wingsdk.std": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 4
      },
      "readme": {
        "markdown": "# Wing Globals\n\nThis directory contains types available in the global scope of Wing."
      },
      "symbolId": "src/std/index:"
    },
    "@winglang/wingsdk.testing": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 8
      },
      "symbolId": "src/testing/index:"
    },
    "@winglang/wingsdk.tfaws": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 6
      },
      "symbolId": "src/target-tf-aws/index:"
    },
    "@winglang/wingsdk.tfazure": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 7
      },
      "symbolId": "src/target-tf-azure/index:"
    }
  },
  "targets": {
    "js": {
      "npm": "@winglang/wingsdk"
    }
  },
  "types": {
    "@winglang/wingsdk.cloud.Bucket": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.BucketBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IBucketClient`"
        },
        "stability": "experimental",
        "summary": "Represents a cloud object store."
      },
      "fqn": "@winglang/wingsdk.cloud.Bucket",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/bucket.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.BucketProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/bucket.ts",
        "line": 41
      },
      "name": "Bucket",
      "namespace": "cloud",
      "symbolId": "src/cloud/bucket:Bucket"
    },
    "@winglang/wingsdk.cloud.BucketBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Functionality shared between all `Bucket` implementations."
      },
      "fqn": "@winglang/wingsdk.cloud.BucketBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/bucket.ts",
          "line": 26
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.BucketProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/bucket.ts",
        "line": 24
      },
      "name": "BucketBase",
      "namespace": "cloud",
      "properties": [
        {
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 25
          },
          "name": "stateful",
          "overrides": "@winglang/wingsdk.core.Resource",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/bucket:BucketBase"
    },
    "@winglang/wingsdk.cloud.BucketDeleteOptions": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Interface for delete method inside `Bucket`."
      },
      "fqn": "@winglang/wingsdk.cloud.BucketDeleteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/bucket.ts",
        "line": 54
      },
      "name": "BucketDeleteOptions",
      "namespace": "cloud",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "Throws": "if this is `true`, an error is thrown if the file is not found (or any error case)."
            },
            "default": "false",
            "stability": "experimental",
            "summary": "Check failures on the method and retrieve errors if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 60
          },
          "name": "mustExist",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/bucket:BucketDeleteOptions"
    },
    "@winglang/wingsdk.cloud.BucketProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for `Bucket`."
      },
      "fqn": "@winglang/wingsdk.cloud.BucketProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/bucket.ts",
        "line": 13
      },
      "name": "BucketProps",
      "namespace": "cloud",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether the bucket's objects should be publicly accessible."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 18
          },
          "name": "public",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/bucket:BucketProps"
    },
    "@winglang/wingsdk.cloud.Counter": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.CounterBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ICounterClient`"
        },
        "stability": "experimental",
        "summary": "Represents a distributed atomic counter."
      },
      "fqn": "@winglang/wingsdk.cloud.Counter",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/counter.ts",
          "line": 49
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.CounterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/counter.ts",
        "line": 48
      },
      "name": "Counter",
      "namespace": "cloud",
      "symbolId": "src/cloud/counter:Counter"
    },
    "@winglang/wingsdk.cloud.CounterBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Functionality shared between all `Counter` implementations."
      },
      "fqn": "@winglang/wingsdk.cloud.CounterBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/counter.ts",
          "line": 32
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.CounterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/counter.ts",
        "line": 24
      },
      "name": "CounterBase",
      "namespace": "cloud",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The initial value of the counter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/counter.ts",
            "line": 30
          },
          "name": "initial",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/counter.ts",
            "line": 25
          },
          "name": "stateful",
          "overrides": "@winglang/wingsdk.core.Resource",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/counter:CounterBase"
    },
    "@winglang/wingsdk.cloud.CounterProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for `Counter`."
      },
      "fqn": "@winglang/wingsdk.cloud.CounterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/counter.ts",
        "line": 13
      },
      "name": "CounterProps",
      "namespace": "cloud",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "experimental",
            "summary": "The initial value of the counter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/counter.ts",
            "line": 18
          },
          "name": "initial",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/cloud/counter:CounterProps"
    },
    "@winglang/wingsdk.cloud.Function": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.FunctionBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IFunctionClient`"
        },
        "stability": "experimental",
        "summary": "Represents a function."
      },
      "fqn": "@winglang/wingsdk.cloud.Function",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/function.ts",
          "line": 130
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "inflight",
            "type": {
              "fqn": "@winglang/wingsdk.core.Inflight"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.FunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/function.ts",
        "line": 129
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add an environment variable to the function."
          },
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 146
          },
          "name": "addEnvironment",
          "overrides": "@winglang/wingsdk.cloud.FunctionBase",
          "parameters": [
            {
              "name": "_key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "_value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Function",
      "namespace": "cloud",
      "symbolId": "src/cloud/function:Function"
    },
    "@winglang/wingsdk.cloud.FunctionBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Functionality shared between all `Function` implementations."
      },
      "fqn": "@winglang/wingsdk.cloud.FunctionBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/function.ts",
          "line": 40
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "inflight",
            "type": {
              "fqn": "@winglang/wingsdk.core.Inflight"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.FunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IInflightHost"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/function.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add an environment variable to the function."
          },
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 109
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "FunctionBase",
      "namespace": "cloud",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The path to the file asset that contains the handler code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 38
          },
          "name": "assetPath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the set of environment variables for this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 119
          },
          "name": "env",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 33
          },
          "name": "stateful",
          "overrides": "@winglang/wingsdk.core.Resource",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/function:FunctionBase"
    },
    "@winglang/wingsdk.cloud.FunctionProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "remarks": "This is the type users see when constructing a cloud.Function instance.",
        "stability": "experimental",
        "summary": "Properties for `Function`."
      },
      "fqn": "@winglang/wingsdk.cloud.FunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/function.ts",
        "line": 19
      },
      "name": "FunctionProps",
      "namespace": "cloud",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "stability": "experimental",
            "summary": "Environment variables to pass to the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 24
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/cloud/function:FunctionProps"
    },
    "@winglang/wingsdk.cloud.IBucketClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight interface for `Bucket`."
      },
      "fqn": "@winglang/wingsdk.cloud.IBucketClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/bucket.ts",
        "line": 66
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Delete an existing object using a key from the bucket."
          },
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 98
          },
          "name": "delete",
          "parameters": [
            {
              "docs": {
                "summary": "Key of the object."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options available for delete an item from a bucket."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.BucketDeleteOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "Returns": "the object's body.",
              "Throws": "if no object with the given key exists.",
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Retrieve an object from the bucket."
          },
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 82
          },
          "name": "get",
          "parameters": [
            {
              "docs": {
                "summary": "Key of the object."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "returns": "a list of keys or an empty array if the bucket is empty.",
            "stability": "experimental",
            "summary": "Retrieve existing objects keys from the bucket."
          },
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 90
          },
          "name": "list",
          "parameters": [
            {
              "docs": {
                "summary": "Limits the response to keys that begin with the specified prefix."
              },
              "name": "prefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Put an object in the bucket."
          },
          "locationInModule": {
            "filename": "src/cloud/bucket.ts",
            "line": 73
          },
          "name": "put",
          "parameters": [
            {
              "docs": {
                "summary": "Key of the object."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Content of the object we want to store into the bucket."
              },
              "name": "body",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IBucketClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/bucket:IBucketClient"
    },
    "@winglang/wingsdk.cloud.ICounterClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight interface for `Queue`."
      },
      "fqn": "@winglang/wingsdk.cloud.ICounterClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/counter.ts",
        "line": 63
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "returns": "the previous value of the counter.",
            "stability": "experimental",
            "summary": "Increments the counter atomically by a certain amount and returns the previous value."
          },
          "locationInModule": {
            "filename": "src/cloud/counter.ts",
            "line": 70
          },
          "name": "inc",
          "parameters": [
            {
              "docs": {
                "summary": "amount to increment (default is 1)."
              },
              "name": "amount",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "remarks": "Using this API may introduce race conditions since the value can change between\nthe time it is read and the time it is used in your code.",
            "returns": "current value",
            "stability": "experimental",
            "summary": "Get the current value of the counter."
          },
          "locationInModule": {
            "filename": "src/cloud/counter.ts",
            "line": 79
          },
          "name": "peek",
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        }
      ],
      "name": "ICounterClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/counter:ICounterClient"
    },
    "@winglang/wingsdk.cloud.IFunctionClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight interface for `Function`."
      },
      "fqn": "@winglang/wingsdk.cloud.IFunctionClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/function.ts",
        "line": 159
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Invoke the function asynchronously with a given payload."
          },
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 164
          },
          "name": "invoke",
          "parameters": [
            {
              "name": "payload",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IFunctionClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/function:IFunctionClient"
    },
    "@winglang/wingsdk.cloud.IFunctionHandler": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "custom": {
          "inflight": "`wingsdk.cloud.IFunctionHandlerClient`"
        },
        "stability": "experimental",
        "summary": "Represents a resource with an inflight \"handle\" method that can be used to create a `cloud.Function`."
      },
      "fqn": "@winglang/wingsdk.cloud.IFunctionHandler",
      "interfaces": [
        "@winglang/wingsdk.core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/function.ts",
        "line": 173
      },
      "name": "IFunctionHandler",
      "namespace": "cloud",
      "symbolId": "src/cloud/function:IFunctionHandler"
    },
    "@winglang/wingsdk.cloud.IFunctionHandlerClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight client for `IFunctionHandler`."
      },
      "fqn": "@winglang/wingsdk.cloud.IFunctionHandlerClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/function.ts",
        "line": 178
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Entrypoint function that will be called when the cloud function is invoked."
          },
          "locationInModule": {
            "filename": "src/cloud/function.ts",
            "line": 183
          },
          "name": "handle",
          "parameters": [
            {
              "name": "event",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IFunctionHandlerClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/function:IFunctionHandlerClient"
    },
    "@winglang/wingsdk.cloud.ILoggerClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight interface for `Logger`."
      },
      "fqn": "@winglang/wingsdk.cloud.ILoggerClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/logger.ts",
        "line": 81
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "remarks": "NOTICE: this is not an async function because it is wrapped by `console.log()`.",
            "stability": "experimental",
            "summary": "Logs a message. The log will be associated with whichever resource is running the inflight code."
          },
          "locationInModule": {
            "filename": "src/cloud/logger.ts",
            "line": 91
          },
          "name": "print",
          "parameters": [
            {
              "docs": {
                "summary": "The message to print."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ILoggerClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/logger:ILoggerClient"
    },
    "@winglang/wingsdk.cloud.IQueueClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight interface for `Queue`."
      },
      "fqn": "@winglang/wingsdk.cloud.IQueueClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 92
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Push a message to the queue."
          },
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 98
          },
          "name": "push",
          "parameters": [
            {
              "docs": {
                "summary": "Payload to send to the queue."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IQueueClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/queue:IQueueClient"
    },
    "@winglang/wingsdk.cloud.IQueueOnMessageHandler": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "custom": {
          "inflight": "`wingsdk.cloud.IQueueOnMessageHandlerClient`"
        },
        "stability": "experimental",
        "summary": "Represents a resource with an inflight \"handle\" method that can be passed to `Queue.on_message`."
      },
      "fqn": "@winglang/wingsdk.cloud.IQueueOnMessageHandler",
      "interfaces": [
        "@winglang/wingsdk.core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 107
      },
      "name": "IQueueOnMessageHandler",
      "namespace": "cloud",
      "symbolId": "src/cloud/queue:IQueueOnMessageHandler"
    },
    "@winglang/wingsdk.cloud.IQueueOnMessageHandlerClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight client for `IQueueOnMessageHandler`."
      },
      "fqn": "@winglang/wingsdk.cloud.IQueueOnMessageHandlerClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 112
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Function that will be called when a message is received from the queue."
          },
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 117
          },
          "name": "handle",
          "parameters": [
            {
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IQueueOnMessageHandlerClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/queue:IQueueOnMessageHandlerClient"
    },
    "@winglang/wingsdk.cloud.ITopicClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight interface for `Topic`."
      },
      "fqn": "@winglang/wingsdk.cloud.ITopicClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 70
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Publish message to topic."
          },
          "locationInModule": {
            "filename": "src/cloud/topic.ts",
            "line": 76
          },
          "name": "publish",
          "parameters": [
            {
              "docs": {
                "summary": "Payload to publish to Topic."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ITopicClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/topic:ITopicClient"
    },
    "@winglang/wingsdk.cloud.ITopicOnMessageHandler": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "custom": {
          "inflight": "`wingsdk.cloud.ITopicOnMessageHandlerClient`"
        },
        "stability": "experimental",
        "summary": "Represents a resource with an inflight \"handle\" method that can be passed to `Topic.on_message`."
      },
      "fqn": "@winglang/wingsdk.cloud.ITopicOnMessageHandler",
      "interfaces": [
        "@winglang/wingsdk.core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 85
      },
      "name": "ITopicOnMessageHandler",
      "namespace": "cloud",
      "symbolId": "src/cloud/topic:ITopicOnMessageHandler"
    },
    "@winglang/wingsdk.cloud.ITopicOnMessageHandlerClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inflight client for `ITopicOnMessageHandler`."
      },
      "fqn": "@winglang/wingsdk.cloud.ITopicOnMessageHandlerClient",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 90
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "custom": {
              "inflight": "true"
            },
            "stability": "experimental",
            "summary": "Function that will be called when a message is received from the topic."
          },
          "locationInModule": {
            "filename": "src/cloud/topic.ts",
            "line": 95
          },
          "name": "handle",
          "parameters": [
            {
              "name": "event",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ITopicOnMessageHandlerClient",
      "namespace": "cloud",
      "symbolId": "src/cloud/topic:ITopicOnMessageHandlerClient"
    },
    "@winglang/wingsdk.cloud.Logger": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.LoggerBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ILoggerClient`"
        },
        "stability": "experimental",
        "summary": "A cloud logging facility."
      },
      "fqn": "@winglang/wingsdk.cloud.Logger",
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/logger.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the logger registered to the given scope, throwing an error if there is none."
          },
          "locationInModule": {
            "filename": "src/cloud/logger.ts",
            "line": 35
          },
          "name": "of",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Logger"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a logger and register it to the given scope."
          },
          "locationInModule": {
            "filename": "src/cloud/logger.ts",
            "line": 52
          },
          "name": "register",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "static": true
        }
      ],
      "name": "Logger",
      "namespace": "cloud",
      "symbolId": "src/cloud/logger:Logger"
    },
    "@winglang/wingsdk.cloud.LoggerBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Functionality shared between all `Logger` implementations."
      },
      "fqn": "@winglang/wingsdk.cloud.LoggerBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new construct node."
        },
        "locationInModule": {
          "filename": "src/construct.ts",
          "line": 463
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings. If\nthe ID includes a path separator (`/`), then it will be replaced by double\ndash `--`.",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/logger.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Logs a message (preflight)."
          },
          "locationInModule": {
            "filename": "src/cloud/logger.ts",
            "line": 19
          },
          "name": "print",
          "parameters": [
            {
              "docs": {
                "summary": "The message to log."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "LoggerBase",
      "namespace": "cloud",
      "properties": [
        {
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/logger.ts",
            "line": 13
          },
          "name": "stateful",
          "overrides": "@winglang/wingsdk.core.Resource",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/logger:LoggerBase"
    },
    "@winglang/wingsdk.cloud.Queue": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.QueueBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IQueueClient`"
        },
        "stability": "experimental",
        "summary": "Represents a queue."
      },
      "fqn": "@winglang/wingsdk.cloud.Queue",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/queue.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.QueueProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 68
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a function to consume messages from this queue."
          },
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 74
          },
          "name": "onMessage",
          "overrides": "@winglang/wingsdk.cloud.QueueBase",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.QueueOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        }
      ],
      "name": "Queue",
      "namespace": "cloud",
      "symbolId": "src/cloud/queue:Queue"
    },
    "@winglang/wingsdk.cloud.QueueBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Functionality shared between all `Queue` implementations."
      },
      "fqn": "@winglang/wingsdk.cloud.QueueBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/queue.ts",
          "line": 34
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.QueueProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 32
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Create a function to consume messages from this queue."
          },
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 46
          },
          "name": "onMessage",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.QueueOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        }
      ],
      "name": "QueueBase",
      "namespace": "cloud",
      "properties": [
        {
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 33
          },
          "name": "stateful",
          "overrides": "@winglang/wingsdk.core.Resource",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/queue:QueueBase"
    },
    "@winglang/wingsdk.cloud.QueueOnMessageProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for Queue.onMessage."
      },
      "fqn": "@winglang/wingsdk.cloud.QueueOnMessageProps",
      "interfaces": [
        "@winglang/wingsdk.cloud.FunctionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 55
      },
      "name": "QueueOnMessageProps",
      "namespace": "cloud",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "The maximum number of messages to send to subscribers at once."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 60
          },
          "name": "batchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/cloud/queue:QueueOnMessageProps"
    },
    "@winglang/wingsdk.cloud.QueueProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for `Queue`."
      },
      "fqn": "@winglang/wingsdk.cloud.QueueProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/queue.ts",
        "line": 15
      },
      "name": "QueueProps",
      "namespace": "cloud",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "experimental",
            "summary": "Initialize the queue with a set of messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 26
          },
          "name": "initialMessages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.fromSeconds(10)",
            "stability": "experimental",
            "summary": "How long a queue's consumers have to process a message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/queue.ts",
            "line": 20
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@winglang/wingsdk.std.Duration"
          }
        }
      ],
      "symbolId": "src/cloud/queue:QueueProps"
    },
    "@winglang/wingsdk.cloud.Topic": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.TopicBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ITopicClient`"
        },
        "stability": "experimental",
        "summary": "Represents a topic."
      },
      "fqn": "@winglang/wingsdk.cloud.Topic",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/topic.ts",
          "line": 47
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.TopicProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 46
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates function to send messages when published."
          },
          "locationInModule": {
            "filename": "src/cloud/topic.ts",
            "line": 52
          },
          "name": "onMessage",
          "overrides": "@winglang/wingsdk.cloud.TopicBase",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.TopicOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        }
      ],
      "name": "Topic",
      "namespace": "cloud",
      "symbolId": "src/cloud/topic:Topic"
    },
    "@winglang/wingsdk.cloud.TopicBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Topic base class."
      },
      "fqn": "@winglang/wingsdk.cloud.TopicBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/cloud/topic.ts",
          "line": 18
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.TopicProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 16
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Creates function to send messages when published."
          },
          "locationInModule": {
            "filename": "src/cloud/topic.ts",
            "line": 30
          },
          "name": "onMessage",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.TopicOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        }
      ],
      "name": "TopicBase",
      "namespace": "cloud",
      "properties": [
        {
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cloud/topic.ts",
            "line": 17
          },
          "name": "stateful",
          "overrides": "@winglang/wingsdk.core.Resource",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/cloud/topic:TopicBase"
    },
    "@winglang/wingsdk.cloud.TopicOnMessageProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for Topic.onMessage."
      },
      "fqn": "@winglang/wingsdk.cloud.TopicOnMessageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 39
      },
      "name": "TopicOnMessageProps",
      "namespace": "cloud",
      "symbolId": "src/cloud/topic:TopicOnMessageProps"
    },
    "@winglang/wingsdk.cloud.TopicProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for `Topic`."
      },
      "fqn": "@winglang/wingsdk.cloud.TopicProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cloud/topic.ts",
        "line": 11
      },
      "name": "TopicProps",
      "namespace": "cloud",
      "symbolId": "src/cloud/topic:TopicProps"
    },
    "@winglang/wingsdk.core.AddConnectionProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for `Resource.addConnection`."
      },
      "fqn": "@winglang/wingsdk.core.AddConnectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 233
      },
      "name": "AddConnectionProps",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource creating the connection to `to`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 237
          },
          "name": "from",
          "type": {
            "fqn": "@winglang/wingsdk.core.IResource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of relationship between the resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 247
          },
          "name": "relationship",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource `from` is connecting to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 242
          },
          "name": "to",
          "type": {
            "fqn": "@winglang/wingsdk.core.IResource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Whether the relationship is implicit, i.e. it is not explicitly defined by the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 254
          },
          "name": "implicit",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/core/resource:AddConnectionProps"
    },
    "@winglang/wingsdk.core.AppProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for all `App` classes."
      },
      "fqn": "@winglang/wingsdk.core.AppProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/app.ts",
        "line": 27
      },
      "name": "AppProps",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use the default polycon factory included in the Wing SDK",
            "stability": "experimental",
            "summary": "A custom factory to resolve polycons."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 51
          },
          "name": "customFactory",
          "optional": true,
          "type": {
            "fqn": "polycons.IPolyconFactory"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"app\"",
            "stability": "experimental",
            "summary": "The name of the app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 38
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- current working directory",
            "stability": "experimental",
            "summary": "Directory where artifacts are synthesized to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 32
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no state file",
            "remarks": "If a\nstatefile is not specified, we won't be able to remove extrenous files.",
            "stability": "experimental",
            "summary": "The path to a state file which will track all synthesized files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 45
          },
          "name": "stateFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/app:AppProps"
    },
    "@winglang/wingsdk.core.CdktfApp": {
      "assembly": "@winglang/wingsdk",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "No polycon factory or Terraform providers are included.",
        "stability": "experimental",
        "summary": "An app that knows how to synthesize constructs into Terraform configuration using cdktf."
      },
      "fqn": "@winglang/wingsdk.core.CdktfApp",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/core/app.ts",
          "line": 64
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.core.AppProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IApp"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/app.ts",
        "line": 58
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method eturn a cleaned snapshot of the resulting Terraform manifest\nfor unit testing.",
            "stability": "experimental",
            "summary": "Synthesize the app into Terraform configuration in a `cdktf.out` directory."
          },
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 123
          },
          "name": "synth",
          "overrides": "@winglang/wingsdk.core.IApp",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "CdktfApp",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Directory where artifacts are synthesized to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 62
          },
          "name": "outdir",
          "overrides": "@winglang/wingsdk.core.IApp",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/app:CdktfApp"
    },
    "@winglang/wingsdk.core.Code": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Reference to a piece of code."
      },
      "fqn": "@winglang/wingsdk.core.Code",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 13
      },
      "name": "Code",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate a hash of the code contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 50
          },
          "name": "hash",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The language of the code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 17
          },
          "name": "language",
          "type": {
            "fqn": "@winglang/wingsdk.core.Language"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A path to the code in the user's file system that can be referenced for bundling purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 23
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The code contents, sanitized for unit testing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 36
          },
          "name": "sanitizedText",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The code contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 28
          },
          "name": "text",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/inflight:Code"
    },
    "@winglang/wingsdk.core.Connection": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A connection between two resources."
      },
      "fqn": "@winglang/wingsdk.core.Connection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 260
      },
      "name": "Connection",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The direction of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 274
          },
          "name": "direction",
          "type": {
            "fqn": "@winglang/wingsdk.core.Direction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Whether the relationship is implicit, i.e. it is not explicitly defined by the user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 280
          },
          "name": "implicit",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of relationship with the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 269
          },
          "name": "relationship",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource this connection is to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 264
          },
          "name": "resource",
          "type": {
            "fqn": "@winglang/wingsdk.core.IResource"
          }
        }
      ],
      "symbolId": "src/core/resource:Connection"
    },
    "@winglang/wingsdk.core.ConstructInfo": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Source information on a construct (class fqn and version)."
      },
      "fqn": "@winglang/wingsdk.core.ConstructInfo",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/tree.ts",
        "line": 61
      },
      "name": "ConstructInfo",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Fully qualified class name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 65
          },
          "name": "fqn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Version of the module."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 70
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/tree:ConstructInfo"
    },
    "@winglang/wingsdk.core.ConstructTree": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The construct tree."
      },
      "fqn": "@winglang/wingsdk.core.ConstructTree",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/tree.ts",
        "line": 41
      },
      "name": "ConstructTree",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The root node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 50
          },
          "name": "tree",
          "type": {
            "fqn": "@winglang/wingsdk.core.ConstructTreeNode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The construct tree version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 45
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/tree:ConstructTree"
    },
    "@winglang/wingsdk.core.ConstructTreeNode": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A node in the construct tree."
      },
      "fqn": "@winglang/wingsdk.core.ConstructTreeNode",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/tree.ts",
        "line": 11
      },
      "name": "ConstructTreeNode",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Is part of the `path`.",
            "stability": "experimental",
            "summary": "The ID of the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 15
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path of the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 20
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The node attributes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 30
          },
          "name": "attributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The child nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 25
          },
          "name": "children",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@winglang/wingsdk.core.ConstructTreeNode"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Information on the construct class that led to this node, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 35
          },
          "name": "constructInfo",
          "optional": true,
          "type": {
            "fqn": "@winglang/wingsdk.core.ConstructInfo"
          }
        }
      ],
      "symbolId": "src/core/tree:ConstructTreeNode"
    },
    "@winglang/wingsdk.core.DependencyGraph": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "remarks": "This graph includes the dependency relationships between all nodes in the\nnode (construct) sub-tree who's root is this Node.\n\nNote that this means that lonely nodes (no dependencies and no dependants) are also included in this graph as\nchildless children of the root node of the graph.\n\nThe graph does not include cross-scope dependencies. That is, if a child on the current scope depends on a node\nfrom a different scope, that relationship is not represented in this graph.",
        "stability": "experimental",
        "summary": "Represents the dependency graph for a given Node."
      },
      "fqn": "@winglang/wingsdk.core.DependencyGraph",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/core/dependency.ts",
          "line": 21
        },
        "parameters": [
          {
            "name": "node",
            "type": {
              "fqn": "constructs.Node"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/dependency.ts",
        "line": 18
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a topologically sorted array of the constructs in the sub-graph."
          },
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 84
          },
          "name": "topology",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "constructs.IConstruct"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "DependencyGraph",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "remarks": "Note that this vertex will always have `null` as its `.value` since it is an artifical root\nthat binds all the connected spaces of the graph.",
            "stability": "experimental",
            "summary": "Returns the root of the graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 77
          },
          "name": "root",
          "type": {
            "fqn": "@winglang/wingsdk.core.DependencyVertex"
          }
        }
      ],
      "symbolId": "src/core/dependency:DependencyGraph"
    },
    "@winglang/wingsdk.core.DependencyVertex": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "remarks": "The value of each vertex is an `IConstruct` that is accessible via the `.value` getter.",
        "stability": "experimental",
        "summary": "Represents a vertex in the graph."
      },
      "fqn": "@winglang/wingsdk.core.DependencyVertex",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/core/dependency.ts",
          "line": 101
        },
        "parameters": [
          {
            "name": "value",
            "optional": true,
            "type": {
              "fqn": "constructs.IConstruct"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/dependency.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "remarks": "Also updates the parents of `dep`, so that it contains this node as a parent.\n\nThis operation will fail in case it creates a cycle in the graph.",
            "stability": "experimental",
            "summary": "Adds a vertex as a dependency of the current node."
          },
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 158
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "summary": "The dependency."
              },
              "name": "dep",
              "type": {
                "fqn": "@winglang/wingsdk.core.DependencyVertex"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns a topologically sorted array of the constructs in the sub-graph."
          },
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 131
          },
          "name": "topology",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "constructs.IConstruct"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "DependencyVertex",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the parents of the vertex (i.e dependants)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 124
          },
          "name": "inbound",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@winglang/wingsdk.core.DependencyVertex"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the children of the vertex (i.e dependencies)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 117
          },
          "name": "outbound",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@winglang/wingsdk.core.DependencyVertex"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "`null` in case this is the root of the graph.",
            "stability": "experimental",
            "summary": "Returns the IConstruct this graph vertex represents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/dependency.ts",
            "line": 110
          },
          "name": "value",
          "optional": true,
          "type": {
            "fqn": "constructs.IConstruct"
          }
        }
      ],
      "symbolId": "src/core/dependency:DependencyVertex"
    },
    "@winglang/wingsdk.core.Direction": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "remarks": "Visually speaking, if a resource A has an outbound connection with resource B,\nthe arrow would point from A to B, and vice versa for inbound connections.",
        "stability": "experimental",
        "summary": "The direction of a connection."
      },
      "fqn": "@winglang/wingsdk.core.Direction",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 216
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Indicates that this resource calls, triggers, or references the resource it is connected to."
          },
          "name": "OUTBOUND"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Indicates that this resource is called, triggered, or referenced by the resource it is connected to."
          },
          "name": "INBOUND"
        }
      ],
      "name": "Direction",
      "namespace": "core",
      "symbolId": "src/core/resource:Direction"
    },
    "@winglang/wingsdk.core.Files": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Handles the synthesis of files."
      },
      "fqn": "@winglang/wingsdk.core.Files",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/core/files.ts",
          "line": 39
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.core.FilesProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/files.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "remarks": "The artifact produced\ndepends on what synthesizer was used.",
            "stability": "experimental",
            "summary": "Synthesize the app into the output directory."
          },
          "locationInModule": {
            "filename": "src/core/files.ts",
            "line": 54
          },
          "name": "synth",
          "parameters": [
            {
              "docs": {
                "summary": "The output directory, if not specified, the app's outdir will be used."
              },
              "name": "outdir",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Files",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The path to a state file which will track all synthesized files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/files.ts",
            "line": 37
          },
          "name": "stateFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/files:Files"
    },
    "@winglang/wingsdk.core.FilesProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for `Files`."
      },
      "fqn": "@winglang/wingsdk.core.FilesProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/files.ts",
        "line": 16
      },
      "name": "FilesProps",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The app with files to synthesize."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/files.ts",
            "line": 20
          },
          "name": "app",
          "type": {
            "fqn": "@winglang/wingsdk.core.IApp"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no state file",
            "remarks": "If a\nstatefile is not specified, we won't be able to remove extrenous files.",
            "stability": "experimental",
            "summary": "The path to a state file which will track all synthesized files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/files.ts",
            "line": 27
          },
          "name": "stateFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/files:FilesProps"
    },
    "@winglang/wingsdk.core.IApp": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "A Wing application."
      },
      "fqn": "@winglang/wingsdk.core.IApp",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/app.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Synthesize the app into an artifact."
          },
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 21
          },
          "name": "synth",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IApp",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Directory where artifacts are synthesized to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/app.ts",
            "line": 17
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/app:IApp"
    },
    "@winglang/wingsdk.core.IInflightHost": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "A resource that can run inflight code."
      },
      "fqn": "@winglang/wingsdk.core.IInflightHost",
      "interfaces": [
        "@winglang/wingsdk.core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 13
      },
      "name": "IInflightHost",
      "namespace": "core",
      "symbolId": "src/core/resource:IInflightHost"
    },
    "@winglang/wingsdk.core.IInspectable": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for examining a construct and exposing metadata."
      },
      "fqn": "@winglang/wingsdk.core.IInspectable",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/tree.ts",
        "line": 160
      },
      "name": "IInspectable",
      "namespace": "core",
      "symbolId": "src/core/tree:IInspectable"
    },
    "@winglang/wingsdk.core.IResource": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Abstract interface for `Resource`."
      },
      "fqn": "@winglang/wingsdk.core.IResource",
      "interfaces": [
        "@winglang/wingsdk.core.IInspectable",
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 18
      },
      "name": "IResource",
      "namespace": "core",
      "symbolId": "src/core/resource:IResource"
    },
    "@winglang/wingsdk.core.Inflight": {
      "assembly": "@winglang/wingsdk",
      "base": "constructs.Construct",
      "docs": {
        "deprecated": "use an interface modeling the specific inflight behavior\nsuch as `cloud.IFunctionHandler`",
        "remarks": "In practice, it's a resource with one inflight method named\n\"handle\".",
        "stability": "deprecated",
        "summary": "Represents a unit of application code that can be executed by a cloud resource."
      },
      "fqn": "@winglang/wingsdk.core.Inflight",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "src/core/inflight.ts",
          "line": 128
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.core.InflightProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 124
      },
      "name": "Inflight",
      "namespace": "core",
      "symbolId": "src/core/inflight:Inflight"
    },
    "@winglang/wingsdk.core.InflightBinding": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A resource binding."
      },
      "fqn": "@winglang/wingsdk.core.InflightBinding",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 154
      },
      "name": "InflightBinding",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The list of operations used on the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 163
          },
          "name": "ops",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 158
          },
          "name": "resource",
          "type": {
            "fqn": "@winglang/wingsdk.core.IResource"
          }
        }
      ],
      "symbolId": "src/core/inflight:InflightBinding"
    },
    "@winglang/wingsdk.core.InflightClient": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Utility class with functions about inflight clients."
      },
      "fqn": "@winglang/wingsdk.core.InflightClient",
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 169
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a `Code` instance with code for creating an inflight client."
          },
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 173
          },
          "name": "for",
          "parameters": [
            {
              "name": "filename",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "clientClass",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "args",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.core.Code"
            }
          },
          "static": true
        }
      ],
      "name": "InflightClient",
      "namespace": "core",
      "symbolId": "src/core/inflight:InflightClient"
    },
    "@winglang/wingsdk.core.InflightProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for `Inflight`."
      },
      "fqn": "@winglang/wingsdk.core.InflightProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 99
      },
      "name": "InflightProps",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The JavaScript code needs be in the form `async handle(event) { ... }`, and\nall references to resources must be made through `this.<resource>`.",
            "stability": "experimental",
            "summary": "Reference to the inflight code. Only JavaScript code is currently supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 107
          },
          "name": "code",
          "type": {
            "fqn": "@winglang/wingsdk.core.Code"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no bindings",
            "stability": "experimental",
            "summary": "Resource binding information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 113
          },
          "name": "bindings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@winglang/wingsdk.core.InflightBinding"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/core/inflight:InflightProps"
    },
    "@winglang/wingsdk.core.Language": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "The language of a piece of code."
      },
      "fqn": "@winglang/wingsdk.core.Language",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 58
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Node.js."
          },
          "name": "NODE_JS"
        }
      ],
      "name": "Language",
      "namespace": "core",
      "symbolId": "src/core/inflight:Language"
    },
    "@winglang/wingsdk.core.NodeJsCode": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.Code",
      "docs": {
        "stability": "experimental",
        "summary": "Reference to a piece of Node.js code."
      },
      "fqn": "@winglang/wingsdk.core.NodeJsCode",
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/inflight.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Reference code from a file path."
          },
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 70
          },
          "name": "fromFile",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.core.NodeJsCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Reference code directly from a string."
          },
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 77
          },
          "name": "fromInline",
          "parameters": [
            {
              "name": "text",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.core.NodeJsCode"
            }
          },
          "static": true
        }
      ],
      "name": "NodeJsCode",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The language of the code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 87
          },
          "name": "language",
          "overrides": "@winglang/wingsdk.core.Code",
          "type": {
            "fqn": "@winglang/wingsdk.core.Language"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A path to the code in the user's file system that can be referenced for bundling purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/inflight.ts",
            "line": 88
          },
          "name": "path",
          "overrides": "@winglang/wingsdk.core.Code",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/core/inflight:NodeJsCode"
    },
    "@winglang/wingsdk.core.OperationAnnotation": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "example": "{ \"this.inner\": { ops: [\"put\"] }, \"other\": { ops: [\"get\"] } }",
        "remarks": "The following example says that the operation may call \"put\" on a resource\nat \"this.inner\", or it may call \"get\" on a resource passed as an argument named\n\"other\".",
        "stability": "experimental",
        "summary": "Annotations about what resources an inflight operation may access."
      },
      "fqn": "@winglang/wingsdk.core.OperationAnnotation",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 292
      },
      "name": "OperationAnnotation",
      "namespace": "core",
      "symbolId": "src/core/resource:OperationAnnotation"
    },
    "@winglang/wingsdk.core.Resource": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "Shared behavior between all Wing SDK resources."
      },
      "fqn": "@winglang/wingsdk.core.Resource",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new construct node."
        },
        "locationInModule": {
          "filename": "src/construct.ts",
          "line": 463
        },
        "parameters": [
          {
            "docs": {
              "summary": "The scope in which to define this construct."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "remarks": "Must be unique amongst siblings. If\nthe ID includes a path separator (`/`), then it will be replaced by double\ndash `--`.",
              "summary": "The scoped construct ID."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IInspectable",
        "@winglang/wingsdk.core.IResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/resource.ts",
        "line": 47
      },
      "methods": [
        {
          "docs": {
            "remarks": "A connection is a piece of\nmetadata describing how one resource is related to another resource. This\nmetadata is recorded in the tree.json file.",
            "stability": "experimental",
            "summary": "Adds a connection between two resources."
          },
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 58
          },
          "name": "addConnection",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@winglang/wingsdk.core.AddConnectionProps"
              }
            }
          ],
          "static": true
        }
      ],
      "name": "Resource",
      "namespace": "core",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "A non-stateful resource does not remember information about past\ntransactions or events, and can typically be replaced by a cloud provider\nwith a fresh copy without any consequences.",
            "stability": "experimental",
            "summary": "Whether a resource is stateful, i.e. it stores information that is not defined by your application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/resource.ts",
            "line": 113
          },
          "name": "stateful",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/core/resource:Resource"
    },
    "@winglang/wingsdk.core.TreeInspector": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Inspector that maintains an attribute bag."
      },
      "fqn": "@winglang/wingsdk.core.TreeInspector",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/core/tree.ts",
        "line": 140
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds attribute to bag."
          },
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 152
          },
          "name": "addAttribute",
          "parameters": [
            {
              "docs": {
                "summary": "- key for metadata."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- value of metadata."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "TreeInspector",
      "namespace": "core",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Represents the bag of attributes as key-value pairs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/core/tree.ts",
            "line": 144
          },
          "name": "attributes",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/core/tree:TreeInspector"
    },
    "@winglang/wingsdk.fs.FileBase": {
      "abstract": true,
      "assembly": "@winglang/wingsdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a file to be synthesized in the app's output directory."
      },
      "fqn": "@winglang/wingsdk.fs.FileBase",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Defines a file."
        },
        "locationInModule": {
          "filename": "src/fs/file-base.ts",
          "line": 21
        },
        "parameters": [
          {
            "docs": {
              "summary": "construct scope."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "construct id."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "relative file path."
            },
            "name": "filePath",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/fs/file-base.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Returns the contents of the file to save."
          },
          "locationInModule": {
            "filename": "src/fs/file-base.ts",
            "line": 39
          },
          "name": "render",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Render the contents of the file and save it to the user's file system."
          },
          "locationInModule": {
            "filename": "src/fs/file-base.ts",
            "line": 29
          },
          "name": "save",
          "parameters": [
            {
              "name": "outdir",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "FileBase",
      "namespace": "fs",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The file's relative path to the output directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/fs/file-base.ts",
            "line": 12
          },
          "name": "filePath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/fs/file-base:FileBase"
    },
    "@winglang/wingsdk.fs.JsonFile": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.fs.FileBase",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a text file that should be synthesized in the app's outdir."
      },
      "fqn": "@winglang/wingsdk.fs.JsonFile",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/fs/json-file.ts",
          "line": 20
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "filePath",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.fs.JsonFileProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/fs/json-file.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the contents of the file to save."
          },
          "locationInModule": {
            "filename": "src/fs/json-file.ts",
            "line": 31
          },
          "name": "render",
          "overrides": "@winglang/wingsdk.fs.FileBase",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "JsonFile",
      "namespace": "fs",
      "symbolId": "src/fs/json-file:JsonFile"
    },
    "@winglang/wingsdk.fs.JsonFileProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for `JsonFile`."
      },
      "fqn": "@winglang/wingsdk.fs.JsonFileProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/fs/json-file.ts",
        "line": 7
      },
      "name": "JsonFileProps",
      "namespace": "fs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The object that will be serialized into the file during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/fs/json-file.ts",
            "line": 11
          },
          "name": "obj",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "src/fs/json-file:JsonFileProps"
    },
    "@winglang/wingsdk.fs.TextFile": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.fs.FileBase",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a text file that should be synthesized in the app's outdir."
      },
      "fqn": "@winglang/wingsdk.fs.TextFile",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/fs/text-file.ts",
          "line": 23
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "filePath",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.fs.TextFileProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/fs/text-file.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Append a line to the text file's contents."
          },
          "locationInModule": {
            "filename": "src/fs/text-file.ts",
            "line": 37
          },
          "name": "addLine",
          "parameters": [
            {
              "name": "line",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the contents of the file to save."
          },
          "locationInModule": {
            "filename": "src/fs/text-file.ts",
            "line": 41
          },
          "name": "render",
          "overrides": "@winglang/wingsdk.fs.FileBase",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "TextFile",
      "namespace": "fs",
      "symbolId": "src/fs/text-file:TextFile"
    },
    "@winglang/wingsdk.fs.TextFileProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for `TextFile`."
      },
      "fqn": "@winglang/wingsdk.fs.TextFileProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/fs/text-file.ts",
        "line": 7
      },
      "name": "TextFileProps",
      "namespace": "fs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "They will be joined with newline characters.",
            "stability": "experimental",
            "summary": "The lines of text that will be serialized into the file during synthesis."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/fs/text-file.ts",
            "line": 14
          },
          "name": "lines",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/fs/text-file:TextFileProps"
    },
    "@winglang/wingsdk.sim.App": {
      "assembly": "@winglang/wingsdk",
      "base": "constructs.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "A construct that knows how to synthesize simulator resources into a Wing simulator (.wsim) file."
      },
      "fqn": "@winglang/wingsdk.sim.App",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/app.ts",
          "line": 26
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.core.AppProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IApp"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/app.ts",
        "line": 18
      },
      "methods": [
        {
          "docs": {
            "remarks": "This creates a tree.json file and a .wsim file in the\napp's outdir, and returns a path to the .wsim file.",
            "stability": "experimental",
            "summary": "Synthesize the app."
          },
          "locationInModule": {
            "filename": "src/target-sim/app.ts",
            "line": 39
          },
          "name": "synth",
          "overrides": "@winglang/wingsdk.core.IApp",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "App",
      "namespace": "sim",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Directory where artifacts are synthesized to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/app.ts",
            "line": 22
          },
          "name": "outdir",
          "overrides": "@winglang/wingsdk.core.IApp",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-sim/app:App"
    },
    "@winglang/wingsdk.sim.BaseResourceAttributes": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Schema for resource attributes."
      },
      "fqn": "@winglang/wingsdk.sim.BaseResourceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-sim/schema.ts",
        "line": 22
      },
      "name": "BaseResourceAttributes",
      "namespace": "sim",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource's simulator-unique id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 24
          },
          "name": "handle",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-sim/schema:BaseResourceAttributes"
    },
    "@winglang/wingsdk.sim.BaseResourceSchema": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Schema for individual resources."
      },
      "fqn": "@winglang/wingsdk.sim.BaseResourceSchema",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-sim/schema.ts",
        "line": 10
      },
      "name": "BaseResourceSchema",
      "namespace": "sim",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource-specific attributes that are set after the resource is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 18
          },
          "name": "attrs",
          "type": {
            "fqn": "@winglang/wingsdk.sim.BaseResourceAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource path from the app's construct tree."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 12
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resource-specific properties needed to create this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 16
          },
          "name": "props",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 14
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-sim/schema:BaseResourceSchema"
    },
    "@winglang/wingsdk.sim.Bucket": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.BucketBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IBucketClient`"
        },
        "stability": "experimental",
        "summary": "Simulator implementation of `cloud.Bucket`."
      },
      "fqn": "@winglang/wingsdk.sim.Bucket",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/bucket.ts",
          "line": 16
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.BucketProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.sim.ISimulatorResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/bucket.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/bucket.ts",
            "line": 22
          },
          "name": "toSimulator",
          "overrides": "@winglang/wingsdk.sim.ISimulatorResource",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "Bucket",
      "namespace": "sim",
      "symbolId": "src/target-sim/bucket:Bucket"
    },
    "@winglang/wingsdk.sim.Counter": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.CounterBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ICounterClient`"
        },
        "stability": "experimental",
        "summary": "Simulator implementation of `cloud.Counter`."
      },
      "fqn": "@winglang/wingsdk.sim.Counter",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/counter.ts",
          "line": 16
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.CounterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.sim.ISimulatorResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/counter.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/counter.ts",
            "line": 22
          },
          "name": "toSimulator",
          "overrides": "@winglang/wingsdk.sim.ISimulatorResource",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "Counter",
      "namespace": "sim",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The initial value of the counter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/counter.ts",
            "line": 15
          },
          "name": "initial",
          "overrides": "@winglang/wingsdk.cloud.CounterBase",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/target-sim/counter:Counter"
    },
    "@winglang/wingsdk.sim.Function": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.FunctionBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IFunctionClient`"
        },
        "stability": "experimental",
        "summary": "Simulator implementation of `cloud.Function`."
      },
      "fqn": "@winglang/wingsdk.sim.Function",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/function.ts",
          "line": 24
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "inflight",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.IFunctionHandler"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.FunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.sim.ISimulatorResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/function.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/function.ts",
            "line": 39
          },
          "name": "toSimulator",
          "overrides": "@winglang/wingsdk.sim.ISimulatorResource",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "Function",
      "namespace": "sim",
      "symbolId": "src/target-sim/function:Function"
    },
    "@winglang/wingsdk.sim.ISimulatorResource": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Interfaces shared by all polycon implementations (preflight classes) targeting the simulator."
      },
      "fqn": "@winglang/wingsdk.sim.ISimulatorResource",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-sim/resource.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/resource.ts",
            "line": 12
          },
          "name": "toSimulator",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "ISimulatorResource",
      "namespace": "sim",
      "symbolId": "src/target-sim/resource:ISimulatorResource"
    },
    "@winglang/wingsdk.sim.ISimulatorResourceInstance": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Shared interface for resource simulations."
      },
      "fqn": "@winglang/wingsdk.sim.ISimulatorResourceInstance",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-sim/resource.ts",
        "line": 25
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Stop the resource and clean up any physical resources it may have created (files, ports, etc)."
          },
          "locationInModule": {
            "filename": "src/target-sim/resource.ts",
            "line": 35
          },
          "name": "cleanup"
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Perform any async initialization required by the resource."
          },
          "locationInModule": {
            "filename": "src/target-sim/resource.ts",
            "line": 29
          },
          "name": "init"
        }
      ],
      "name": "ISimulatorResourceInstance",
      "namespace": "sim",
      "symbolId": "src/target-sim/resource:ISimulatorResourceInstance"
    },
    "@winglang/wingsdk.sim.Logger": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.LoggerBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ILoggerClient`"
        },
        "stability": "experimental",
        "summary": "Simulator implementation of `cloud.Logger`."
      },
      "fqn": "@winglang/wingsdk.sim.Logger",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/logger.ts",
          "line": 15
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.sim.ISimulatorResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/logger.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/logger.ts",
            "line": 19
          },
          "name": "toSimulator",
          "overrides": "@winglang/wingsdk.sim.ISimulatorResource",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "Logger",
      "namespace": "sim",
      "symbolId": "src/target-sim/logger:Logger"
    },
    "@winglang/wingsdk.sim.PolyconFactory": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Polycon factory which resolves polycons in `cloud` into preflight resources for the simulator target."
      },
      "fqn": "@winglang/wingsdk.sim.PolyconFactory",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "interfaces": [
        "polycons.IPolyconFactory"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/factory.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Resolve the parameters needed for creating a specific polycon into a concrete construct."
          },
          "locationInModule": {
            "filename": "src/target-sim/factory.ts",
            "line": 16
          },
          "name": "resolve",
          "overrides": "polycons.IPolyconFactory",
          "parameters": [
            {
              "name": "polyconId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "args",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "constructs.IConstruct"
            }
          },
          "variadic": true
        }
      ],
      "name": "PolyconFactory",
      "namespace": "sim",
      "symbolId": "src/target-sim/factory:PolyconFactory"
    },
    "@winglang/wingsdk.sim.Queue": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.QueueBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IQueueClient`"
        },
        "stability": "experimental",
        "summary": "Simulator implementation of `cloud.Queue`."
      },
      "fqn": "@winglang/wingsdk.sim.Queue",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/queue.ts",
          "line": 21
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.QueueProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.sim.ISimulatorResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/queue.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a function to consume messages from this queue."
          },
          "locationInModule": {
            "filename": "src/target-sim/queue.ts",
            "line": 29
          },
          "name": "onMessage",
          "overrides": "@winglang/wingsdk.cloud.QueueBase",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.QueueOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/queue.ts",
            "line": 91
          },
          "name": "toSimulator",
          "overrides": "@winglang/wingsdk.sim.ISimulatorResource",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "Queue",
      "namespace": "sim",
      "symbolId": "src/target-sim/queue:Queue"
    },
    "@winglang/wingsdk.sim.Topic": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.TopicBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ITopicClient`"
        },
        "stability": "experimental",
        "summary": "Simulator implementation of `cloud.Topic`."
      },
      "fqn": "@winglang/wingsdk.sim.Topic",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-sim/topic.ts",
          "line": 18
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.TopicProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.sim.ISimulatorResource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-sim/topic.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates function to send messages when published."
          },
          "locationInModule": {
            "filename": "src/target-sim/topic.ts",
            "line": 24
          },
          "name": "onMessage",
          "overrides": "@winglang/wingsdk.cloud.TopicBase",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.TopicOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Convert this resource to a resource schema for the simulator."
          },
          "locationInModule": {
            "filename": "src/target-sim/topic.ts",
            "line": 71
          },
          "name": "toSimulator",
          "overrides": "@winglang/wingsdk.sim.ISimulatorResource",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        }
      ],
      "name": "Topic",
      "namespace": "sim",
      "symbolId": "src/target-sim/topic:Topic"
    },
    "@winglang/wingsdk.sim.WingSimulatorSchema": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Schema for simulator.json."
      },
      "fqn": "@winglang/wingsdk.sim.WingSimulatorSchema",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-sim/schema.ts",
        "line": 2
      },
      "name": "WingSimulatorSchema",
      "namespace": "sim",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The list of resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 4
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The version of the Wing SDK used to synthesize the .wsim file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-sim/schema.ts",
            "line": 6
          },
          "name": "sdkVersion",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-sim/schema:WingSimulatorSchema"
    },
    "@winglang/wingsdk.std.Duration": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a length of time."
      },
      "fqn": "@winglang/wingsdk.std.Duration",
      "kind": "class",
      "locationInModule": {
        "filename": "src/std/duration.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Hours.",
            "stability": "experimental",
            "summary": "Create a Duration representing an amount of hours."
          },
          "locationInModule": {
            "filename": "src/std/duration.ts",
            "line": 21
          },
          "name": "fromHours",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Hours the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.std.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Minutes.",
            "stability": "experimental",
            "summary": "Create a Duration representing an amount of minutes."
          },
          "locationInModule": {
            "filename": "src/std/duration.ts",
            "line": 11
          },
          "name": "fromMinutes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Minutes the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.std.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Seconds.",
            "stability": "experimental",
            "summary": "Create a Duration representing an amount of seconds."
          },
          "locationInModule": {
            "filename": "src/std/duration.ts",
            "line": 31
          },
          "name": "fromSeconds",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Seconds the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.std.Duration"
            }
          },
          "static": true
        }
      ],
      "name": "Duration",
      "namespace": "std",
      "properties": [
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Hours.",
            "stability": "experimental",
            "summary": "Return the total number of hours in this Duration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/std/duration.ts",
            "line": 60
          },
          "name": "hours",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Minutes.",
            "stability": "experimental",
            "summary": "Return the total number of minutes in this Duration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/std/duration.ts",
            "line": 51
          },
          "name": "minutes",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Seconds.",
            "stability": "experimental",
            "summary": "Return the total number of seconds in this Duration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/std/duration.ts",
            "line": 40
          },
          "name": "seconds",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/std/duration:Duration"
    },
    "@winglang/wingsdk.std.ImmutableArray": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Immutable Array."
      },
      "fqn": "@winglang/wingsdk.std.ImmutableArray",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/std/array.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "returns": "the value at the given index",
            "stability": "experimental",
            "summary": "Get the value at the given index."
          },
          "locationInModule": {
            "filename": "src/std/array.ts",
            "line": 22
          },
          "name": "at",
          "parameters": [
            {
              "docs": {
                "summary": "index of the value to get."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ImmutableArray",
      "namespace": "std",
      "properties": [
        {
          "docs": {
            "returns": "the length of the array",
            "stability": "experimental",
            "summary": "The length of the array."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/std/array.ts",
            "line": 13
          },
          "name": "length",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/std/array:ImmutableArray"
    },
    "@winglang/wingsdk.std.ImmutableSet": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Immutable Set."
      },
      "fqn": "@winglang/wingsdk.std.ImmutableSet",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/std/set.ts",
        "line": 8
      },
      "name": "ImmutableSet",
      "namespace": "std",
      "properties": [
        {
          "docs": {
            "returns": "the length of the set",
            "stability": "experimental",
            "summary": "The length of the set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/std/set.ts",
            "line": 13
          },
          "name": "length",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/std/set:ImmutableSet"
    },
    "@winglang/wingsdk.std.MutableArray": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.std.ImmutableArray",
      "docs": {
        "stability": "experimental",
        "summary": "Mutable Array."
      },
      "fqn": "@winglang/wingsdk.std.MutableArray",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/std/array.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "returns": "the value removed",
            "stability": "experimental",
            "summary": "Remove value from end of array."
          },
          "locationInModule": {
            "filename": "src/std/array.ts",
            "line": 45
          },
          "name": "pop",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add value to end of array."
          },
          "locationInModule": {
            "filename": "src/std/array.ts",
            "line": 36
          },
          "name": "push",
          "parameters": [
            {
              "docs": {
                "summary": "value to add."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "MutableArray",
      "namespace": "std",
      "symbolId": "src/std/array:MutableArray"
    },
    "@winglang/wingsdk.std.MutableSet": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.std.ImmutableSet",
      "docs": {
        "stability": "experimental",
        "summary": "Mutable Set."
      },
      "fqn": "@winglang/wingsdk.std.MutableSet",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/std/set.ts",
        "line": 21
      },
      "methods": [
        {
          "docs": {
            "returns": "true if the value was added, false if it was already in the set",
            "stability": "experimental",
            "summary": "Add value to set."
          },
          "locationInModule": {
            "filename": "src/std/set.ts",
            "line": 27
          },
          "name": "add",
          "parameters": [
            {
              "docs": {
                "summary": "value to add."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.std.MutableSet"
            }
          }
        }
      ],
      "name": "MutableSet",
      "namespace": "std",
      "symbolId": "src/std/set:MutableSet"
    },
    "@winglang/wingsdk.std.String": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "String."
      },
      "fqn": "@winglang/wingsdk.std.String",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/std/string.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "returns": "true if string includes substring",
            "stability": "experimental",
            "summary": "Check if string includes substring."
          },
          "locationInModule": {
            "filename": "src/std/string.ts",
            "line": 33
          },
          "name": "includes",
          "parameters": [
            {
              "docs": {
                "summary": "substring to search for."
              },
              "name": "searchString",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "returns": "array of strings",
            "stability": "experimental",
            "summary": "Split string by separator."
          },
          "locationInModule": {
            "filename": "src/std/string.ts",
            "line": 22
          },
          "name": "split",
          "parameters": [
            {
              "docs": {
                "summary": "separator to split by."
              },
              "name": "separator",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "String",
      "namespace": "std",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The length of the string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/std/string.ts",
            "line": 12
          },
          "name": "length",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/std/string:String"
    },
    "@winglang/wingsdk.testing.ISimulatorContext": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Context that is passed to individual resource simulations."
      },
      "fqn": "@winglang/wingsdk.testing.ISimulatorContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 111
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Traces are breadcrumbs of information about resource\noperations that occurred during simulation, useful for understanding how\nresources interact or debugging an application.",
            "stability": "experimental",
            "summary": "Add a trace."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 133
          },
          "name": "addTrace",
          "parameters": [
            {
              "name": "trace",
              "type": {
                "fqn": "@winglang/wingsdk.testing.Trace"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Throws if the handle isn't valid.",
            "stability": "experimental",
            "summary": "Find a resource simulation by its handle."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 126
          },
          "name": "findInstance",
          "parameters": [
            {
              "name": "handle",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.ISimulatorResourceInstance"
            }
          }
        },
        {
          "abstract": true,
          "async": true,
          "docs": {
            "remarks": "The activity will be\nrun, and the trace will be populated with the result's success or failure.",
            "stability": "experimental",
            "summary": "Register a trace associated with a resource activity."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 139
          },
          "name": "withTrace",
          "parameters": [
            {
              "name": "trace",
              "type": {
                "fqn": "@winglang/wingsdk.testing.IWithTraceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ISimulatorContext",
      "namespace": "testing",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The directory where all assets extracted from `.wsim` file are stored during the simulation run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 116
          },
          "name": "assetsDir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path of the resource that is being simulated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 121
          },
          "name": "resourcePath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/testing/simulator:ISimulatorContext"
    },
    "@winglang/wingsdk.testing.ISimulatorFactory": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "A factory that can turn resource descriptions into (inflight) resource simulations."
      },
      "fqn": "@winglang/wingsdk.testing.ISimulatorFactory",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 462
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Resolve the parameters needed for creating a specific resource simulation."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 466
          },
          "name": "resolve",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "context",
              "type": {
                "fqn": "@winglang/wingsdk.testing.ISimulatorContext"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.ISimulatorResourceInstance"
            }
          }
        }
      ],
      "name": "ISimulatorFactory",
      "namespace": "testing",
      "symbolId": "src/testing/simulator:ISimulatorFactory"
    },
    "@winglang/wingsdk.testing.ISimulatorLifecycleHooks": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "A collection of callbacks that are invoked at key lifecycle events of the simulator."
      },
      "fqn": "@winglang/wingsdk.testing.ISimulatorLifecycleHooks",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 33
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A function to run whenever a trace is emitted."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 37
          },
          "name": "onTrace",
          "parameters": [
            {
              "name": "event",
              "type": {
                "fqn": "@winglang/wingsdk.testing.Trace"
              }
            }
          ]
        }
      ],
      "name": "ISimulatorLifecycleHooks",
      "namespace": "testing",
      "symbolId": "src/testing/simulator:ISimulatorLifecycleHooks"
    },
    "@winglang/wingsdk.testing.ITraceSubscriber": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "A subscriber that can listen for traces emitted by the simulator."
      },
      "fqn": "@winglang/wingsdk.testing.ITraceSubscriber",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 145
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Called when a trace is emitted."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 149
          },
          "name": "callback",
          "parameters": [
            {
              "name": "event",
              "type": {
                "fqn": "@winglang/wingsdk.testing.Trace"
              }
            }
          ]
        }
      ],
      "name": "ITraceSubscriber",
      "namespace": "testing",
      "symbolId": "src/testing/simulator:ITraceSubscriber"
    },
    "@winglang/wingsdk.testing.IWithTraceProps": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Props for `ISimulatorContext.withTrace`."
      },
      "fqn": "@winglang/wingsdk.testing.IWithTraceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 51
      },
      "methods": [
        {
          "abstract": true,
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "A function to run as part of the trace."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 60
          },
          "name": "activity",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IWithTraceProps",
      "namespace": "testing",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The trace message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 55
          },
          "name": "message",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "src/testing/simulator:IWithTraceProps"
    },
    "@winglang/wingsdk.testing.SimApp": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.sim.App",
      "docs": {
        "remarks": "A great way to write unit tests for the cloud. Just use this as your base app\nand then call `app.startSimulator()` to start an instance of this app inside\na cloud simulator.",
        "stability": "experimental",
        "summary": "A simulated app."
      },
      "fqn": "@winglang/wingsdk.testing.SimApp",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/testing/sim-app.ts",
          "line": 14
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/testing/sim-app.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Takes a snapshot of the output directory, returning a map of filenames to their contents."
          },
          "locationInModule": {
            "filename": "src/testing/sim-app.ts",
            "line": 35
          },
          "name": "snapshot",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "async": true,
          "docs": {
            "returns": "A started `Simulator` instance. No need to call `start()` again.",
            "stability": "experimental",
            "summary": "Creates a simulator and starts it."
          },
          "locationInModule": {
            "filename": "src/testing/sim-app.ts",
            "line": 23
          },
          "name": "startSimulator",
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.testing.Simulator"
            }
          }
        }
      ],
      "name": "SimApp",
      "namespace": "testing",
      "symbolId": "src/testing/sim-app:SimApp"
    },
    "@winglang/wingsdk.testing.Simulator": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "A simulator that can be used to test your application locally."
      },
      "fqn": "@winglang/wingsdk.testing.Simulator",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/testing/simulator.ts",
          "line": 168
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.testing.SimulatorProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 155
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Get a simulated resource instance."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 358
          },
          "name": "getResource",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Obtain a resource's configuration, including its type, props, and attrs."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 369
          },
          "name": "getResourceConfig",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.sim.BaseResourceSchema"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Get a list of all resource paths."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 344
          },
          "name": "listResources",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Get a list of all traces added during the most recent simulation run."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 351
          },
          "name": "listTraces",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@winglang/wingsdk.testing.Trace"
                },
                "kind": "array"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Register a subscriber that will be notified when a trace is emitted by the simulator."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 385
          },
          "name": "onTrace",
          "parameters": [
            {
              "name": "subscriber",
              "type": {
                "fqn": "@winglang/wingsdk.testing.ITraceSubscriber"
              }
            }
          ]
        },
        {
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Stop the simulation, reload the simulation tree from the latest version of the app file, and restart the simulation."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 331
          },
          "name": "reload"
        },
        {
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Start the simulator."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 218
          },
          "name": "start"
        },
        {
          "async": true,
          "docs": {
            "stability": "experimental",
            "summary": "Stop the simulation and clean up all resources."
          },
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 294
          },
          "name": "stop"
        }
      ],
      "name": "Simulator",
      "namespace": "testing",
      "symbolId": "src/testing/simulator:Simulator"
    },
    "@winglang/wingsdk.testing.SimulatorProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Props for `Simulator`."
      },
      "fqn": "@winglang/wingsdk.testing.SimulatorProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 14
      },
      "name": "SimulatorProps",
      "namespace": "testing",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Path to a Wing simulator file (.wsim)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 18
          },
          "name": "simfile",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a factory that produces simulations for built-in Wing SDK\nresources",
            "stability": "experimental",
            "summary": "The factory that produces resource simulations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 26
          },
          "name": "factory",
          "optional": true,
          "type": {
            "fqn": "@winglang/wingsdk.testing.ISimulatorFactory"
          }
        }
      ],
      "symbolId": "src/testing/simulator:SimulatorProps"
    },
    "@winglang/wingsdk.testing.Testing": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Test utilities."
      },
      "fqn": "@winglang/wingsdk.testing.Testing",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/testing/testing.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "remarks": "The JavaScript code passed to the handler must be in the form of\n`async handle(event) { ... }`, and all references to resources must be\nmade through `this.<resource>`.",
            "stability": "experimental",
            "summary": "Make an `IFunctionHandler`, `IQueueOnMessageHandler` or any other handler on the fly. The resource will have a single method named \"handle\"."
          },
          "locationInModule": {
            "filename": "src/testing/testing.ts",
            "line": 21
          },
          "name": "makeHandler",
          "parameters": [
            {
              "docs": {
                "summary": "The scope to create the handler in."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            },
            {
              "docs": {
                "summary": "The ID of the handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The code of the handler."
              },
              "name": "code",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The bindings of the handler."
              },
              "name": "bindings",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@winglang/wingsdk.core.InflightBinding"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.core.IResource"
            }
          },
          "static": true
        }
      ],
      "name": "Testing",
      "namespace": "testing",
      "symbolId": "src/testing/testing:Testing"
    },
    "@winglang/wingsdk.testing.Trace": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents an trace emitted during simulation."
      },
      "fqn": "@winglang/wingsdk.testing.Trace",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 66
      },
      "name": "Trace",
      "namespace": "testing",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A JSON blob with structured data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 70
          },
          "name": "data",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The path of the resource that emitted the trace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 80
          },
          "name": "sourcePath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of the source that emitted the trace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 75
          },
          "name": "sourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "2020-01-01T00:00:00.000Z",
            "stability": "experimental",
            "summary": "The timestamp of the event, in ISO 8601 format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 91
          },
          "name": "timestamp",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of a trace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/testing/simulator.ts",
            "line": 85
          },
          "name": "type",
          "type": {
            "fqn": "@winglang/wingsdk.testing.TraceType"
          }
        }
      ],
      "symbolId": "src/testing/simulator:Trace"
    },
    "@winglang/wingsdk.testing.TraceType": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "The type of a trace."
      },
      "fqn": "@winglang/wingsdk.testing.TraceType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/testing/simulator.ts",
        "line": 97
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "A trace representing a resource activity."
          },
          "name": "RESOURCE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A trace representing information emitted by the logger."
          },
          "name": "LOG"
        }
      ],
      "name": "TraceType",
      "namespace": "testing",
      "symbolId": "src/testing/simulator:TraceType"
    },
    "@winglang/wingsdk.tfaws.App": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.CdktfApp",
      "docs": {
        "stability": "experimental",
        "summary": "An app that knows how to synthesize constructs into a Terraform configuration for AWS resources."
      },
      "fqn": "@winglang/wingsdk.tfaws.App",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-aws/app.ts",
          "line": 10
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.core.AppProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IApp"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-aws/app.ts",
        "line": 9
      },
      "name": "App",
      "namespace": "tfaws",
      "symbolId": "src/target-tf-aws/app:App"
    },
    "@winglang/wingsdk.tfaws.Bucket": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.BucketBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IBucketClient`"
        },
        "stability": "experimental",
        "summary": "AWS implementation of `cloud.Bucket`."
      },
      "fqn": "@winglang/wingsdk.tfaws.Bucket",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-aws/bucket.ts",
          "line": 19
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.BucketProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-aws/bucket.ts",
        "line": 15
      },
      "name": "Bucket",
      "namespace": "tfaws",
      "symbolId": "src/target-tf-aws/bucket:Bucket"
    },
    "@winglang/wingsdk.tfaws.Counter": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.CounterBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.ICounterClient`"
        },
        "stability": "experimental",
        "summary": "AWS implementation of `cloud.Counter`."
      },
      "fqn": "@winglang/wingsdk.tfaws.Counter",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-aws/counter.ts",
          "line": 17
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.CounterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-aws/counter.ts",
        "line": 14
      },
      "name": "Counter",
      "namespace": "tfaws",
      "symbolId": "src/target-tf-aws/counter:Counter"
    },
    "@winglang/wingsdk.tfaws.Function": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.FunctionBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IFunctionClient`"
        },
        "stability": "experimental",
        "summary": "AWS implementation of `cloud.Function`."
      },
      "fqn": "@winglang/wingsdk.tfaws.Function",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-aws/function.ts",
          "line": 27
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "inflight",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.IFunctionHandler"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.FunctionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-aws/function.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a policy statement to the Lambda role."
          },
          "locationInModule": {
            "filename": "src/target-tf-aws/function.ts",
            "line": 177
          },
          "name": "addPolicyStatements",
          "parameters": [
            {
              "name": "statements",
              "type": {
                "fqn": "@winglang/wingsdk.tfaws.PolicyStatement"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Function",
      "namespace": "tfaws",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Function ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-tf-aws/function.ts",
            "line": 25
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-tf-aws/function:Function"
    },
    "@winglang/wingsdk.tfaws.PolicyStatement": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "AWS IAM Policy Statement."
      },
      "fqn": "@winglang/wingsdk.tfaws.PolicyStatement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-tf-aws/function.ts",
        "line": 207
      },
      "name": "PolicyStatement",
      "namespace": "tfaws",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-tf-aws/function.ts",
            "line": 209
          },
          "name": "action",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Effect (\"Allow\" or \"Deny\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-tf-aws/function.ts",
            "line": 213
          },
          "name": "effect",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-tf-aws/function.ts",
            "line": 211
          },
          "name": "resource",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/target-tf-aws/function:PolicyStatement"
    },
    "@winglang/wingsdk.tfaws.PolyconFactory": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Polycon factory which resolves polycons in `cloud` into preflight resources for the AWS target."
      },
      "fqn": "@winglang/wingsdk.tfaws.PolyconFactory",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "interfaces": [
        "polycons.IPolyconFactory"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-aws/factory.ts",
        "line": 22
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Resolve the parameters needed for creating a specific polycon into a concrete construct."
          },
          "locationInModule": {
            "filename": "src/target-tf-aws/factory.ts",
            "line": 23
          },
          "name": "resolve",
          "overrides": "polycons.IPolyconFactory",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "args",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "constructs.IConstruct"
            }
          },
          "variadic": true
        }
      ],
      "name": "PolyconFactory",
      "namespace": "tfaws",
      "symbolId": "src/target-tf-aws/factory:PolyconFactory"
    },
    "@winglang/wingsdk.tfaws.Queue": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.QueueBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IQueueClient`"
        },
        "stability": "experimental",
        "summary": "AWS implementation of `cloud.Queue`."
      },
      "fqn": "@winglang/wingsdk.tfaws.Queue",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-aws/queue.ts",
          "line": 18
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@winglang/wingsdk.cloud.QueueProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-aws/queue.ts",
        "line": 15
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a function to consume messages from this queue."
          },
          "locationInModule": {
            "filename": "src/target-tf-aws/queue.ts",
            "line": 32
          },
          "name": "onMessage",
          "overrides": "@winglang/wingsdk.cloud.QueueBase",
          "parameters": [
            {
              "name": "inflight",
              "type": {
                "fqn": "@winglang/wingsdk.core.Inflight"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@winglang/wingsdk.cloud.QueueOnMessageProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.cloud.Function"
            }
          }
        }
      ],
      "name": "Queue",
      "namespace": "tfaws",
      "symbolId": "src/target-tf-aws/queue:Queue"
    },
    "@winglang/wingsdk.tfazure.App": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.core.CdktfApp",
      "docs": {
        "stability": "experimental",
        "summary": "An app that knows how to synthesize constructs into a Terraform configuration for Azure resources."
      },
      "fqn": "@winglang/wingsdk.tfazure.App",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-azure/app.ts",
          "line": 43
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.tfazure.AzureAppProps"
            }
          }
        ]
      },
      "interfaces": [
        "@winglang/wingsdk.core.IApp"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-azure/app.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "returns": "App",
            "stability": "experimental",
            "summary": "Recursively search scope of node to find nearest instance of App."
          },
          "locationInModule": {
            "filename": "src/target-tf-azure/app.ts",
            "line": 27
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "to consider as instance of App."
              },
              "name": "construct",
              "optional": true,
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@winglang/wingsdk.tfazure.App"
            }
          },
          "static": true
        }
      ],
      "name": "App",
      "namespace": "tfazure",
      "properties": [
        {
          "docs": {
            "custom": {
              "link": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/resource_group#location"
            },
            "stability": "experimental",
            "summary": "The location context of the App."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-tf-azure/app.ts",
            "line": 41
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-tf-azure/app:App"
    },
    "@winglang/wingsdk.tfazure.AzureAppProps": {
      "assembly": "@winglang/wingsdk",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Azure app props."
      },
      "fqn": "@winglang/wingsdk.tfazure.AzureAppProps",
      "interfaces": [
        "@winglang/wingsdk.core.AppProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/target-tf-azure/app.ts",
        "line": 11
      },
      "name": "AzureAppProps",
      "namespace": "tfazure",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Location for resources to be deployed to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/target-tf-azure/app.ts",
            "line": 13
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/target-tf-azure/app:AzureAppProps"
    },
    "@winglang/wingsdk.tfazure.Bucket": {
      "assembly": "@winglang/wingsdk",
      "base": "@winglang/wingsdk.cloud.BucketBase",
      "docs": {
        "custom": {
          "inflight": "`@winglang/wingsdk.cloud.IBucketClient`"
        },
        "stability": "experimental",
        "summary": "Azure implementation of `cloud.Bucket`."
      },
      "fqn": "@winglang/wingsdk.tfazure.Bucket",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "src/target-tf-azure/bucket.ts",
          "line": 20
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@winglang/wingsdk.cloud.BucketProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-azure/bucket.ts",
        "line": 14
      },
      "name": "Bucket",
      "namespace": "tfazure",
      "symbolId": "src/target-tf-azure/bucket:Bucket"
    },
    "@winglang/wingsdk.tfazure.PolyconFactory": {
      "assembly": "@winglang/wingsdk",
      "docs": {
        "stability": "experimental",
        "summary": "Polycon factory which resolves polycons in `cloud` into preflight resources for the Azure target."
      },
      "fqn": "@winglang/wingsdk.tfazure.PolyconFactory",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "interfaces": [
        "polycons.IPolyconFactory"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/target-tf-azure/factory.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Resolve the parameters needed for creating a specific polycon into a concrete construct."
          },
          "locationInModule": {
            "filename": "src/target-tf-azure/factory.ts",
            "line": 13
          },
          "name": "resolve",
          "overrides": "polycons.IPolyconFactory",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "args",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "constructs.IConstruct"
            }
          },
          "variadic": true
        }
      ],
      "name": "PolyconFactory",
      "namespace": "tfazure",
      "symbolId": "src/target-tf-azure/factory:PolyconFactory"
    }
  },
  "version": "0.0.0",
  "fingerprint": "qmpRBCBxaZsAK/GJLwGFnT6eRMFrT5wQZI4kvXTDJnY="
}