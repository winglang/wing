// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp snapshot 1`] = `
Object {
  "displayName": "IRepository",
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "Amazon.CDK.AWS.ECR.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "displayName": "Repository",
      "fqn": "Amazon.CDK.AWS.ECR.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "RepositoryBase",
      "fqn": "Amazon.CDK.AWS.ECR.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "IRepository",
      "fqn": "Amazon.CDK.AWS.ECR.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
  ],
  "instanceMethods": Array [
    Object {
      "displayName": "AddToResourcePolicy",
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.AddToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Statement",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.AddToResourcePolicy.parameter.Statement",
          "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "PolicyStatement",
                "fqn": "Amazon.CDK.AWS.IAM.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private AddToResourcePolicyResult AddToResourcePolicy(PolicyStatement Statement)",
    },
    Object {
      "displayName": "Grant",
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.Grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Grantee",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.Grant.parameter.Grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "displayName": "Actions",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.Grant.parameter.Actions",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
      ],
      "usage": "private Grant Grant(IGrantable Grantee, string Actions)",
    },
    Object {
      "displayName": "GrantPull",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.GrantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Grantee",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.GrantPull.parameter.Grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private Grant GrantPull(IGrantable Grantee)",
    },
    Object {
      "displayName": "GrantPullPush",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.GrantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Grantee",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.GrantPullPush.parameter.Grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private Grant GrantPullPush(IGrantable Grantee)",
    },
    Object {
      "displayName": "OnCloudTrailEvent",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailEvent.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "Options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailEvent.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "Amazon.CDK.AWS.Events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private Rule OnCloudTrailEvent(string Id, OnEventOptions Options = null)",
    },
    Object {
      "displayName": "OnCloudTrailImagePushed",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailImagePushed.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "Options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnCloudTrailImagePushed.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnCloudTrailImagePushedOptions",
                "fqn": "Amazon.CDK.AWS.ECR.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private Rule OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)",
    },
    Object {
      "displayName": "OnEvent",
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Id",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnEvent.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "Options",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnEvent.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "Amazon.CDK.AWS.Events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private Rule OnEvent(string Id, OnEventOptions Options = null)",
    },
    Object {
      "displayName": "OnImageScanCompleted",
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnImageScanCompleted.parameter.Id",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "Options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.OnImageScanCompleted.parameter.Options",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnImageScanCompletedOptions",
                "fqn": "Amazon.CDK.AWS.ECR.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "private Rule OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)",
    },
    Object {
      "displayName": "RepositoryUriForDigest",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Digest",
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForDigest.parameter.Digest",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "optional": true,
          "type": Object {
            "formattingPattern": "string",
          },
        },
      ],
      "usage": "private string RepositoryUriForDigest(string Digest = null)",
    },
    Object {
      "displayName": "RepositoryUriForTag",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Tag",
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "Amazon.CDK.AWS.ECR.IRepository.RepositoryUriForTag.parameter.Tag",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "optional": true,
          "type": Object {
            "formattingPattern": "string",
          },
        },
      ],
      "usage": "private string RepositoryUriForTag(string Tag = null)",
    },
  ],
  "interfaces": Array [
    Object {
      "displayName": "IResource",
      "fqn": "Amazon.CDK.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "displayName": "Node",
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.Node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ConstructNode",
            "fqn": "Amazon.CDK.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public ConstructNode Node { get; }",
    },
    Object {
      "default": undefined,
      "displayName": "Env",
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.Env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ResourceEnvironment",
            "fqn": "Amazon.CDK.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public ResourceEnvironment Env { get; }",
    },
    Object {
      "default": undefined,
      "displayName": "Stack",
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.Stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "Stack",
            "fqn": "Amazon.CDK.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public Stack Stack { get; }",
    },
    Object {
      "default": undefined,
      "displayName": "RepositoryArn",
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.RepositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "string",
      },
      "usage": "public string RepositoryArn { get; }",
    },
    Object {
      "default": undefined,
      "displayName": "RepositoryName",
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.RepositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "string",
      },
      "usage": "public string RepositoryName { get; }",
    },
    Object {
      "default": undefined,
      "displayName": "RepositoryUri",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.IRepository.property.RepositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "string",
      },
      "usage": "public string RepositoryUri { get; }",
    },
  ],
}
`;

exports[`csharp snapshot 2`] = `
" IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* Amazon.CDK.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>AddToResourcePolicy</code> | Add a policy statement to the repository's resource policy. |
| <code>Grant</code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code>GrantPull</code> | Grant the given identity permissions to pull images in this repository. |
| <code>GrantPullPush</code> | Grant the given identity permissions to pull and push images to this repository. |
| <code>OnCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>OnCloudTrailImagePushed</code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code>OnEvent</code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code>OnImageScanCompleted</code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code>RepositoryUriForDigest</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code>RepositoryUriForTag</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

**<code>AddToResourcePolicy</code>**
\`\`\`csharp
private AddToResourcePolicyResult AddToResourcePolicy(PolicyStatement Statement)
\`\`\`

Add a policy statement to the repository's resource policy.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Statement</code> | <code>Amazon.CDK.AWS.IAM.PolicyStatement</code> | *No description.* |

**<code>Grant</code>**
\`\`\`csharp
private Grant Grant(IGrantable Grantee, string Actions)
\`\`\`

Grant the given principal identity permissions to perform the actions on this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Grantee</code> | <code>Amazon.CDK.AWS.IAM.IGrantable</code> | *No description.* |
| <code>Actions</code> | <code>string</code> | *No description.* |

**<code>GrantPull</code>**
\`\`\`csharp
private Grant GrantPull(IGrantable Grantee)
\`\`\`

Grant the given identity permissions to pull images in this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Grantee</code> | <code>Amazon.CDK.AWS.IAM.IGrantable</code> | *No description.* |

**<code>GrantPullPush</code>**
\`\`\`csharp
private Grant GrantPullPush(IGrantable Grantee)
\`\`\`

Grant the given identity permissions to pull and push images to this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Grantee</code> | <code>Amazon.CDK.AWS.IAM.IGrantable</code> | *No description.* |

**<code>OnCloudTrailEvent</code>**
\`\`\`csharp
private Rule OnCloudTrailEvent(string Id, OnEventOptions Options = null)
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Id</code> | <code>string</code> | The id of the rule. |
| <code>Options</code> | <code>Amazon.CDK.AWS.Events.OnEventOptions</code> | Options for adding the rule. |

**<code>OnCloudTrailImagePushed</code>**
\`\`\`csharp
private Rule OnCloudTrailImagePushed(string Id, OnCloudTrailImagePushedOptions Options = null)
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Id</code> | <code>string</code> | The id of the rule. |
| <code>Options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a></code> | Options for adding the rule. |

**<code>OnEvent</code>**
\`\`\`csharp
private Rule OnEvent(string Id, OnEventOptions Options = null)
\`\`\`

Defines a CloudWatch event rule which triggers for repository events.

Use
\`rule.addEventPattern(pattern)\` to specify a filter.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Id</code> | <code>string</code> | *No description.* |
| <code>Options</code> | <code>Amazon.CDK.AWS.Events.OnEventOptions</code> | *No description.* |

**<code>OnImageScanCompleted</code>**
\`\`\`csharp
private Rule OnImageScanCompleted(string Id, OnImageScanCompletedOptions Options = null)
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Id</code> | <code>string</code> | The id of the rule. |
| <code>Options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a></code> | Options for adding the rule. |

**<code>RepositoryUriForDigest</code>**
\`\`\`csharp
private string RepositoryUriForDigest(string Digest = null)
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Digest</code> | <code>string</code> | Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted). |

**<code>RepositoryUriForTag</code>**
\`\`\`csharp
private string RepositoryUriForTag(string Tag = null)
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>Tag</code> | <code>string</code> | Image tag to use (tools usually default to \\"latest\\" if omitted). |

# Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>Node</code> | <code>Amazon.CDK.ConstructNode</code> | The construct tree node for this construct. |
| <code>Env</code> | <code>Amazon.CDK.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>Stack</code> | <code>Amazon.CDK.Stack</code> | The stack in which this resource is defined. |
| <code>RepositoryArn</code> | <code>string</code> | The ARN of the repository. |
| <code>RepositoryName</code> | <code>string</code> | The name of the repository. |
| <code>RepositoryUri</code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

**<code>Node</code>**
\`\`\`csharp
public ConstructNode Node { get; }
\`\`\`

- *Type:* <code>Amazon.CDK.ConstructNode</code>

The construct tree node for this construct.

---

**<code>Env</code>**
\`\`\`csharp
public ResourceEnvironment Env { get; }
\`\`\`

- *Type:* <code>Amazon.CDK.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>Stack</code>**
\`\`\`csharp
public Stack Stack { get; }
\`\`\`

- *Type:* <code>Amazon.CDK.Stack</code>

The stack in which this resource is defined.

---

**<code>RepositoryArn</code>**
\`\`\`csharp
public string RepositoryArn { get; }
\`\`\`

- *Type:* <code>string</code>

The ARN of the repository.

---

**<code>RepositoryName</code>**
\`\`\`csharp
public string RepositoryName { get; }
\`\`\`

- *Type:* <code>string</code>

The name of the repository.

---

**<code>RepositoryUri</code>**
\`\`\`csharp
public string RepositoryUri { get; }
\`\`\`

- *Type:* <code>string</code>

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`go snapshot 1`] = `
Object {
  "displayName": "IRepository",
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "displayName": "Repository",
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "RepositoryBase",
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "IRepository",
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
  ],
  "instanceMethods": Array [
    Object {
      "displayName": "AddToResourcePolicy",
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.AddToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "statement",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.AddToResourcePolicy.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "PolicyStatement",
                "fqn": "github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func AddToResourcePolicy(statement PolicyStatement) AddToResourcePolicyResult",
    },
    Object {
      "displayName": "Grant",
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.Grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.Grant.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "displayName": "actions",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.Grant.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
      ],
      "usage": "func Grant(grantee IGrantable, actions *string) Grant",
    },
    Object {
      "displayName": "GrantPull",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.GrantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.GrantPull.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func GrantPull(grantee IGrantable) Grant",
    },
    Object {
      "displayName": "GrantPullPush",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.GrantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.GrantPullPush.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func GrantPullPush(grantee IGrantable) Grant",
    },
    Object {
      "displayName": "OnCloudTrailEvent",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnCloudTrailEvent.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnCloudTrailEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "github.com/aws/aws-cdk-go/awscdkawsevents/awscdkawsevents.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func OnCloudTrailEvent(id *string, options OnEventOptions) Rule",
    },
    Object {
      "displayName": "OnCloudTrailImagePushed",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnCloudTrailImagePushed.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnCloudTrailImagePushed.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnCloudTrailImagePushedOptions",
                "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func OnCloudTrailImagePushed(id *string, options OnCloudTrailImagePushedOptions) Rule",
    },
    Object {
      "displayName": "OnEvent",
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnEvent.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "github.com/aws/aws-cdk-go/awscdkawsevents/awscdkawsevents.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func OnEvent(id *string, options OnEventOptions) Rule",
    },
    Object {
      "displayName": "OnImageScanCompleted",
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnImageScanCompleted.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.OnImageScanCompleted.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnImageScanCompletedOptions",
                "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "func OnImageScanCompleted(id *string, options OnImageScanCompletedOptions) Rule",
    },
    Object {
      "displayName": "RepositoryUriForDigest",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.RepositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "digest",
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.RepositoryUriForDigest.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "optional": true,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
      ],
      "usage": "func RepositoryUriForDigest(digest *string) *string",
    },
    Object {
      "displayName": "RepositoryUriForTag",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.RepositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "tag",
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.RepositoryUriForTag.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "optional": true,
          "type": Object {
            "formattingPattern": "*string",
          },
        },
      ],
      "usage": "func RepositoryUriForTag(tag *string) *string",
    },
  ],
  "interfaces": Array [
    Object {
      "displayName": "IResource",
      "fqn": "github.com/aws/aws-cdk-go/awscdk/awscdkcore.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "displayName": "Node",
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.property.Node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ConstructNode",
            "fqn": "github.com/aws/aws-cdk-go/awscdk/awscdkcore.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "func Node() ConstructNode",
    },
    Object {
      "default": undefined,
      "displayName": "Env",
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.property.Env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ResourceEnvironment",
            "fqn": "github.com/aws/aws-cdk-go/awscdk/awscdkcore.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "func Env() ResourceEnvironment",
    },
    Object {
      "default": undefined,
      "displayName": "Stack",
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.property.Stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "Stack",
            "fqn": "github.com/aws/aws-cdk-go/awscdk/awscdkcore.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "func Stack() Stack",
    },
    Object {
      "default": undefined,
      "displayName": "RepositoryArn",
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.property.RepositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "*string",
      },
      "usage": "func RepositoryArn() *string",
    },
    Object {
      "default": undefined,
      "displayName": "RepositoryName",
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.property.RepositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "*string",
      },
      "usage": "func RepositoryName() *string",
    },
    Object {
      "default": undefined,
      "displayName": "RepositoryUri",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.IRepository.property.RepositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "*string",
      },
      "usage": "func RepositoryUri() *string",
    },
  ],
}
`;

exports[`go snapshot 2`] = `
" IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* github.com/aws/aws-cdk-go/awscdk/awscdkcore.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>AddToResourcePolicy</code> | Add a policy statement to the repository's resource policy. |
| <code>Grant</code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code>GrantPull</code> | Grant the given identity permissions to pull images in this repository. |
| <code>GrantPullPush</code> | Grant the given identity permissions to pull and push images to this repository. |
| <code>OnCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>OnCloudTrailImagePushed</code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code>OnEvent</code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code>OnImageScanCompleted</code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code>RepositoryUriForDigest</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code>RepositoryUriForTag</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

**<code>AddToResourcePolicy</code>**
\`\`\`go
func AddToResourcePolicy(statement PolicyStatement) AddToResourcePolicyResult
\`\`\`

Add a policy statement to the repository's resource policy.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>statement</code> | <code>github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.PolicyStatement</code> | *No description.* |

**<code>Grant</code>**
\`\`\`go
func Grant(grantee IGrantable, actions *string) Grant
\`\`\`

Grant the given principal identity permissions to perform the actions on this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable</code> | *No description.* |
| <code>actions</code> | <code>*string</code> | *No description.* |

**<code>GrantPull</code>**
\`\`\`go
func GrantPull(grantee IGrantable) Grant
\`\`\`

Grant the given identity permissions to pull images in this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable</code> | *No description.* |

**<code>GrantPullPush</code>**
\`\`\`go
func GrantPullPush(grantee IGrantable) Grant
\`\`\`

Grant the given identity permissions to pull and push images to this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable</code> | *No description.* |

**<code>OnCloudTrailEvent</code>**
\`\`\`go
func OnCloudTrailEvent(id *string, options OnEventOptions) Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>*string</code> | The id of the rule. |
| <code>options</code> | <code>github.com/aws/aws-cdk-go/awscdkawsevents/awscdkawsevents.OnEventOptions</code> | Options for adding the rule. |

**<code>OnCloudTrailImagePushed</code>**
\`\`\`go
func OnCloudTrailImagePushed(id *string, options OnCloudTrailImagePushedOptions) Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>*string</code> | The id of the rule. |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a></code> | Options for adding the rule. |

**<code>OnEvent</code>**
\`\`\`go
func OnEvent(id *string, options OnEventOptions) Rule
\`\`\`

Defines a CloudWatch event rule which triggers for repository events.

Use
\`rule.addEventPattern(pattern)\` to specify a filter.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>*string</code> | *No description.* |
| <code>options</code> | <code>github.com/aws/aws-cdk-go/awscdkawsevents/awscdkawsevents.OnEventOptions</code> | *No description.* |

**<code>OnImageScanCompleted</code>**
\`\`\`go
func OnImageScanCompleted(id *string, options OnImageScanCompletedOptions) Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>*string</code> | The id of the rule. |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a></code> | Options for adding the rule. |

**<code>RepositoryUriForDigest</code>**
\`\`\`go
func RepositoryUriForDigest(digest *string) *string
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>digest</code> | <code>*string</code> | Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted). |

**<code>RepositoryUriForTag</code>**
\`\`\`go
func RepositoryUriForTag(tag *string) *string
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>tag</code> | <code>*string</code> | Image tag to use (tools usually default to \\"latest\\" if omitted). |

# Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>Node</code> | <code>github.com/aws/aws-cdk-go/awscdk/awscdkcore.ConstructNode</code> | The construct tree node for this construct. |
| <code>Env</code> | <code>github.com/aws/aws-cdk-go/awscdk/awscdkcore.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>Stack</code> | <code>github.com/aws/aws-cdk-go/awscdk/awscdkcore.Stack</code> | The stack in which this resource is defined. |
| <code>RepositoryArn</code> | <code>*string</code> | The ARN of the repository. |
| <code>RepositoryName</code> | <code>*string</code> | The name of the repository. |
| <code>RepositoryUri</code> | <code>*string</code> | The URI of this repository (represents the latest image):. |

---

**<code>Node</code>**
\`\`\`go
func Node() ConstructNode
\`\`\`

- *Type:* <code>github.com/aws/aws-cdk-go/awscdk/awscdkcore.ConstructNode</code>

The construct tree node for this construct.

---

**<code>Env</code>**
\`\`\`go
func Env() ResourceEnvironment
\`\`\`

- *Type:* <code>github.com/aws/aws-cdk-go/awscdk/awscdkcore.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>Stack</code>**
\`\`\`go
func Stack() Stack
\`\`\`

- *Type:* <code>github.com/aws/aws-cdk-go/awscdk/awscdkcore.Stack</code>

The stack in which this resource is defined.

---

**<code>RepositoryArn</code>**
\`\`\`go
func RepositoryArn() *string
\`\`\`

- *Type:* <code>*string</code>

The ARN of the repository.

---

**<code>RepositoryName</code>**
\`\`\`go
func RepositoryName() *string
\`\`\`

- *Type:* <code>*string</code>

The name of the repository.

---

**<code>RepositoryUri</code>**
\`\`\`go
func RepositoryUri() *string
\`\`\`

- *Type:* <code>*string</code>

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`java snapshot 1`] = `
Object {
  "displayName": "IRepository",
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "software.amazon.awscdk.services.ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "displayName": "Repository",
      "fqn": "software.amazon.awscdk.services.ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "RepositoryBase",
      "fqn": "software.amazon.awscdk.services.ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "IRepository",
      "fqn": "software.amazon.awscdk.services.ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
  ],
  "instanceMethods": Array [
    Object {
      "displayName": "addToResourcePolicy",
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.addToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "statement",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.addToResourcePolicy.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "PolicyStatement",
                "fqn": "software.amazon.awscdk.services.iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public AddToResourcePolicyResult addToResourcePolicy(PolicyStatement statement)",
    },
    Object {
      "displayName": "grant",
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.grant.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "displayName": "actions",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.grant.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
      ],
      "usage": "public Grant grant(IGrantable grantee, java.lang.String actions)",
    },
    Object {
      "displayName": "grantPull",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.grantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.grantPull.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public Grant grantPull(IGrantable grantee)",
    },
    Object {
      "displayName": "grantPullPush",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.grantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.grantPullPush.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public Grant grantPullPush(IGrantable grantee)",
    },
    Object {
      "displayName": "onCloudTrailEvent",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailEvent.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "software.amazon.awscdk.services.events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public Rule onCloudTrailEvent(java.lang.String id)
public Rule onCloudTrailEvent(java.lang.String id, OnEventOptions options)",
    },
    Object {
      "displayName": "onCloudTrailImagePushed",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnCloudTrailImagePushedOptions",
                "fqn": "software.amazon.awscdk.services.ecr.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public Rule onCloudTrailImagePushed(java.lang.String id)
public Rule onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)",
    },
    Object {
      "displayName": "onEvent",
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onEvent.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "software.amazon.awscdk.services.events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public Rule onEvent(java.lang.String id)
public Rule onEvent(java.lang.String id, OnEventOptions options)",
    },
    Object {
      "displayName": "onImageScanCompleted",
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.onImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onImageScanCompleted.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.onImageScanCompleted.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnImageScanCompletedOptions",
                "fqn": "software.amazon.awscdk.services.ecr.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public Rule onImageScanCompleted(java.lang.String id)
public Rule onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)",
    },
    Object {
      "displayName": "repositoryUriForDigest",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.repositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "digest",
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "optional": true,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
      ],
      "usage": "public java.lang.String repositoryUriForDigest()
public java.lang.String repositoryUriForDigest(java.lang.String digest)",
    },
    Object {
      "displayName": "repositoryUriForTag",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.repositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "tag",
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "software.amazon.awscdk.services.ecr.IRepository.repositoryUriForTag.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "optional": true,
          "type": Object {
            "formattingPattern": "java.lang.String",
          },
        },
      ],
      "usage": "public java.lang.String repositoryUriForTag()
public java.lang.String repositoryUriForTag(java.lang.String tag)",
    },
  ],
  "interfaces": Array [
    Object {
      "displayName": "IResource",
      "fqn": "software.amazon.awscdk.core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "displayName": "node",
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ConstructNode",
            "fqn": "software.amazon.awscdk.core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public ConstructNode getNode();",
    },
    Object {
      "default": undefined,
      "displayName": "env",
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ResourceEnvironment",
            "fqn": "software.amazon.awscdk.core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public ResourceEnvironment getEnv();",
    },
    Object {
      "default": undefined,
      "displayName": "stack",
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "Stack",
            "fqn": "software.amazon.awscdk.core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public Stack getStack();",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryArn",
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.repositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "java.lang.String",
      },
      "usage": "public java.lang.String getRepositoryArn();",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryName",
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.repositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "java.lang.String",
      },
      "usage": "public java.lang.String getRepositoryName();",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryUri",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.IRepository.property.repositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "java.lang.String",
      },
      "usage": "public java.lang.String getRepositoryUri();",
    },
  ],
}
`;

exports[`java snapshot 2`] = `
" IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* software.amazon.awscdk.core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>addToResourcePolicy</code> | Add a policy statement to the repository's resource policy. |
| <code>grant</code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code>grantPull</code> | Grant the given identity permissions to pull images in this repository. |
| <code>grantPullPush</code> | Grant the given identity permissions to pull and push images to this repository. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailImagePushed</code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code>onEvent</code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code>onImageScanCompleted</code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code>repositoryUriForDigest</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code>repositoryUriForTag</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

**<code>addToResourcePolicy</code>**
\`\`\`java
public AddToResourcePolicyResult addToResourcePolicy(PolicyStatement statement)
\`\`\`

Add a policy statement to the repository's resource policy.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>statement</code> | <code>software.amazon.awscdk.services.iam.PolicyStatement</code> | *No description.* |

**<code>grant</code>**
\`\`\`java
public Grant grant(IGrantable grantee, java.lang.String actions)
\`\`\`

Grant the given principal identity permissions to perform the actions on this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>software.amazon.awscdk.services.iam.IGrantable</code> | *No description.* |
| <code>actions</code> | <code>java.lang.String</code> | *No description.* |

**<code>grantPull</code>**
\`\`\`java
public Grant grantPull(IGrantable grantee)
\`\`\`

Grant the given identity permissions to pull images in this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>software.amazon.awscdk.services.iam.IGrantable</code> | *No description.* |

**<code>grantPullPush</code>**
\`\`\`java
public Grant grantPullPush(IGrantable grantee)
\`\`\`

Grant the given identity permissions to pull and push images to this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>software.amazon.awscdk.services.iam.IGrantable</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`java
public Rule onCloudTrailEvent(java.lang.String id)
public Rule onCloudTrailEvent(java.lang.String id, OnEventOptions options)
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>java.lang.String</code> | The id of the rule. |
| <code>options</code> | <code>software.amazon.awscdk.services.events.OnEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailImagePushed</code>**
\`\`\`java
public Rule onCloudTrailImagePushed(java.lang.String id)
public Rule onCloudTrailImagePushed(java.lang.String id, OnCloudTrailImagePushedOptions options)
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>java.lang.String</code> | The id of the rule. |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a></code> | Options for adding the rule. |

**<code>onEvent</code>**
\`\`\`java
public Rule onEvent(java.lang.String id)
public Rule onEvent(java.lang.String id, OnEventOptions options)
\`\`\`

Defines a CloudWatch event rule which triggers for repository events.

Use
\`rule.addEventPattern(pattern)\` to specify a filter.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>java.lang.String</code> | *No description.* |
| <code>options</code> | <code>software.amazon.awscdk.services.events.OnEventOptions</code> | *No description.* |

**<code>onImageScanCompleted</code>**
\`\`\`java
public Rule onImageScanCompleted(java.lang.String id)
public Rule onImageScanCompleted(java.lang.String id, OnImageScanCompletedOptions options)
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>java.lang.String</code> | The id of the rule. |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a></code> | Options for adding the rule. |

**<code>repositoryUriForDigest</code>**
\`\`\`java
public java.lang.String repositoryUriForDigest()
public java.lang.String repositoryUriForDigest(java.lang.String digest)
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>digest</code> | <code>java.lang.String</code> | Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted). |

**<code>repositoryUriForTag</code>**
\`\`\`java
public java.lang.String repositoryUriForTag()
public java.lang.String repositoryUriForTag(java.lang.String tag)
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>tag</code> | <code>java.lang.String</code> | Image tag to use (tools usually default to \\"latest\\" if omitted). |

# Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>software.amazon.awscdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code>env</code> | <code>software.amazon.awscdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>software.amazon.awscdk.core.Stack</code> | The stack in which this resource is defined. |
| <code>repositoryArn</code> | <code>java.lang.String</code> | The ARN of the repository. |
| <code>repositoryName</code> | <code>java.lang.String</code> | The name of the repository. |
| <code>repositoryUri</code> | <code>java.lang.String</code> | The URI of this repository (represents the latest image):. |

---

**<code>node</code>**
\`\`\`java
public ConstructNode getNode();
\`\`\`

- *Type:* <code>software.amazon.awscdk.core.ConstructNode</code>

The construct tree node for this construct.

---

**<code>env</code>**
\`\`\`java
public ResourceEnvironment getEnv();
\`\`\`

- *Type:* <code>software.amazon.awscdk.core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`java
public Stack getStack();
\`\`\`

- *Type:* <code>software.amazon.awscdk.core.Stack</code>

The stack in which this resource is defined.

---

**<code>repositoryArn</code>**
\`\`\`java
public java.lang.String getRepositoryArn();
\`\`\`

- *Type:* <code>java.lang.String</code>

The ARN of the repository.

---

**<code>repositoryName</code>**
\`\`\`java
public java.lang.String getRepositoryName();
\`\`\`

- *Type:* <code>java.lang.String</code>

The name of the repository.

---

**<code>repositoryUri</code>**
\`\`\`java
public java.lang.String getRepositoryUri();
\`\`\`

- *Type:* <code>java.lang.String</code>

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`python snapshot 1`] = `
Object {
  "displayName": "IRepository",
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "aws_cdk.aws_ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "displayName": "Repository",
      "fqn": "aws_cdk.aws_ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "RepositoryBase",
      "fqn": "aws_cdk.aws_ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "IRepository",
      "fqn": "aws_cdk.aws_ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
  ],
  "instanceMethods": Array [
    Object {
      "displayName": "add_to_resource_policy",
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.add_to_resource_policy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "statement",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.add_to_resource_policy.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "PolicyStatement",
                "fqn": "aws_cdk.aws_iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "def add_to_resource_policy(
  statement: PolicyStatement
) -> AddToResourcePolicyResult",
    },
    Object {
      "displayName": "grant",
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.grant.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "displayName": "actions",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.grant.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "def grant(
  grantee: IGrantable,
  actions: str
) -> Grant",
    },
    Object {
      "displayName": "grant_pull",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "def grant_pull(
  grantee: IGrantable
) -> Grant",
    },
    Object {
      "displayName": "grant_pull_push",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull_push",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.grant_pull_push.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "def grant_pull_push(
  grantee: IGrantable
) -> Grant",
    },
    Object {
      "displayName": "on_cloud_trail_event",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No description",
          "displayName": "description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.description",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "displayName": "event_pattern",
          "docs": Object {
            "links": Array [
              "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            ],
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "EventPattern",
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "displayName": "rule_name",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.ruleName",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "displayName": "target",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_event.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.target",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IRuleTarget",
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
) -> Rule",
    },
    Object {
      "displayName": "on_cloud_trail_image_pushed",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No description",
          "displayName": "description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.description",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "displayName": "event_pattern",
          "docs": Object {
            "links": Array [
              "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            ],
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "EventPattern",
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "displayName": "rule_name",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.ruleName",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "displayName": "target",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.target",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IRuleTarget",
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": "- Watch changes to all tags",
          "displayName": "image_tag",
          "docs": Object {
            "summary": "Only watch changes to this image tag.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_cloud_trail_image_pushed.parameter.image_tag",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.imageTag",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
) -> Rule",
    },
    Object {
      "displayName": "on_event",
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_event",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No description",
          "displayName": "description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.description",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "displayName": "event_pattern",
          "docs": Object {
            "links": Array [
              "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            ],
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "EventPattern",
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "displayName": "rule_name",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.ruleName",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "displayName": "target",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_event.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.target",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IRuleTarget",
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
) -> Rule",
    },
    Object {
      "displayName": "on_image_scan_completed",
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No description",
          "displayName": "description",
          "docs": Object {
            "summary": "A description of the rule's purpose.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.description",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.description",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No additional filtering based on an event pattern.",
          "displayName": "event_pattern",
          "docs": Object {
            "links": Array [
              "https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html",
            ],
            "remarks": "The method that generates the rule probably imposes some type of event
filtering. The filtering implied by what you pass here is added
on top of that filtering.",
            "summary": "Additional restrictions for the event to route to the specified target.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.event_pattern",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.eventPattern",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "EventPattern",
                "fqn": "aws_cdk.aws_events.EventPattern",
                "id": "@aws-cdk/aws-events.EventPattern",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": "AWS CloudFormation generates a unique physical ID.",
          "displayName": "rule_name",
          "docs": Object {
            "summary": "A name for the rule.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.rule_name",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.ruleName",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
        Object {
          "default": "- No target is added to the rule. Use \`addTarget()\` to add a target.",
          "displayName": "target",
          "docs": Object {
            "summary": "The target to register for the event.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.target",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.target",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IRuleTarget",
                "fqn": "aws_cdk.aws_events.IRuleTarget",
                "id": "@aws-cdk/aws-events.IRuleTarget",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": "- Watch the changes to the repository with all image tags",
          "displayName": "image_tags",
          "docs": Object {
            "remarks": "Leave it undefined to watch the full repository.",
            "summary": "Only watch changes to the image tags spedified.",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.on_image_scan_completed.parameter.image_tags",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.imageTags",
          "optional": true,
          "type": Object {
            "formattingPattern": "typing.List[%]",
            "types": Array [
              Object {
                "formattingPattern": "str",
              },
            ],
          },
        },
      ],
      "usage": "def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
) -> Rule",
    },
    Object {
      "displayName": "repository_uri_for_digest",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_digest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "digest",
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_digest.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "def repository_uri_for_digest(
  digest: str = None
) -> str",
    },
    Object {
      "displayName": "repository_uri_for_tag",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_tag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "tag",
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "aws_cdk.aws_ecr.IRepository.repository_uri_for_tag.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "def repository_uri_for_tag(
  tag: str = None
) -> str",
    },
  ],
  "interfaces": Array [
    Object {
      "displayName": "IResource",
      "fqn": "aws_cdk.core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "displayName": "node",
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ConstructNode",
            "fqn": "aws_cdk.core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "node: ConstructNode",
    },
    Object {
      "default": undefined,
      "displayName": "env",
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ResourceEnvironment",
            "fqn": "aws_cdk.core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "env: ResourceEnvironment",
    },
    Object {
      "default": undefined,
      "displayName": "stack",
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "Stack",
            "fqn": "aws_cdk.core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "stack: Stack",
    },
    Object {
      "default": undefined,
      "displayName": "repository_arn",
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_arn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "str",
      },
      "usage": "repository_arn: str",
    },
    Object {
      "default": undefined,
      "displayName": "repository_name",
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_name",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "str",
      },
      "usage": "repository_name: str",
    },
    Object {
      "default": undefined,
      "displayName": "repository_uri",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "aws_cdk.aws_ecr.IRepository.property.repository_uri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "str",
      },
      "usage": "repository_uri: str",
    },
  ],
}
`;

exports[`python snapshot 2`] = `
" IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* aws_cdk.core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>add_to_resource_policy</code> | Add a policy statement to the repository's resource policy. |
| <code>grant</code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code>grant_pull</code> | Grant the given identity permissions to pull images in this repository. |
| <code>grant_pull_push</code> | Grant the given identity permissions to pull and push images to this repository. |
| <code>on_cloud_trail_event</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>on_cloud_trail_image_pushed</code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code>on_event</code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code>on_image_scan_completed</code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code>repository_uri_for_digest</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code>repository_uri_for_tag</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

**<code>add_to_resource_policy</code>**
\`\`\`python
def add_to_resource_policy(
  statement: PolicyStatement
) -> AddToResourcePolicyResult
\`\`\`

Add a policy statement to the repository's resource policy.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>statement</code> | <code>aws_cdk.aws_iam.PolicyStatement</code> | *No description.* |

**<code>grant</code>**
\`\`\`python
def grant(
  grantee: IGrantable,
  actions: str
) -> Grant
\`\`\`

Grant the given principal identity permissions to perform the actions on this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>actions</code> | <code>str</code> | *No description.* |

**<code>grant_pull</code>**
\`\`\`python
def grant_pull(
  grantee: IGrantable
) -> Grant
\`\`\`

Grant the given identity permissions to pull images in this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |

**<code>grant_pull_push</code>**
\`\`\`python
def grant_pull_push(
  grantee: IGrantable
) -> Grant
\`\`\`

Grant the given identity permissions to pull and push images to this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |

**<code>on_cloud_trail_event</code>**
\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
) -> Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |

**<code>on_cloud_trail_image_pushed</code>**
\`\`\`python
def on_cloud_trail_image_pushed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tag: str = None
) -> Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>image_tag</code> | <code>str</code> | Only watch changes to this image tag. |

**<code>on_event</code>**
\`\`\`python
def on_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None
) -> Rule
\`\`\`

Defines a CloudWatch event rule which triggers for repository events.

Use
\`rule.addEventPattern(pattern)\` to specify a filter.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |

**<code>on_image_scan_completed</code>**
\`\`\`python
def on_image_scan_completed(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  image_tags: typing.List[str] = None
) -> Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>image_tags</code> | <code>typing.List[str]</code> | Only watch changes to the image tags spedified. |

**<code>repository_uri_for_digest</code>**
\`\`\`python
def repository_uri_for_digest(
  digest: str = None
) -> str
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>digest</code> | <code>str</code> | Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted). |

**<code>repository_uri_for_tag</code>**
\`\`\`python
def repository_uri_for_tag(
  tag: str = None
) -> str
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>tag</code> | <code>str</code> | Image tag to use (tools usually default to \\"latest\\" if omitted). |

# Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>aws_cdk.core.ConstructNode</code> | The construct tree node for this construct. |
| <code>env</code> | <code>aws_cdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>aws_cdk.core.Stack</code> | The stack in which this resource is defined. |
| <code>repository_arn</code> | <code>str</code> | The ARN of the repository. |
| <code>repository_name</code> | <code>str</code> | The name of the repository. |
| <code>repository_uri</code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

**<code>node</code>**
\`\`\`python
node: ConstructNode
\`\`\`

- *Type:* <code>aws_cdk.core.ConstructNode</code>

The construct tree node for this construct.

---

**<code>env</code>**
\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* <code>aws_cdk.core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`python
stack: Stack
\`\`\`

- *Type:* <code>aws_cdk.core.Stack</code>

The stack in which this resource is defined.

---

**<code>repository_arn</code>**
\`\`\`python
repository_arn: str
\`\`\`

- *Type:* <code>str</code>

The ARN of the repository.

---

**<code>repository_name</code>**
\`\`\`python
repository_name: str
\`\`\`

- *Type:* <code>str</code>

The name of the repository.

---

**<code>repository_uri</code>**
\`\`\`python
repository_uri: str
\`\`\`

- *Type:* <code>str</code>

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`typescript snapshot 1`] = `
Object {
  "displayName": "IRepository",
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "@aws-cdk/aws-ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "displayName": "Repository",
      "fqn": "@aws-cdk/aws-ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "RepositoryBase",
      "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "IRepository",
      "fqn": "@aws-cdk/aws-ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
  ],
  "instanceMethods": Array [
    Object {
      "displayName": "addToResourcePolicy",
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "statement",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "PolicyStatement",
                "fqn": "@aws-cdk/aws-iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public addToResourcePolicy(statement: PolicyStatement): AddToResourcePolicyResult",
    },
    Object {
      "displayName": "grant",
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "displayName": "actions",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
      ],
      "usage": "public grant(grantee: IGrantable, actions: string): Grant",
    },
    Object {
      "displayName": "grantPull",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public grantPull(grantee: IGrantable): Grant",
    },
    Object {
      "displayName": "grantPullPush",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public grantPullPush(grantee: IGrantable): Grant",
    },
    Object {
      "displayName": "onCloudTrailEvent",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "@aws-cdk/aws-events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public onCloudTrailEvent(id: string, options?: OnEventOptions): Rule",
    },
    Object {
      "displayName": "onCloudTrailImagePushed",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnCloudTrailImagePushedOptions",
                "fqn": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions): Rule",
    },
    Object {
      "displayName": "onEvent",
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "@aws-cdk/aws-events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public onEvent(id: string, options?: OnEventOptions): Rule",
    },
    Object {
      "displayName": "onImageScanCompleted",
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "id",
          "docs": Object {
            "summary": "The id of the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.id",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "string",
          },
        },
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnImageScanCompletedOptions",
                "fqn": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions): Rule",
    },
    Object {
      "displayName": "repositoryUriForDigest",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "digest",
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "optional": true,
          "type": Object {
            "formattingPattern": "string",
          },
        },
      ],
      "usage": "public repositoryUriForDigest(digest?: string): string",
    },
    Object {
      "displayName": "repositoryUriForTag",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "tag",
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "optional": true,
          "type": Object {
            "formattingPattern": "string",
          },
        },
      ],
      "usage": "public repositoryUriForTag(tag?: string): string",
    },
  ],
  "interfaces": Array [
    Object {
      "displayName": "IResource",
      "fqn": "@aws-cdk/core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "displayName": "node",
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ConstructNode",
            "fqn": "@aws-cdk/core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public readonly node: ConstructNode;",
    },
    Object {
      "default": undefined,
      "displayName": "env",
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ResourceEnvironment",
            "fqn": "@aws-cdk/core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public readonly env: ResourceEnvironment;",
    },
    Object {
      "default": undefined,
      "displayName": "stack",
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "Stack",
            "fqn": "@aws-cdk/core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "public readonly stack: Stack;",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryArn",
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "string",
      },
      "usage": "public readonly repositoryArn: string;",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryName",
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "string",
      },
      "usage": "public readonly repositoryName: string;",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryUri",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "string",
      },
      "usage": "public readonly repositoryUri: string;",
    },
  ],
}
`;

exports[`typescript snapshot 2`] = `
" IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* @aws-cdk/core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>addToResourcePolicy</code> | Add a policy statement to the repository's resource policy. |
| <code>grant</code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code>grantPull</code> | Grant the given identity permissions to pull images in this repository. |
| <code>grantPullPush</code> | Grant the given identity permissions to pull and push images to this repository. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailImagePushed</code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code>onEvent</code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code>onImageScanCompleted</code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code>repositoryUriForDigest</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code>repositoryUriForTag</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

**<code>addToResourcePolicy</code>**
\`\`\`typescript
public addToResourcePolicy(statement: PolicyStatement): AddToResourcePolicyResult
\`\`\`

Add a policy statement to the repository's resource policy.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>statement</code> | <code>@aws-cdk/aws-iam.PolicyStatement</code> | *No description.* |

**<code>grant</code>**
\`\`\`typescript
public grant(grantee: IGrantable, actions: string): Grant
\`\`\`

Grant the given principal identity permissions to perform the actions on this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>actions</code> | <code>string</code> | *No description.* |

**<code>grantPull</code>**
\`\`\`typescript
public grantPull(grantee: IGrantable): Grant
\`\`\`

Grant the given identity permissions to pull images in this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |

**<code>grantPullPush</code>**
\`\`\`typescript
public grantPullPush(grantee: IGrantable): Grant
\`\`\`

Grant the given identity permissions to pull and push images to this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnEventOptions): Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-events.OnEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailImagePushed</code>**
\`\`\`typescript
public onCloudTrailImagePushed(id: string, options?: OnCloudTrailImagePushedOptions): Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a></code> | Options for adding the rule. |

**<code>onEvent</code>**
\`\`\`typescript
public onEvent(id: string, options?: OnEventOptions): Rule
\`\`\`

Defines a CloudWatch event rule which triggers for repository events.

Use
\`rule.addEventPattern(pattern)\` to specify a filter.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>options</code> | <code>@aws-cdk/aws-events.OnEventOptions</code> | *No description.* |

**<code>onImageScanCompleted</code>**
\`\`\`typescript
public onImageScanCompleted(id: string, options?: OnImageScanCompletedOptions): Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a></code> | Options for adding the rule. |

**<code>repositoryUriForDigest</code>**
\`\`\`typescript
public repositoryUriForDigest(digest?: string): string
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>digest</code> | <code>string</code> | Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted). |

**<code>repositoryUriForTag</code>**
\`\`\`typescript
public repositoryUriForTag(tag?: string): string
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>tag</code> | <code>string</code> | Image tag to use (tools usually default to \\"latest\\" if omitted). |

# Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node for this construct. |
| <code>env</code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code>repositoryArn</code> | <code>string</code> | The ARN of the repository. |
| <code>repositoryName</code> | <code>string</code> | The name of the repository. |
| <code>repositoryUri</code> | <code>string</code> | The URI of this repository (represents the latest image):. |

---

**<code>node</code>**
\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* <code>@aws-cdk/core.ConstructNode</code>

The construct tree node for this construct.

---

**<code>env</code>**
\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* <code>@aws-cdk/core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* <code>@aws-cdk/core.Stack</code>

The stack in which this resource is defined.

---

**<code>repositoryArn</code>**
\`\`\`typescript
public readonly repositoryArn: string;
\`\`\`

- *Type:* <code>string</code>

The ARN of the repository.

---

**<code>repositoryName</code>**
\`\`\`typescript
public readonly repositoryName: string;
\`\`\`

- *Type:* <code>string</code>

The name of the repository.

---

**<code>repositoryUri</code>**
\`\`\`typescript
public readonly repositoryUri: string;
\`\`\`

- *Type:* <code>string</code>

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;

exports[`wing snapshot 1`] = `
Object {
  "displayName": "IRepository",
  "docs": Object {
    "summary": "Represents an ECR repository.",
  },
  "fqn": "@aws-cdk/aws-ecr.IRepository",
  "id": "@aws-cdk/aws-ecr.IRepository",
  "implementations": Array [
    Object {
      "displayName": "Repository",
      "fqn": "@aws-cdk/aws-ecr.Repository",
      "id": "@aws-cdk/aws-ecr.Repository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "RepositoryBase",
      "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
      "id": "@aws-cdk/aws-ecr.RepositoryBase",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
    Object {
      "displayName": "IRepository",
      "fqn": "@aws-cdk/aws-ecr.IRepository",
      "id": "@aws-cdk/aws-ecr.IRepository",
      "packageName": "@aws-cdk/aws-ecr",
      "packageVersion": "1.106.0",
    },
  ],
  "instanceMethods": Array [
    Object {
      "displayName": "addToResourcePolicy",
      "docs": Object {
        "summary": "Add a policy statement to the repository's resource policy.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "statement",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "id": "@aws-cdk/aws-ecr.IRepository.addToResourcePolicy.parameter.statement",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "PolicyStatement",
                "fqn": "@aws-cdk/aws-iam.PolicyStatement",
                "id": "@aws-cdk/aws-iam.PolicyStatement",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "addToResourcePolicy(statement: PolicyStatement): AddToResourcePolicyResult",
    },
    Object {
      "displayName": "grant",
      "docs": Object {
        "summary": "Grant the given principal identity permissions to perform the actions on this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grant",
      "id": "@aws-cdk/aws-ecr.IRepository.grant",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
        Object {
          "default": undefined,
          "displayName": "actions",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "id": "@aws-cdk/aws-ecr.IRepository.grant.parameter.actions",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "grant(grantee: IGrantable, actions: str): Grant",
    },
    Object {
      "displayName": "grantPull",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull images in this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPull",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPull.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "grantPull(grantee: IGrantable): Grant",
    },
    Object {
      "displayName": "grantPullPush",
      "docs": Object {
        "summary": "Grant the given identity permissions to pull and push images to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "id": "@aws-cdk/aws-ecr.IRepository.grantPullPush.parameter.grantee",
          "optional": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "id": "@aws-cdk/aws-iam.IGrantable",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "grantPullPush(grantee: IGrantable): Grant",
    },
    Object {
      "displayName": "onCloudTrailEvent",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Define a CloudWatch event that triggers when something happens to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "@aws-cdk/aws-events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "onCloudTrailEvent(options?: OnEventOptions): Rule",
    },
    Object {
      "displayName": "onCloudTrailImagePushed",
      "docs": Object {
        "remarks": "Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.",
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onCloudTrailImagePushed.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnCloudTrailImagePushedOptions",
                "fqn": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "id": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "onCloudTrailImagePushed(options?: OnCloudTrailImagePushedOptions): Rule",
    },
    Object {
      "displayName": "onEvent",
      "docs": Object {
        "remarks": "Use
\`rule.addEventPattern(pattern)\` to specify a filter.",
        "summary": "Defines a CloudWatch event rule which triggers for repository events.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "id": "@aws-cdk/aws-ecr.IRepository.onEvent",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onEvent.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnEventOptions",
                "fqn": "@aws-cdk/aws-events.OnEventOptions",
                "id": "@aws-cdk/aws-events.OnEventOptions",
                "packageName": "@aws-cdk/aws-events",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "onEvent(options?: OnEventOptions): Rule",
    },
    Object {
      "displayName": "onImageScanCompleted",
      "docs": Object {
        "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "options",
          "docs": Object {
            "summary": "Options for adding the rule.",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "id": "@aws-cdk/aws-ecr.IRepository.onImageScanCompleted.parameter.options",
          "optional": true,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "OnImageScanCompletedOptions",
                "fqn": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "id": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
                "packageName": "@aws-cdk/aws-ecr",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "usage": "onImageScanCompleted(options?: OnImageScanCompletedOptions): Rule",
    },
    Object {
      "displayName": "repositoryUriForDigest",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "digest",
          "docs": Object {
            "summary": "Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted).",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForDigest.parameter.digest",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "repositoryUriForDigest(digest?: str): str",
    },
    Object {
      "displayName": "repositoryUriForTag",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
        "summary": "Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "tag",
          "docs": Object {
            "summary": "Image tag to use (tools usually default to \\"latest\\" if omitted).",
          },
          "fqn": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "id": "@aws-cdk/aws-ecr.IRepository.repositoryUriForTag.parameter.tag",
          "optional": true,
          "type": Object {
            "formattingPattern": "str",
          },
        },
      ],
      "usage": "repositoryUriForTag(tag?: str): str",
    },
  ],
  "interfaces": Array [
    Object {
      "displayName": "IResource",
      "fqn": "@aws-cdk/core.IResource",
      "id": "@aws-cdk/core.IResource",
      "packageName": "@aws-cdk/core",
      "packageVersion": "1.106.0",
    },
  ],
  "properties": Array [
    Object {
      "default": undefined,
      "displayName": "node",
      "docs": Object {
        "summary": "The construct tree node for this construct.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.node",
      "id": "@aws-cdk/aws-ecr.IRepository.property.node",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ConstructNode",
            "fqn": "@aws-cdk/core.ConstructNode",
            "id": "@aws-cdk/core.ConstructNode",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "node: ConstructNode;",
    },
    Object {
      "default": undefined,
      "displayName": "env",
      "docs": Object {
        "remarks": "For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.",
        "summary": "The environment this resource belongs to.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.env",
      "id": "@aws-cdk/aws-ecr.IRepository.property.env",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "ResourceEnvironment",
            "fqn": "@aws-cdk/core.ResourceEnvironment",
            "id": "@aws-cdk/core.ResourceEnvironment",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "env: ResourceEnvironment;",
    },
    Object {
      "default": undefined,
      "displayName": "stack",
      "docs": Object {
        "summary": "The stack in which this resource is defined.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "id": "@aws-cdk/aws-ecr.IRepository.property.stack",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "%",
        "types": Array [
          Object {
            "displayName": "Stack",
            "fqn": "@aws-cdk/core.Stack",
            "id": "@aws-cdk/core.Stack",
            "packageName": "@aws-cdk/core",
            "packageVersion": "99.99.99",
          },
        ],
      },
      "usage": "stack: Stack;",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryArn",
      "docs": Object {
        "summary": "The ARN of the repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryArn",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "str",
      },
      "usage": "repositoryArn: str;",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryName",
      "docs": Object {
        "summary": "The name of the repository.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryName",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "str",
      },
      "usage": "repositoryName: str;",
    },
    Object {
      "default": undefined,
      "displayName": "repositoryUri",
      "docs": Object {
        "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
        "summary": "The URI of this repository (represents the latest image):.",
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "id": "@aws-cdk/aws-ecr.IRepository.property.repositoryUri",
      "optional": undefined,
      "type": Object {
        "formattingPattern": "str",
      },
      "usage": "repositoryUri: str;",
    },
  ],
}
`;

exports[`wing snapshot 2`] = `
" IRepository <a name=\\"IRepository\\" id=\\"@aws-cdk/aws-ecr.IRepository\\"></a>

- *Extends:* @aws-cdk/core.IResource

- *Implemented By:* <a href=\\"#@aws-cdk/aws-ecr.Repository\\">Repository</a>, <a href=\\"#@aws-cdk/aws-ecr.RepositoryBase\\">RepositoryBase</a>, <a href=\\"#@aws-cdk/aws-ecr.IRepository\\">IRepository</a>

Represents an ECR repository.

# Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>addToResourcePolicy</code> | Add a policy statement to the repository's resource policy. |
| <code>grant</code> | Grant the given principal identity permissions to perform the actions on this repository. |
| <code>grantPull</code> | Grant the given identity permissions to pull images in this repository. |
| <code>grantPullPush</code> | Grant the given identity permissions to pull and push images to this repository. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailImagePushed</code> | Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository. |
| <code>onEvent</code> | Defines a CloudWatch event rule which triggers for repository events. |
| <code>onImageScanCompleted</code> | Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed. |
| <code>repositoryUriForDigest</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |
| <code>repositoryUriForTag</code> | Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`. |

---

**<code>addToResourcePolicy</code>**
\`\`\`wing
addToResourcePolicy(statement: PolicyStatement): AddToResourcePolicyResult
\`\`\`

Add a policy statement to the repository's resource policy.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>statement</code> | <code>@aws-cdk/aws-iam.PolicyStatement</code> | *No description.* |

**<code>grant</code>**
\`\`\`wing
grant(grantee: IGrantable, actions: str): Grant
\`\`\`

Grant the given principal identity permissions to perform the actions on this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>actions</code> | <code>str</code> | *No description.* |

**<code>grantPull</code>**
\`\`\`wing
grantPull(grantee: IGrantable): Grant
\`\`\`

Grant the given identity permissions to pull images in this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |

**<code>grantPullPush</code>**
\`\`\`wing
grantPullPush(grantee: IGrantable): Grant
\`\`\`

Grant the given identity permissions to pull and push images to this repository.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>grantee</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`wing
onCloudTrailEvent(options?: OnEventOptions): Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>options</code> | <code>@aws-cdk/aws-events.OnEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailImagePushed</code>**
\`\`\`wing
onCloudTrailImagePushed(options?: OnCloudTrailImagePushedOptions): Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions\\">OnCloudTrailImagePushedOptions</a></code> | Options for adding the rule. |

**<code>onEvent</code>**
\`\`\`wing
onEvent(options?: OnEventOptions): Rule
\`\`\`

Defines a CloudWatch event rule which triggers for repository events.

Use
\`rule.addEventPattern(pattern)\` to specify a filter.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>options</code> | <code>@aws-cdk/aws-events.OnEventOptions</code> | *No description.* |

**<code>onImageScanCompleted</code>**
\`\`\`wing
onImageScanCompleted(options?: OnImageScanCompletedOptions): Rule
\`\`\`

Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>options</code> | <code><a href=\\"#@aws-cdk/aws-ecr.OnImageScanCompletedOptions\\">OnImageScanCompletedOptions</a></code> | Options for adding the rule. |

**<code>repositoryUriForDigest</code>**
\`\`\`wing
repositoryUriForDigest(digest?: str): str
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[@DIGEST]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>digest</code> | <code>str</code> | Image digest to use (tools usually default to the image with the \\"latest\\" tag if omitted). |

**<code>repositoryUriForTag</code>**
\`\`\`wing
repositoryUriForTag(tag?: str): str
\`\`\`

Returns the URI of the repository for a certain tag. Can be used in \`docker push/pull\`.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>tag</code> | <code>str</code> | Image tag to use (tools usually default to \\"latest\\" if omitted). |

# Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node for this construct. |
| <code>env</code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code>repositoryArn</code> | <code>str</code> | The ARN of the repository. |
| <code>repositoryName</code> | <code>str</code> | The name of the repository. |
| <code>repositoryUri</code> | <code>str</code> | The URI of this repository (represents the latest image):. |

---

**<code>node</code>**
\`\`\`wing
node: ConstructNode;
\`\`\`

- *Type:* <code>@aws-cdk/core.ConstructNode</code>

The construct tree node for this construct.

---

**<code>env</code>**
\`\`\`wing
env: ResourceEnvironment;
\`\`\`

- *Type:* <code>@aws-cdk/core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`wing
stack: Stack;
\`\`\`

- *Type:* <code>@aws-cdk/core.Stack</code>

The stack in which this resource is defined.

---

**<code>repositoryArn</code>**
\`\`\`wing
repositoryArn: str;
\`\`\`

- *Type:* <code>str</code>

The ARN of the repository.

---

**<code>repositoryName</code>**
\`\`\`wing
repositoryName: str;
\`\`\`

- *Type:* <code>str</code>

The name of the repository.

---

**<code>repositoryUri</code>**
\`\`\`wing
repositoryUri: str;
\`\`\`

- *Type:* <code>str</code>

The URI of this repository (represents the latest image):.

ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY

---
"
`;
