// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`construct-library 1`] = `
"# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Resources <a name=\\"Resources\\" id=\\"Resources\\"></a>

### GoodbyeBucket <a name=\\"GoodbyeBucket\\" id=\\"construct-library.submod1.GoodbyeBucket\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"construct-library.submod1.GoodbyeBucket.Initializer\\"></a>

\`\`\`typescript
import { submod1 } from 'construct-library'

new submod1.GoodbyeBucket(scope: Construct, id: string, props?: BucketProps)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>props</code> | <code>@aws-cdk/aws-s3.BucketProps</code> | *No description.* |

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>applyRemovalPolicy</code> | Apply the given removal policy to this resource. |
| <code>addEventNotification</code> | Adds a bucket notification event destination. |
| <code>addObjectCreatedNotification</code> | Subscribes a destination to receive notifications when an object is created in the bucket. |
| <code>addObjectRemovedNotification</code> | Subscribes a destination to receive notifications when an object is removed from the bucket. |
| <code>addToResourcePolicy</code> | Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects. |
| <code>arnForObjects</code> | Returns an ARN that represents all objects within the bucket that match the key pattern specified. |
| <code>grantDelete</code> | Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket. |
| <code>grantPublicAccess</code> | Allows unrestricted access to objects from this bucket. |
| <code>grantPut</code> | Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal. |
| <code>grantPutAcl</code> | Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket. |
| <code>grantRead</code> | Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantReadWrite</code> | Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantWrite</code> | Grant write permissions to this bucket to an IAM principal. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailPutObject</code> | Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call. |
| <code>onCloudTrailWriteObject</code> | Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to. |
| <code>s3UrlForObject</code> | The S3 URL of an S3 object. For example:. |
| <code>transferAccelerationUrlForObject</code> | The https Transfer Acceleration URL of an S3 object. |
| <code>urlForObject</code> | The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:. |
| <code>virtualHostedUrlForObject</code> | The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:. |
| <code>addCorsRule</code> | Adds a cross-origin access configuration for objects in an Amazon S3 bucket. |
| <code>addInventory</code> | Add an inventory configuration. |
| <code>addLifecycleRule</code> | Add a lifecycle rule to the bucket. |
| <code>addMetric</code> | Adds a metrics configuration for the CloudWatch request metrics from the bucket. |
| <code>goodbye</code> | *No description.* |

---

**<code>applyRemovalPolicy</code>**
\`\`\`typescript
public applyRemovalPolicy(policy: RemovalPolicy): void
\`\`\`

Apply the given removal policy to this resource.

The Removal Policy controls what happens to this resource when it stops
being managed by CloudFormation, either because you've removed it from the
CDK application or because you've made a change that requires the resource
to be replaced.

The resource can be deleted (\`RemovalPolicy.DESTROY\`), or left in your AWS
account for data recovery and cleanup later (\`RemovalPolicy.RETAIN\`).

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>policy</code> | <code>@aws-cdk/core.RemovalPolicy</code> | *No description.* |

**<code>addEventNotification</code>**
\`\`\`typescript
public addEventNotification(event: EventType, dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Adds a bucket notification event destination.

> [https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>event</code> | <code>@aws-cdk/aws-s3.EventType</code> | The event to trigger the notification. |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (Lambda, SNS Topic or SQS Queue). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | S3 object key filter rules to determine which objects trigger this event. |

*Example*

\`\`\`typescript
   declare const myLambda: lambda.Function;
   const bucket = new s3.Bucket(this, 'MyBucket');
   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});
\`\`\`


**<code>addObjectCreatedNotification</code>**
\`\`\`typescript
public addObjectCreatedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is created in the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_CREATED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addObjectRemovedNotification</code>**
\`\`\`typescript
public addObjectRemovedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is removed from the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_REMOVED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addToResourcePolicy</code>**
\`\`\`typescript
public addToResourcePolicy(permission: PolicyStatement): AddToResourcePolicyResult
\`\`\`

Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects.

Note that the policy statement may or may not be added to the policy.
For example, when an \`IBucket\` is created from an existing bucket,
it's not possible to tell whether the bucket already has a policy
attached, let alone to re-use that policy to add more statements to it.
So it's safest to do nothing in these cases.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>permission</code> | <code>@aws-cdk/aws-iam.PolicyStatement</code> | the policy statement to be added to the bucket's policy. |

**<code>arnForObjects</code>**
\`\`\`typescript
public arnForObjects(keyPattern: string): string
\`\`\`

Returns an ARN that represents all objects within the bucket that match the key pattern specified.

To represent all keys, specify \`\`\\"*\\"\`\`.

If you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:

   arnForObjects(\`home/\${team}/\${user}/*\`)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>keyPattern</code> | <code>string</code> | *No description.* |

**<code>grantDelete</code>**
\`\`\`typescript
public grantDelete(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPublicAccess</code>**
\`\`\`typescript
public grantPublicAccess(allowedActions: string, keyPrefix?: string): Grant
\`\`\`

Allows unrestricted access to objects from this bucket.

IMPORTANT: This permission allows anyone to perform actions on S3 objects
in this bucket, which is useful for when you configure your bucket as a
website and want everyone to be able to read objects in the bucket without
needing to authenticate.

Without arguments, this method will grant read (\\"s3:GetObject\\") access to
all objects (\\"*\\") in the bucket.

The method returns the \`iam.Grant\` object, which can then be modified
as needed. For example, you can add a condition that will restrict access only
to an IPv4 range like this:

     const grant = bucket.grantPublicAccess();
     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });

Note that if this \`IBucket\` refers to an existing bucket, possibly not
managed by CloudFormation, this method will have no effect, since it's
impossible to modify the policy of an existing bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowedActions</code> | <code>string</code> | the set of S3 actions to allow. |
| <code>keyPrefix</code> | <code>string</code> | the prefix of S3 object keys (e.g. \`home/*\`). Default is \\"*\\". |

**<code>grantPut</code>**
\`\`\`typescript
public grantPut(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPutAcl</code>**
\`\`\`typescript
public grantPutAcl(identity: IGrantable, objectsKeyPattern?: string): Grant
\`\`\`

Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket.

If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,
calling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;
in this case, if you need to modify object ACLs, call this method explicitly.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>string</code> | *No description.* |

**<code>grantRead</code>**
\`\`\`typescript
public grantRead(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If encryption is used, permission to use the key to decrypt the contents
of the bucket will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantReadWrite</code>**
\`\`\`typescript
public grantReadWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If an encryption key is used, permission to use the key for
encrypt/decrypt will also be granted.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>grantWrite</code>**
\`\`\`typescript
public grantWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant write permissions to this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailPutObject</code>**
\`\`\`typescript
public onCloudTrailPutObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using \`onCloudTrailWriteObject\` may be preferable.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailWriteObject</code>**
\`\`\`typescript
public onCloudTrailWriteObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to.

This includes
the events PutObject, CopyObject, and CompleteMultipartUpload.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using this method may be preferable to \`onCloudTrailPutObject\`.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>s3UrlForObject</code>**
\`\`\`typescript
public s3UrlForObject(key?: string): string
\`\`\`

The S3 URL of an S3 object. For example:.

\`s3://onlybucket\`
- \`s3://bucket/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>transferAccelerationUrlForObject</code>**
\`\`\`typescript
public transferAccelerationUrlForObject(key?: string, options?: TransferAccelerationUrlOptions): string
\`\`\`

The https Transfer Acceleration URL of an S3 object.

Specify \`dualStack: true\` at the options
for dual-stack endpoint (connect to the bucket over IPv6). For example:

- \`https://bucket.s3-accelerate.amazonaws.com\`
- \`https://bucket.s3-accelerate.amazonaws.com/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.TransferAccelerationUrlOptions</code> | Options for generating URL. |

**<code>urlForObject</code>**
\`\`\`typescript
public urlForObject(key?: string): string
\`\`\`

The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:.

\`https://s3.us-west-1.amazonaws.com/onlybucket\`
- \`https://s3.us-west-1.amazonaws.com/bucket/key\`
- \`https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>virtualHostedUrlForObject</code>**
\`\`\`typescript
public virtualHostedUrlForObject(key?: string, options?: VirtualHostedStyleUrlOptions): string
\`\`\`

The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:.

\`https://only-bucket.s3.us-west-1.amazonaws.com\`
- \`https://bucket.s3.us-west-1.amazonaws.com/key\`
- \`https://bucket.s3.amazonaws.com/key\`
- \`https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions</code> | Options for generating URL. |

**<code>addCorsRule</code>**
\`\`\`typescript
public addCorsRule(rule: CorsRule): void
\`\`\`

Adds a cross-origin access configuration for objects in an Amazon S3 bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.CorsRule</code> | The CORS configuration rule to add. |

**<code>addInventory</code>**
\`\`\`typescript
public addInventory(inventory: Inventory): void
\`\`\`

Add an inventory configuration.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>inventory</code> | <code>@aws-cdk/aws-s3.Inventory</code> | configuration to add. |

**<code>addLifecycleRule</code>**
\`\`\`typescript
public addLifecycleRule(rule: LifecycleRule): void
\`\`\`

Add a lifecycle rule to the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.LifecycleRule</code> | The rule to add. |

**<code>addMetric</code>**
\`\`\`typescript
public addMetric(metric: BucketMetrics): void
\`\`\`

Adds a metrics configuration for the CloudWatch request metrics from the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>metric</code> | <code>@aws-cdk/aws-s3.BucketMetrics</code> | The metric configuration to add. |

**<code>goodbye</code>**
\`\`\`typescript
public goodbye(): void
\`\`\`

#### Static Methods <a name=\\"Static Methods\\" id=\\"Static Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>isResource</code> | Check whether the given construct is a Resource. |
| <code>fromBucketArn</code> | *No description.* |
| <code>fromBucketAttributes</code> | Creates a Bucket construct that represents an external bucket. |
| <code>fromBucketName</code> | *No description.* |
| <code>validateBucketName</code> | Thrown an exception if the given bucket name is not valid. |

---

**<code>isResource</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.isResource(construct: IConstruct)
\`\`\`

Check whether the given construct is a Resource.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>construct</code> | <code>@aws-cdk/core.IConstruct</code> | *No description.* |

**<code>fromBucketArn</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.fromBucketArn(scope: Construct, id: string, bucketArn: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketArn</code> | <code>string</code> | *No description.* |

**<code>fromBucketAttributes</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.fromBucketAttributes(scope: Construct, id: string, attrs: BucketAttributes)
\`\`\`

Creates a Bucket construct that represents an external bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | The parent creating construct (usually \`this\`). |
| <code>id</code> | <code>string</code> | The construct's name. |
| <code>attrs</code> | <code>@aws-cdk/aws-s3.BucketAttributes</code> | A \`BucketAttributes\` object. |

**<code>fromBucketName</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.fromBucketName(scope: Construct, id: string, bucketName: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketName</code> | <code>string</code> | *No description.* |

**<code>validateBucketName</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.validateBucketName(physicalName: string)
\`\`\`

Thrown an exception if the given bucket name is not valid.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>physicalName</code> | <code>string</code> | name of the bucket. |

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node associated with this construct. |
| <code>env</code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code>bucketArn</code> | <code>string</code> | The ARN of the bucket. |
| <code>bucketDomainName</code> | <code>string</code> | The IPv4 DNS name of the specified bucket. |
| <code>bucketDualStackDomainName</code> | <code>string</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucketName</code> | <code>string</code> | The name of the bucket. |
| <code>bucketRegionalDomainName</code> | <code>string</code> | The regional domain name of the specified bucket. |
| <code>bucketWebsiteDomainName</code> | <code>string</code> | The Domain name of the static website. |
| <code>bucketWebsiteUrl</code> | <code>string</code> | The URL of the static website. |
| <code>encryptionKey</code> | <code>@aws-cdk/aws-kms.IKey</code> | Optional KMS encryption key associated with this bucket. |
| <code>isWebsite</code> | <code>boolean</code> | If this bucket has been configured for static website hosting. |
| <code>policy</code> | <code>@aws-cdk/aws-s3.BucketPolicy</code> | The resource policy associated with this bucket. |

---

**<code>node</code>**
\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* <code>@aws-cdk/core.ConstructNode</code>

The construct tree node associated with this construct.

---

**<code>env</code>**
\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* <code>@aws-cdk/core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* <code>@aws-cdk/core.Stack</code>

The stack in which this resource is defined.

---

**<code>bucketArn</code>**
\`\`\`typescript
public readonly bucketArn: string;
\`\`\`

- *Type:* <code>string</code>

The ARN of the bucket.

---

**<code>bucketDomainName</code>**
\`\`\`typescript
public readonly bucketDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv4 DNS name of the specified bucket.

---

**<code>bucketDualStackDomainName</code>**
\`\`\`typescript
public readonly bucketDualStackDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv6 DNS name of the specified bucket.

---

**<code>bucketName</code>**
\`\`\`typescript
public readonly bucketName: string;
\`\`\`

- *Type:* <code>string</code>

The name of the bucket.

---

**<code>bucketRegionalDomainName</code>**
\`\`\`typescript
public readonly bucketRegionalDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The regional domain name of the specified bucket.

---

**<code>bucketWebsiteDomainName</code>**
\`\`\`typescript
public readonly bucketWebsiteDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The Domain name of the static website.

---

**<code>bucketWebsiteUrl</code>**
\`\`\`typescript
public readonly bucketWebsiteUrl: string;
\`\`\`

- *Type:* <code>string</code>

The URL of the static website.

---

**<code>encryptionKey</code>**
\`\`\`typescript
public readonly encryptionKey: IKey;
\`\`\`

- *Type:* <code>@aws-cdk/aws-kms.IKey</code>

Optional KMS encryption key associated with this bucket.

---

**<code>isWebsite</code>**
\`\`\`typescript
public readonly isWebsite: boolean;
\`\`\`

- *Type:* <code>boolean</code>

If this bucket has been configured for static website hosting.

---

**<code>policy</code>**
\`\`\`typescript
public readonly policy: BucketPolicy;
\`\`\`

- *Type:* <code>@aws-cdk/aws-s3.BucketPolicy</code>

The resource policy associated with this bucket.

If \`autoCreatePolicy\` is true, a \`BucketPolicy\` will be created upon the
first call to addToResourcePolicy(s).

---


### GreeterBucket <a name=\\"GreeterBucket\\" id=\\"construct-library.GreeterBucket\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"construct-library.GreeterBucket.Initializer\\"></a>

\`\`\`typescript
import { GreeterBucket } from 'construct-library'

new GreeterBucket(scope: Construct, id: string, props?: BucketProps)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>props</code> | <code>@aws-cdk/aws-s3.BucketProps</code> | *No description.* |

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>applyRemovalPolicy</code> | Apply the given removal policy to this resource. |
| <code>addEventNotification</code> | Adds a bucket notification event destination. |
| <code>addObjectCreatedNotification</code> | Subscribes a destination to receive notifications when an object is created in the bucket. |
| <code>addObjectRemovedNotification</code> | Subscribes a destination to receive notifications when an object is removed from the bucket. |
| <code>addToResourcePolicy</code> | Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects. |
| <code>arnForObjects</code> | Returns an ARN that represents all objects within the bucket that match the key pattern specified. |
| <code>grantDelete</code> | Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket. |
| <code>grantPublicAccess</code> | Allows unrestricted access to objects from this bucket. |
| <code>grantPut</code> | Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal. |
| <code>grantPutAcl</code> | Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket. |
| <code>grantRead</code> | Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantReadWrite</code> | Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantWrite</code> | Grant write permissions to this bucket to an IAM principal. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailPutObject</code> | Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call. |
| <code>onCloudTrailWriteObject</code> | Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to. |
| <code>s3UrlForObject</code> | The S3 URL of an S3 object. For example:. |
| <code>transferAccelerationUrlForObject</code> | The https Transfer Acceleration URL of an S3 object. |
| <code>urlForObject</code> | The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:. |
| <code>virtualHostedUrlForObject</code> | The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:. |
| <code>addCorsRule</code> | Adds a cross-origin access configuration for objects in an Amazon S3 bucket. |
| <code>addInventory</code> | Add an inventory configuration. |
| <code>addLifecycleRule</code> | Add a lifecycle rule to the bucket. |
| <code>addMetric</code> | Adds a metrics configuration for the CloudWatch request metrics from the bucket. |
| <code>greet</code> | *No description.* |

---

**<code>applyRemovalPolicy</code>**
\`\`\`typescript
public applyRemovalPolicy(policy: RemovalPolicy): void
\`\`\`

Apply the given removal policy to this resource.

The Removal Policy controls what happens to this resource when it stops
being managed by CloudFormation, either because you've removed it from the
CDK application or because you've made a change that requires the resource
to be replaced.

The resource can be deleted (\`RemovalPolicy.DESTROY\`), or left in your AWS
account for data recovery and cleanup later (\`RemovalPolicy.RETAIN\`).

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>policy</code> | <code>@aws-cdk/core.RemovalPolicy</code> | *No description.* |

**<code>addEventNotification</code>**
\`\`\`typescript
public addEventNotification(event: EventType, dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Adds a bucket notification event destination.

> [https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>event</code> | <code>@aws-cdk/aws-s3.EventType</code> | The event to trigger the notification. |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (Lambda, SNS Topic or SQS Queue). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | S3 object key filter rules to determine which objects trigger this event. |

*Example*

\`\`\`typescript
   declare const myLambda: lambda.Function;
   const bucket = new s3.Bucket(this, 'MyBucket');
   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});
\`\`\`


**<code>addObjectCreatedNotification</code>**
\`\`\`typescript
public addObjectCreatedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is created in the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_CREATED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addObjectRemovedNotification</code>**
\`\`\`typescript
public addObjectRemovedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is removed from the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_REMOVED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addToResourcePolicy</code>**
\`\`\`typescript
public addToResourcePolicy(permission: PolicyStatement): AddToResourcePolicyResult
\`\`\`

Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects.

Note that the policy statement may or may not be added to the policy.
For example, when an \`IBucket\` is created from an existing bucket,
it's not possible to tell whether the bucket already has a policy
attached, let alone to re-use that policy to add more statements to it.
So it's safest to do nothing in these cases.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>permission</code> | <code>@aws-cdk/aws-iam.PolicyStatement</code> | the policy statement to be added to the bucket's policy. |

**<code>arnForObjects</code>**
\`\`\`typescript
public arnForObjects(keyPattern: string): string
\`\`\`

Returns an ARN that represents all objects within the bucket that match the key pattern specified.

To represent all keys, specify \`\`\\"*\\"\`\`.

If you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:

   arnForObjects(\`home/\${team}/\${user}/*\`)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>keyPattern</code> | <code>string</code> | *No description.* |

**<code>grantDelete</code>**
\`\`\`typescript
public grantDelete(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPublicAccess</code>**
\`\`\`typescript
public grantPublicAccess(allowedActions: string, keyPrefix?: string): Grant
\`\`\`

Allows unrestricted access to objects from this bucket.

IMPORTANT: This permission allows anyone to perform actions on S3 objects
in this bucket, which is useful for when you configure your bucket as a
website and want everyone to be able to read objects in the bucket without
needing to authenticate.

Without arguments, this method will grant read (\\"s3:GetObject\\") access to
all objects (\\"*\\") in the bucket.

The method returns the \`iam.Grant\` object, which can then be modified
as needed. For example, you can add a condition that will restrict access only
to an IPv4 range like this:

     const grant = bucket.grantPublicAccess();
     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });

Note that if this \`IBucket\` refers to an existing bucket, possibly not
managed by CloudFormation, this method will have no effect, since it's
impossible to modify the policy of an existing bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowedActions</code> | <code>string</code> | the set of S3 actions to allow. |
| <code>keyPrefix</code> | <code>string</code> | the prefix of S3 object keys (e.g. \`home/*\`). Default is \\"*\\". |

**<code>grantPut</code>**
\`\`\`typescript
public grantPut(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPutAcl</code>**
\`\`\`typescript
public grantPutAcl(identity: IGrantable, objectsKeyPattern?: string): Grant
\`\`\`

Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket.

If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,
calling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;
in this case, if you need to modify object ACLs, call this method explicitly.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>string</code> | *No description.* |

**<code>grantRead</code>**
\`\`\`typescript
public grantRead(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If encryption is used, permission to use the key to decrypt the contents
of the bucket will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantReadWrite</code>**
\`\`\`typescript
public grantReadWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If an encryption key is used, permission to use the key for
encrypt/decrypt will also be granted.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>grantWrite</code>**
\`\`\`typescript
public grantWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant write permissions to this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailPutObject</code>**
\`\`\`typescript
public onCloudTrailPutObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using \`onCloudTrailWriteObject\` may be preferable.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailWriteObject</code>**
\`\`\`typescript
public onCloudTrailWriteObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to.

This includes
the events PutObject, CopyObject, and CompleteMultipartUpload.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using this method may be preferable to \`onCloudTrailPutObject\`.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>s3UrlForObject</code>**
\`\`\`typescript
public s3UrlForObject(key?: string): string
\`\`\`

The S3 URL of an S3 object. For example:.

\`s3://onlybucket\`
- \`s3://bucket/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>transferAccelerationUrlForObject</code>**
\`\`\`typescript
public transferAccelerationUrlForObject(key?: string, options?: TransferAccelerationUrlOptions): string
\`\`\`

The https Transfer Acceleration URL of an S3 object.

Specify \`dualStack: true\` at the options
for dual-stack endpoint (connect to the bucket over IPv6). For example:

- \`https://bucket.s3-accelerate.amazonaws.com\`
- \`https://bucket.s3-accelerate.amazonaws.com/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.TransferAccelerationUrlOptions</code> | Options for generating URL. |

**<code>urlForObject</code>**
\`\`\`typescript
public urlForObject(key?: string): string
\`\`\`

The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:.

\`https://s3.us-west-1.amazonaws.com/onlybucket\`
- \`https://s3.us-west-1.amazonaws.com/bucket/key\`
- \`https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>virtualHostedUrlForObject</code>**
\`\`\`typescript
public virtualHostedUrlForObject(key?: string, options?: VirtualHostedStyleUrlOptions): string
\`\`\`

The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:.

\`https://only-bucket.s3.us-west-1.amazonaws.com\`
- \`https://bucket.s3.us-west-1.amazonaws.com/key\`
- \`https://bucket.s3.amazonaws.com/key\`
- \`https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions</code> | Options for generating URL. |

**<code>addCorsRule</code>**
\`\`\`typescript
public addCorsRule(rule: CorsRule): void
\`\`\`

Adds a cross-origin access configuration for objects in an Amazon S3 bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.CorsRule</code> | The CORS configuration rule to add. |

**<code>addInventory</code>**
\`\`\`typescript
public addInventory(inventory: Inventory): void
\`\`\`

Add an inventory configuration.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>inventory</code> | <code>@aws-cdk/aws-s3.Inventory</code> | configuration to add. |

**<code>addLifecycleRule</code>**
\`\`\`typescript
public addLifecycleRule(rule: LifecycleRule): void
\`\`\`

Add a lifecycle rule to the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.LifecycleRule</code> | The rule to add. |

**<code>addMetric</code>**
\`\`\`typescript
public addMetric(metric: BucketMetrics): void
\`\`\`

Adds a metrics configuration for the CloudWatch request metrics from the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>metric</code> | <code>@aws-cdk/aws-s3.BucketMetrics</code> | The metric configuration to add. |

**<code>greet</code>**
\`\`\`typescript
public greet(): void
\`\`\`

#### Static Methods <a name=\\"Static Methods\\" id=\\"Static Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>isResource</code> | Check whether the given construct is a Resource. |
| <code>fromBucketArn</code> | *No description.* |
| <code>fromBucketAttributes</code> | Creates a Bucket construct that represents an external bucket. |
| <code>fromBucketName</code> | *No description.* |
| <code>validateBucketName</code> | Thrown an exception if the given bucket name is not valid. |

---

**<code>isResource</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.isResource(construct: IConstruct)
\`\`\`

Check whether the given construct is a Resource.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>construct</code> | <code>@aws-cdk/core.IConstruct</code> | *No description.* |

**<code>fromBucketArn</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.fromBucketArn(scope: Construct, id: string, bucketArn: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketArn</code> | <code>string</code> | *No description.* |

**<code>fromBucketAttributes</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.fromBucketAttributes(scope: Construct, id: string, attrs: BucketAttributes)
\`\`\`

Creates a Bucket construct that represents an external bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | The parent creating construct (usually \`this\`). |
| <code>id</code> | <code>string</code> | The construct's name. |
| <code>attrs</code> | <code>@aws-cdk/aws-s3.BucketAttributes</code> | A \`BucketAttributes\` object. |

**<code>fromBucketName</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.fromBucketName(scope: Construct, id: string, bucketName: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketName</code> | <code>string</code> | *No description.* |

**<code>validateBucketName</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.validateBucketName(physicalName: string)
\`\`\`

Thrown an exception if the given bucket name is not valid.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>physicalName</code> | <code>string</code> | name of the bucket. |

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node associated with this construct. |
| <code>env</code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code>bucketArn</code> | <code>string</code> | The ARN of the bucket. |
| <code>bucketDomainName</code> | <code>string</code> | The IPv4 DNS name of the specified bucket. |
| <code>bucketDualStackDomainName</code> | <code>string</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucketName</code> | <code>string</code> | The name of the bucket. |
| <code>bucketRegionalDomainName</code> | <code>string</code> | The regional domain name of the specified bucket. |
| <code>bucketWebsiteDomainName</code> | <code>string</code> | The Domain name of the static website. |
| <code>bucketWebsiteUrl</code> | <code>string</code> | The URL of the static website. |
| <code>encryptionKey</code> | <code>@aws-cdk/aws-kms.IKey</code> | Optional KMS encryption key associated with this bucket. |
| <code>isWebsite</code> | <code>boolean</code> | If this bucket has been configured for static website hosting. |
| <code>policy</code> | <code>@aws-cdk/aws-s3.BucketPolicy</code> | The resource policy associated with this bucket. |

---

**<code>node</code>**
\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* <code>@aws-cdk/core.ConstructNode</code>

The construct tree node associated with this construct.

---

**<code>env</code>**
\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* <code>@aws-cdk/core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* <code>@aws-cdk/core.Stack</code>

The stack in which this resource is defined.

---

**<code>bucketArn</code>**
\`\`\`typescript
public readonly bucketArn: string;
\`\`\`

- *Type:* <code>string</code>

The ARN of the bucket.

---

**<code>bucketDomainName</code>**
\`\`\`typescript
public readonly bucketDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv4 DNS name of the specified bucket.

---

**<code>bucketDualStackDomainName</code>**
\`\`\`typescript
public readonly bucketDualStackDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv6 DNS name of the specified bucket.

---

**<code>bucketName</code>**
\`\`\`typescript
public readonly bucketName: string;
\`\`\`

- *Type:* <code>string</code>

The name of the bucket.

---

**<code>bucketRegionalDomainName</code>**
\`\`\`typescript
public readonly bucketRegionalDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The regional domain name of the specified bucket.

---

**<code>bucketWebsiteDomainName</code>**
\`\`\`typescript
public readonly bucketWebsiteDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The Domain name of the static website.

---

**<code>bucketWebsiteUrl</code>**
\`\`\`typescript
public readonly bucketWebsiteUrl: string;
\`\`\`

- *Type:* <code>string</code>

The URL of the static website.

---

**<code>encryptionKey</code>**
\`\`\`typescript
public readonly encryptionKey: IKey;
\`\`\`

- *Type:* <code>@aws-cdk/aws-kms.IKey</code>

Optional KMS encryption key associated with this bucket.

---

**<code>isWebsite</code>**
\`\`\`typescript
public readonly isWebsite: boolean;
\`\`\`

- *Type:* <code>boolean</code>

If this bucket has been configured for static website hosting.

---

**<code>policy</code>**
\`\`\`typescript
public readonly policy: BucketPolicy;
\`\`\`

- *Type:* <code>@aws-cdk/aws-s3.BucketPolicy</code>

The resource policy associated with this bucket.

If \`autoCreatePolicy\` is true, a \`BucketPolicy\` will be created upon the
first call to addToResourcePolicy(s).

---





"
`;

exports[`specify language 1`] = `
"# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Resources <a name=\\"Resources\\" id=\\"Resources\\"></a>

### GoodbyeBucket <a name=\\"GoodbyeBucket\\" id=\\"construct-library.submod1.GoodbyeBucket\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"construct-library.submod1.GoodbyeBucket.Initializer\\"></a>

\`\`\`python
from construct_library import submod1

submod1.GoodbyeBucket(
  scope: Construct,
  id: str,
  access_control: BucketAccessControl = None,
  auto_delete_objects: bool = None,
  block_public_access: BlockPublicAccess = None,
  bucket_key_enabled: bool = None,
  bucket_name: str = None,
  cors: typing.List[CorsRule] = None,
  encryption: BucketEncryption = None,
  encryption_key: IKey = None,
  enforce_ss_l: bool = None,
  event_bridge_enabled: bool = None,
  intelligent_tiering_configurations: typing.List[IntelligentTieringConfiguration] = None,
  inventories: typing.List[Inventory] = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  metrics: typing.List[BucketMetrics] = None,
  notifications_handler_role: IRole = None,
  object_ownership: ObjectOwnership = None,
  public_read_access: bool = None,
  removal_policy: RemovalPolicy = None,
  server_access_logs_bucket: IBucket = None,
  server_access_logs_prefix: str = None,
  transfer_acceleration: bool = None,
  versioned: bool = None,
  website_error_document: str = None,
  website_index_document: str = None,
  website_redirect: RedirectTarget = None,
  website_routing_rules: typing.List[RoutingRule] = None
)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>access_control</code> | <code>aws_cdk.aws_s3.BucketAccessControl</code> | Specifies a canned ACL that grants predefined permissions to the bucket. |
| <code>auto_delete_objects</code> | <code>bool</code> | Whether all objects should be automatically deleted when the bucket is removed from the stack or when the stack is deleted. |
| <code>block_public_access</code> | <code>aws_cdk.aws_s3.BlockPublicAccess</code> | The block public access configuration of this bucket. |
| <code>bucket_key_enabled</code> | <code>bool</code> | Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. |
| <code>bucket_name</code> | <code>str</code> | Physical name of this bucket. |
| <code>cors</code> | <code>typing.List[aws_cdk.aws_s3.CorsRule]</code> | The CORS configuration of this bucket. |
| <code>encryption</code> | <code>aws_cdk.aws_s3.BucketEncryption</code> | The kind of server-side encryption to apply to this bucket. |
| <code>encryption_key</code> | <code>aws_cdk.aws_kms.IKey</code> | External KMS key to use for bucket encryption. |
| <code>enforce_ss_l</code> | <code>bool</code> | Enforces SSL for requests. |
| <code>event_bridge_enabled</code> | <code>bool</code> | Whether this bucket should send notifications to Amazon EventBridge or not. |
| <code>intelligent_tiering_configurations</code> | <code>typing.List[aws_cdk.aws_s3.IntelligentTieringConfiguration]</code> | Inteligent Tiering Configurations. |
| <code>inventories</code> | <code>typing.List[aws_cdk.aws_s3.Inventory]</code> | The inventory configuration of the bucket. |
| <code>lifecycle_rules</code> | <code>typing.List[aws_cdk.aws_s3.LifecycleRule]</code> | Rules that define how Amazon S3 manages objects during their lifetime. |
| <code>metrics</code> | <code>typing.List[aws_cdk.aws_s3.BucketMetrics]</code> | The metrics configuration of this bucket. |
| <code>notifications_handler_role</code> | <code>aws_cdk.aws_iam.IRole</code> | The role to be used by the notifications handler. |
| <code>object_ownership</code> | <code>aws_cdk.aws_s3.ObjectOwnership</code> | The objectOwnership of the bucket. |
| <code>public_read_access</code> | <code>bool</code> | Grants public read access to all objects in the bucket. |
| <code>removal_policy</code> | <code>aws_cdk.core.RemovalPolicy</code> | Policy to apply when the bucket is removed from this stack. |
| <code>server_access_logs_bucket</code> | <code>aws_cdk.aws_s3.IBucket</code> | Destination bucket for the server access logs. |
| <code>server_access_logs_prefix</code> | <code>str</code> | Optional log file prefix to use for the bucket's access logs. |
| <code>transfer_acceleration</code> | <code>bool</code> | Whether this bucket should have transfer acceleration turned on or not. |
| <code>versioned</code> | <code>bool</code> | Whether this bucket should have versioning turned on or not. |
| <code>website_error_document</code> | <code>str</code> | The name of the error document (e.g. \\"404.html\\") for the website. \`websiteIndexDocument\` must also be set if this is set. |
| <code>website_index_document</code> | <code>str</code> | The name of the index document (e.g. \\"index.html\\") for the website. Enables static website hosting for this bucket. |
| <code>website_redirect</code> | <code>aws_cdk.aws_s3.RedirectTarget</code> | Specifies the redirect behavior of all requests to a website endpoint of a bucket. |
| <code>website_routing_rules</code> | <code>typing.List[aws_cdk.aws_s3.RoutingRule]</code> | Rules that define when a redirect is applied and the redirect behavior. |

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>apply_removal_policy</code> | Apply the given removal policy to this resource. |
| <code>add_event_notification</code> | Adds a bucket notification event destination. |
| <code>add_object_created_notification</code> | Subscribes a destination to receive notifications when an object is created in the bucket. |
| <code>add_object_removed_notification</code> | Subscribes a destination to receive notifications when an object is removed from the bucket. |
| <code>add_to_resource_policy</code> | Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects. |
| <code>arn_for_objects</code> | Returns an ARN that represents all objects within the bucket that match the key pattern specified. |
| <code>grant_delete</code> | Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket. |
| <code>grant_public_access</code> | Allows unrestricted access to objects from this bucket. |
| <code>grant_put</code> | Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal. |
| <code>grant_put_acl</code> | Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket. |
| <code>grant_read</code> | Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grant_read_write</code> | Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grant_write</code> | Grant write permissions to this bucket to an IAM principal. |
| <code>on_cloud_trail_event</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>on_cloud_trail_put_object</code> | Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call. |
| <code>on_cloud_trail_write_object</code> | Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to. |
| <code>s3_url_for_object</code> | The S3 URL of an S3 object. For example:. |
| <code>transfer_acceleration_url_for_object</code> | The https Transfer Acceleration URL of an S3 object. |
| <code>url_for_object</code> | The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:. |
| <code>virtual_hosted_url_for_object</code> | The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:. |
| <code>add_cors_rule</code> | Adds a cross-origin access configuration for objects in an Amazon S3 bucket. |
| <code>add_inventory</code> | Add an inventory configuration. |
| <code>add_lifecycle_rule</code> | Add a lifecycle rule to the bucket. |
| <code>add_metric</code> | Adds a metrics configuration for the CloudWatch request metrics from the bucket. |
| <code>goodbye</code> | *No description.* |

---

**<code>apply_removal_policy</code>**
\`\`\`python
def apply_removal_policy(
  policy: RemovalPolicy
) -> None
\`\`\`

Apply the given removal policy to this resource.

The Removal Policy controls what happens to this resource when it stops
being managed by CloudFormation, either because you've removed it from the
CDK application or because you've made a change that requires the resource
to be replaced.

The resource can be deleted (\`RemovalPolicy.DESTROY\`), or left in your AWS
account for data recovery and cleanup later (\`RemovalPolicy.RETAIN\`).

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>policy</code> | <code>aws_cdk.core.RemovalPolicy</code> | *No description.* |

**<code>add_event_notification</code>**
\`\`\`python
def add_event_notification(
  event: EventType,
  dest: IBucketNotificationDestination,
  prefix: str = None,
  suffix: str = None
) -> None
\`\`\`

Adds a bucket notification event destination.

> [https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>event</code> | <code>aws_cdk.aws_s3.EventType</code> | The event to trigger the notification. |
| <code>dest</code> | <code>aws_cdk.aws_s3.IBucketNotificationDestination</code> | The notification destination (Lambda, SNS Topic or SQS Queue). |
| <code>prefix</code> | <code>str</code> | S3 keys must have the specified prefix. |
| <code>suffix</code> | <code>str</code> | S3 keys must have the specified suffix. |

*Example*

\`\`\`python
   declare const myLambda: lambda.Function;
   const bucket = new s3.Bucket(this, 'MyBucket');
   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});
\`\`\`


**<code>add_object_created_notification</code>**
\`\`\`python
def add_object_created_notification(
  dest: IBucketNotificationDestination,
  prefix: str = None,
  suffix: str = None
) -> None
\`\`\`

Subscribes a destination to receive notifications when an object is created in the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_CREATED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>aws_cdk.aws_s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>prefix</code> | <code>str</code> | S3 keys must have the specified prefix. |
| <code>suffix</code> | <code>str</code> | S3 keys must have the specified suffix. |

**<code>add_object_removed_notification</code>**
\`\`\`python
def add_object_removed_notification(
  dest: IBucketNotificationDestination,
  prefix: str = None,
  suffix: str = None
) -> None
\`\`\`

Subscribes a destination to receive notifications when an object is removed from the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_REMOVED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>aws_cdk.aws_s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>prefix</code> | <code>str</code> | S3 keys must have the specified prefix. |
| <code>suffix</code> | <code>str</code> | S3 keys must have the specified suffix. |

**<code>add_to_resource_policy</code>**
\`\`\`python
def add_to_resource_policy(
  permission: PolicyStatement
) -> AddToResourcePolicyResult
\`\`\`

Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects.

Note that the policy statement may or may not be added to the policy.
For example, when an \`IBucket\` is created from an existing bucket,
it's not possible to tell whether the bucket already has a policy
attached, let alone to re-use that policy to add more statements to it.
So it's safest to do nothing in these cases.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>permission</code> | <code>aws_cdk.aws_iam.PolicyStatement</code> | the policy statement to be added to the bucket's policy. |

**<code>arn_for_objects</code>**
\`\`\`python
def arn_for_objects(
  key_pattern: str
) -> str
\`\`\`

Returns an ARN that represents all objects within the bucket that match the key pattern specified.

To represent all keys, specify \`\`\\"*\\"\`\`.

If you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:

   arnForObjects(\`home/\${team}/\${user}/*\`)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key_pattern</code> | <code>str</code> | *No description.* |

**<code>grant_delete</code>**
\`\`\`python
def grant_delete(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | The principal. |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grant_public_access</code>**
\`\`\`python
def grant_public_access(
  allowed_actions: str,
  key_prefix: str = None
) -> Grant
\`\`\`

Allows unrestricted access to objects from this bucket.

IMPORTANT: This permission allows anyone to perform actions on S3 objects
in this bucket, which is useful for when you configure your bucket as a
website and want everyone to be able to read objects in the bucket without
needing to authenticate.

Without arguments, this method will grant read (\\"s3:GetObject\\") access to
all objects (\\"*\\") in the bucket.

The method returns the \`iam.Grant\` object, which can then be modified
as needed. For example, you can add a condition that will restrict access only
to an IPv4 range like this:

     const grant = bucket.grantPublicAccess();
     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });

Note that if this \`IBucket\` refers to an existing bucket, possibly not
managed by CloudFormation, this method will have no effect, since it's
impossible to modify the policy of an existing bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowed_actions</code> | <code>str</code> | the set of S3 actions to allow. |
| <code>key_prefix</code> | <code>str</code> | the prefix of S3 object keys (e.g. \`home/*\`). Default is \\"*\\". |

**<code>grant_put</code>**
\`\`\`python
def grant_put(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | The principal. |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grant_put_acl</code>**
\`\`\`python
def grant_put_acl(
  identity: IGrantable,
  objects_key_pattern: str = None
) -> Grant
\`\`\`

Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket.

If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,
calling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;
in this case, if you need to modify object ACLs, call this method explicitly.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>objects_key_pattern</code> | <code>str</code> | *No description.* |

**<code>grant_read</code>**
\`\`\`python
def grant_read(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If encryption is used, permission to use the key to decrypt the contents
of the bucket will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | The principal. |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grant_read_write</code>**
\`\`\`python
def grant_read_write(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If an encryption key is used, permission to use the key for
encrypt/decrypt will also be granted.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | *No description.* |

**<code>grant_write</code>**
\`\`\`python
def grant_write(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grant write permissions to this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | *No description.* |

**<code>on_cloud_trail_event</code>**
\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  paths: typing.List[str] = None
) -> Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>paths</code> | <code>typing.List[str]</code> | Only watch changes to these object paths. |

**<code>on_cloud_trail_put_object</code>**
\`\`\`python
def on_cloud_trail_put_object(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  paths: typing.List[str] = None
) -> Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using \`onCloudTrailWriteObject\` may be preferable.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>paths</code> | <code>typing.List[str]</code> | Only watch changes to these object paths. |

**<code>on_cloud_trail_write_object</code>**
\`\`\`python
def on_cloud_trail_write_object(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  paths: typing.List[str] = None
) -> Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to.

This includes
the events PutObject, CopyObject, and CompleteMultipartUpload.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using this method may be preferable to \`onCloudTrailPutObject\`.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>paths</code> | <code>typing.List[str]</code> | Only watch changes to these object paths. |

**<code>s3_url_for_object</code>**
\`\`\`python
def s3_url_for_object(
  key: str = None
) -> str
\`\`\`

The S3 URL of an S3 object. For example:.

\`s3://onlybucket\`
- \`s3://bucket/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |

**<code>transfer_acceleration_url_for_object</code>**
\`\`\`python
def transfer_acceleration_url_for_object(
  key: str = None,
  dual_stack: bool = None
) -> str
\`\`\`

The https Transfer Acceleration URL of an S3 object.

Specify \`dualStack: true\` at the options
for dual-stack endpoint (connect to the bucket over IPv6). For example:

- \`https://bucket.s3-accelerate.amazonaws.com\`
- \`https://bucket.s3-accelerate.amazonaws.com/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |
| <code>dual_stack</code> | <code>bool</code> | Dual-stack support to connect to the bucket over IPv6. |

**<code>url_for_object</code>**
\`\`\`python
def url_for_object(
  key: str = None
) -> str
\`\`\`

The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:.

\`https://s3.us-west-1.amazonaws.com/onlybucket\`
- \`https://s3.us-west-1.amazonaws.com/bucket/key\`
- \`https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |

**<code>virtual_hosted_url_for_object</code>**
\`\`\`python
def virtual_hosted_url_for_object(
  key: str = None,
  regional: bool = None
) -> str
\`\`\`

The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:.

\`https://only-bucket.s3.us-west-1.amazonaws.com\`
- \`https://bucket.s3.us-west-1.amazonaws.com/key\`
- \`https://bucket.s3.amazonaws.com/key\`
- \`https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |
| <code>regional</code> | <code>bool</code> | Specifies the URL includes the region. |

**<code>add_cors_rule</code>**
\`\`\`python
def add_cors_rule(
  allowed_methods: typing.List[HttpMethods],
  allowed_origins: typing.List[str],
  allowed_headers: typing.List[str] = None,
  exposed_headers: typing.List[str] = None,
  id: str = None,
  max_age: typing.Union[int, float] = None
) -> None
\`\`\`

Adds a cross-origin access configuration for objects in an Amazon S3 bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowed_methods</code> | <code>typing.List[aws_cdk.aws_s3.HttpMethods]</code> | An HTTP method that you allow the origin to execute. |
| <code>allowed_origins</code> | <code>typing.List[str]</code> | One or more origins you want customers to be able to access the bucket from. |
| <code>allowed_headers</code> | <code>typing.List[str]</code> | Headers that are specified in the Access-Control-Request-Headers header. |
| <code>exposed_headers</code> | <code>typing.List[str]</code> | One or more headers in the response that you want customers to be able to access from their applications. |
| <code>id</code> | <code>str</code> | A unique identifier for this rule. |
| <code>max_age</code> | <code>typing.Union[int, float]</code> | The time in seconds that your browser is to cache the preflight response for the specified resource. |

**<code>add_inventory</code>**
\`\`\`python
def add_inventory(
  destination: InventoryDestination,
  enabled: bool = None,
  format: InventoryFormat = None,
  frequency: InventoryFrequency = None,
  include_object_versions: InventoryObjectVersion = None,
  inventory_id: str = None,
  objects_prefix: str = None,
  optional_fields: typing.List[str] = None
) -> None
\`\`\`

Add an inventory configuration.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>destination</code> | <code>aws_cdk.aws_s3.InventoryDestination</code> | The destination of the inventory. |
| <code>enabled</code> | <code>bool</code> | Whether the inventory is enabled or disabled. |
| <code>format</code> | <code>aws_cdk.aws_s3.InventoryFormat</code> | The format of the inventory. |
| <code>frequency</code> | <code>aws_cdk.aws_s3.InventoryFrequency</code> | Frequency at which the inventory should be generated. |
| <code>include_object_versions</code> | <code>aws_cdk.aws_s3.InventoryObjectVersion</code> | If the inventory should contain all the object versions or only the current one. |
| <code>inventory_id</code> | <code>str</code> | The inventory configuration ID. |
| <code>objects_prefix</code> | <code>str</code> | The inventory will only include objects that meet the prefix filter criteria. |
| <code>optional_fields</code> | <code>typing.List[str]</code> | A list of optional fields to be included in the inventory result. |

**<code>add_lifecycle_rule</code>**
\`\`\`python
def add_lifecycle_rule(
  abort_incomplete_multipart_upload_after: Duration = None,
  enabled: bool = None,
  expiration: Duration = None,
  expiration_date: datetime.datetime = None,
  expired_object_delete_marker: bool = None,
  id: str = None,
  noncurrent_version_expiration: Duration = None,
  noncurrent_versions_to_retain: typing.Union[int, float] = None,
  noncurrent_version_transitions: typing.List[NoncurrentVersionTransition] = None,
  object_size_greater_than: typing.Union[int, float] = None,
  object_size_less_than: typing.Union[int, float] = None,
  prefix: str = None,
  tag_filters: typing.Mapping[typing.Any] = None,
  transitions: typing.List[Transition] = None
) -> None
\`\`\`

Add a lifecycle rule to the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>abort_incomplete_multipart_upload_after</code> | <code>aws_cdk.core.Duration</code> | Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket. |
| <code>enabled</code> | <code>bool</code> | Whether this rule is enabled. |
| <code>expiration</code> | <code>aws_cdk.core.Duration</code> | Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier. |
| <code>expiration_date</code> | <code>datetime.datetime</code> | Indicates when objects are deleted from Amazon S3 and Amazon Glacier. |
| <code>expired_object_delete_marker</code> | <code>bool</code> | Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. |
| <code>id</code> | <code>str</code> | A unique identifier for this rule. |
| <code>noncurrent_version_expiration</code> | <code>aws_cdk.core.Duration</code> | Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire. |
| <code>noncurrent_versions_to_retain</code> | <code>typing.Union[int, float]</code> | Indicates a maximum number of noncurrent versions to retain. |
| <code>noncurrent_version_transitions</code> | <code>typing.List[aws_cdk.aws_s3.NoncurrentVersionTransition]</code> | One or more transition rules that specify when non-current objects transition to a specified storage class. |
| <code>object_size_greater_than</code> | <code>typing.Union[int, float]</code> | Specifies the minimum object size in bytes for this rule to apply to. |
| <code>object_size_less_than</code> | <code>typing.Union[int, float]</code> | Specifies the maximum object size in bytes for this rule to apply to. |
| <code>prefix</code> | <code>str</code> | Object key prefix that identifies one or more objects to which this rule applies. |
| <code>tag_filters</code> | <code>typing.Mapping[typing.Any]</code> | The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket. |
| <code>transitions</code> | <code>typing.List[aws_cdk.aws_s3.Transition]</code> | One or more transition rules that specify when an object transitions to a specified storage class. |

**<code>add_metric</code>**
\`\`\`python
def add_metric(
  id: str,
  prefix: str = None,
  tag_filters: typing.Mapping[typing.Any] = None
) -> None
\`\`\`

Adds a metrics configuration for the CloudWatch request metrics from the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The ID used to identify the metrics configuration. |
| <code>prefix</code> | <code>str</code> | The prefix that an object must have to be included in the metrics results. |
| <code>tag_filters</code> | <code>typing.Mapping[typing.Any]</code> | Specifies a list of tag filters to use as a metrics configuration filter. |

**<code>goodbye</code>**
\`\`\`python
def goodbye() -> None
\`\`\`

#### Static Methods <a name=\\"Static Methods\\" id=\\"Static Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>is_resource</code> | Check whether the given construct is a Resource. |
| <code>from_bucket_arn</code> | *No description.* |
| <code>from_bucket_attributes</code> | Creates a Bucket construct that represents an external bucket. |
| <code>from_bucket_name</code> | *No description.* |
| <code>validate_bucket_name</code> | Thrown an exception if the given bucket name is not valid. |

---

**<code>is_resource</code>**
\`\`\`python
from construct_library import submod1

submod1.GoodbyeBucket.is_resource(
  construct: IConstruct
)
\`\`\`

Check whether the given construct is a Resource.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>construct</code> | <code>aws_cdk.core.IConstruct</code> | *No description.* |

**<code>from_bucket_arn</code>**
\`\`\`python
from construct_library import submod1

submod1.GoodbyeBucket.from_bucket_arn(
  scope: Construct,
  id: str,
  bucket_arn: str
)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>bucket_arn</code> | <code>str</code> | *No description.* |

**<code>from_bucket_attributes</code>**
\`\`\`python
from construct_library import submod1

submod1.GoodbyeBucket.from_bucket_attributes(
  scope: Construct,
  id: str,
  account: str = None,
  bucket_arn: str = None,
  bucket_domain_name: str = None,
  bucket_dual_stack_domain_name: str = None,
  bucket_name: str = None,
  bucket_regional_domain_name: str = None,
  bucket_website_new_url_format: bool = None,
  bucket_website_url: str = None,
  encryption_key: IKey = None,
  is_website: bool = None,
  notifications_handler_role: IRole = None,
  region: str = None
)
\`\`\`

Creates a Bucket construct that represents an external bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | The parent creating construct (usually \`this\`). |
| <code>id</code> | <code>str</code> | The construct's name. |
| <code>account</code> | <code>str</code> | The account this existing bucket belongs to. |
| <code>bucket_arn</code> | <code>str</code> | The ARN of the bucket. |
| <code>bucket_domain_name</code> | <code>str</code> | The domain name of the bucket. |
| <code>bucket_dual_stack_domain_name</code> | <code>str</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucket_name</code> | <code>str</code> | The name of the bucket. |
| <code>bucket_regional_domain_name</code> | <code>str</code> | The regional domain name of the specified bucket. |
| <code>bucket_website_new_url_format</code> | <code>bool</code> | The format of the website URL of the bucket. |
| <code>bucket_website_url</code> | <code>str</code> | The website URL of the bucket (if static web hosting is enabled). |
| <code>encryption_key</code> | <code>aws_cdk.aws_kms.IKey</code> | *No description.* |
| <code>is_website</code> | <code>bool</code> | If this bucket has been configured for static website hosting. |
| <code>notifications_handler_role</code> | <code>aws_cdk.aws_iam.IRole</code> | The role to be used by the notifications handler. |
| <code>region</code> | <code>str</code> | The region this existing bucket is in. |

**<code>from_bucket_name</code>**
\`\`\`python
from construct_library import submod1

submod1.GoodbyeBucket.from_bucket_name(
  scope: Construct,
  id: str,
  bucket_name: str
)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>bucket_name</code> | <code>str</code> | *No description.* |

**<code>validate_bucket_name</code>**
\`\`\`python
from construct_library import submod1

submod1.GoodbyeBucket.validate_bucket_name(
  physical_name: str
)
\`\`\`

Thrown an exception if the given bucket name is not valid.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>physical_name</code> | <code>str</code> | name of the bucket. |

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>aws_cdk.core.ConstructNode</code> | The construct tree node associated with this construct. |
| <code>env</code> | <code>aws_cdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>aws_cdk.core.Stack</code> | The stack in which this resource is defined. |
| <code>bucket_arn</code> | <code>str</code> | The ARN of the bucket. |
| <code>bucket_domain_name</code> | <code>str</code> | The IPv4 DNS name of the specified bucket. |
| <code>bucket_dual_stack_domain_name</code> | <code>str</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucket_name</code> | <code>str</code> | The name of the bucket. |
| <code>bucket_regional_domain_name</code> | <code>str</code> | The regional domain name of the specified bucket. |
| <code>bucket_website_domain_name</code> | <code>str</code> | The Domain name of the static website. |
| <code>bucket_website_url</code> | <code>str</code> | The URL of the static website. |
| <code>encryption_key</code> | <code>aws_cdk.aws_kms.IKey</code> | Optional KMS encryption key associated with this bucket. |
| <code>is_website</code> | <code>bool</code> | If this bucket has been configured for static website hosting. |
| <code>policy</code> | <code>aws_cdk.aws_s3.BucketPolicy</code> | The resource policy associated with this bucket. |

---

**<code>node</code>**
\`\`\`python
node: ConstructNode
\`\`\`

- *Type:* <code>aws_cdk.core.ConstructNode</code>

The construct tree node associated with this construct.

---

**<code>env</code>**
\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* <code>aws_cdk.core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`python
stack: Stack
\`\`\`

- *Type:* <code>aws_cdk.core.Stack</code>

The stack in which this resource is defined.

---

**<code>bucket_arn</code>**
\`\`\`python
bucket_arn: str
\`\`\`

- *Type:* <code>str</code>

The ARN of the bucket.

---

**<code>bucket_domain_name</code>**
\`\`\`python
bucket_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The IPv4 DNS name of the specified bucket.

---

**<code>bucket_dual_stack_domain_name</code>**
\`\`\`python
bucket_dual_stack_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The IPv6 DNS name of the specified bucket.

---

**<code>bucket_name</code>**
\`\`\`python
bucket_name: str
\`\`\`

- *Type:* <code>str</code>

The name of the bucket.

---

**<code>bucket_regional_domain_name</code>**
\`\`\`python
bucket_regional_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The regional domain name of the specified bucket.

---

**<code>bucket_website_domain_name</code>**
\`\`\`python
bucket_website_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The Domain name of the static website.

---

**<code>bucket_website_url</code>**
\`\`\`python
bucket_website_url: str
\`\`\`

- *Type:* <code>str</code>

The URL of the static website.

---

**<code>encryption_key</code>**
\`\`\`python
encryption_key: IKey
\`\`\`

- *Type:* <code>aws_cdk.aws_kms.IKey</code>

Optional KMS encryption key associated with this bucket.

---

**<code>is_website</code>**
\`\`\`python
is_website: bool
\`\`\`

- *Type:* <code>bool</code>

If this bucket has been configured for static website hosting.

---

**<code>policy</code>**
\`\`\`python
policy: BucketPolicy
\`\`\`

- *Type:* <code>aws_cdk.aws_s3.BucketPolicy</code>

The resource policy associated with this bucket.

If \`autoCreatePolicy\` is true, a \`BucketPolicy\` will be created upon the
first call to addToResourcePolicy(s).

---


### GreeterBucket <a name=\\"GreeterBucket\\" id=\\"construct-library.GreeterBucket\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"construct-library.GreeterBucket.Initializer\\"></a>

\`\`\`python
import construct_library

construct_library.GreeterBucket(
  scope: Construct,
  id: str,
  access_control: BucketAccessControl = None,
  auto_delete_objects: bool = None,
  block_public_access: BlockPublicAccess = None,
  bucket_key_enabled: bool = None,
  bucket_name: str = None,
  cors: typing.List[CorsRule] = None,
  encryption: BucketEncryption = None,
  encryption_key: IKey = None,
  enforce_ss_l: bool = None,
  event_bridge_enabled: bool = None,
  intelligent_tiering_configurations: typing.List[IntelligentTieringConfiguration] = None,
  inventories: typing.List[Inventory] = None,
  lifecycle_rules: typing.List[LifecycleRule] = None,
  metrics: typing.List[BucketMetrics] = None,
  notifications_handler_role: IRole = None,
  object_ownership: ObjectOwnership = None,
  public_read_access: bool = None,
  removal_policy: RemovalPolicy = None,
  server_access_logs_bucket: IBucket = None,
  server_access_logs_prefix: str = None,
  transfer_acceleration: bool = None,
  versioned: bool = None,
  website_error_document: str = None,
  website_index_document: str = None,
  website_redirect: RedirectTarget = None,
  website_routing_rules: typing.List[RoutingRule] = None
)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>access_control</code> | <code>aws_cdk.aws_s3.BucketAccessControl</code> | Specifies a canned ACL that grants predefined permissions to the bucket. |
| <code>auto_delete_objects</code> | <code>bool</code> | Whether all objects should be automatically deleted when the bucket is removed from the stack or when the stack is deleted. |
| <code>block_public_access</code> | <code>aws_cdk.aws_s3.BlockPublicAccess</code> | The block public access configuration of this bucket. |
| <code>bucket_key_enabled</code> | <code>bool</code> | Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. |
| <code>bucket_name</code> | <code>str</code> | Physical name of this bucket. |
| <code>cors</code> | <code>typing.List[aws_cdk.aws_s3.CorsRule]</code> | The CORS configuration of this bucket. |
| <code>encryption</code> | <code>aws_cdk.aws_s3.BucketEncryption</code> | The kind of server-side encryption to apply to this bucket. |
| <code>encryption_key</code> | <code>aws_cdk.aws_kms.IKey</code> | External KMS key to use for bucket encryption. |
| <code>enforce_ss_l</code> | <code>bool</code> | Enforces SSL for requests. |
| <code>event_bridge_enabled</code> | <code>bool</code> | Whether this bucket should send notifications to Amazon EventBridge or not. |
| <code>intelligent_tiering_configurations</code> | <code>typing.List[aws_cdk.aws_s3.IntelligentTieringConfiguration]</code> | Inteligent Tiering Configurations. |
| <code>inventories</code> | <code>typing.List[aws_cdk.aws_s3.Inventory]</code> | The inventory configuration of the bucket. |
| <code>lifecycle_rules</code> | <code>typing.List[aws_cdk.aws_s3.LifecycleRule]</code> | Rules that define how Amazon S3 manages objects during their lifetime. |
| <code>metrics</code> | <code>typing.List[aws_cdk.aws_s3.BucketMetrics]</code> | The metrics configuration of this bucket. |
| <code>notifications_handler_role</code> | <code>aws_cdk.aws_iam.IRole</code> | The role to be used by the notifications handler. |
| <code>object_ownership</code> | <code>aws_cdk.aws_s3.ObjectOwnership</code> | The objectOwnership of the bucket. |
| <code>public_read_access</code> | <code>bool</code> | Grants public read access to all objects in the bucket. |
| <code>removal_policy</code> | <code>aws_cdk.core.RemovalPolicy</code> | Policy to apply when the bucket is removed from this stack. |
| <code>server_access_logs_bucket</code> | <code>aws_cdk.aws_s3.IBucket</code> | Destination bucket for the server access logs. |
| <code>server_access_logs_prefix</code> | <code>str</code> | Optional log file prefix to use for the bucket's access logs. |
| <code>transfer_acceleration</code> | <code>bool</code> | Whether this bucket should have transfer acceleration turned on or not. |
| <code>versioned</code> | <code>bool</code> | Whether this bucket should have versioning turned on or not. |
| <code>website_error_document</code> | <code>str</code> | The name of the error document (e.g. \\"404.html\\") for the website. \`websiteIndexDocument\` must also be set if this is set. |
| <code>website_index_document</code> | <code>str</code> | The name of the index document (e.g. \\"index.html\\") for the website. Enables static website hosting for this bucket. |
| <code>website_redirect</code> | <code>aws_cdk.aws_s3.RedirectTarget</code> | Specifies the redirect behavior of all requests to a website endpoint of a bucket. |
| <code>website_routing_rules</code> | <code>typing.List[aws_cdk.aws_s3.RoutingRule]</code> | Rules that define when a redirect is applied and the redirect behavior. |

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>apply_removal_policy</code> | Apply the given removal policy to this resource. |
| <code>add_event_notification</code> | Adds a bucket notification event destination. |
| <code>add_object_created_notification</code> | Subscribes a destination to receive notifications when an object is created in the bucket. |
| <code>add_object_removed_notification</code> | Subscribes a destination to receive notifications when an object is removed from the bucket. |
| <code>add_to_resource_policy</code> | Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects. |
| <code>arn_for_objects</code> | Returns an ARN that represents all objects within the bucket that match the key pattern specified. |
| <code>grant_delete</code> | Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket. |
| <code>grant_public_access</code> | Allows unrestricted access to objects from this bucket. |
| <code>grant_put</code> | Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal. |
| <code>grant_put_acl</code> | Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket. |
| <code>grant_read</code> | Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grant_read_write</code> | Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grant_write</code> | Grant write permissions to this bucket to an IAM principal. |
| <code>on_cloud_trail_event</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>on_cloud_trail_put_object</code> | Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call. |
| <code>on_cloud_trail_write_object</code> | Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to. |
| <code>s3_url_for_object</code> | The S3 URL of an S3 object. For example:. |
| <code>transfer_acceleration_url_for_object</code> | The https Transfer Acceleration URL of an S3 object. |
| <code>url_for_object</code> | The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:. |
| <code>virtual_hosted_url_for_object</code> | The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:. |
| <code>add_cors_rule</code> | Adds a cross-origin access configuration for objects in an Amazon S3 bucket. |
| <code>add_inventory</code> | Add an inventory configuration. |
| <code>add_lifecycle_rule</code> | Add a lifecycle rule to the bucket. |
| <code>add_metric</code> | Adds a metrics configuration for the CloudWatch request metrics from the bucket. |
| <code>greet</code> | *No description.* |

---

**<code>apply_removal_policy</code>**
\`\`\`python
def apply_removal_policy(
  policy: RemovalPolicy
) -> None
\`\`\`

Apply the given removal policy to this resource.

The Removal Policy controls what happens to this resource when it stops
being managed by CloudFormation, either because you've removed it from the
CDK application or because you've made a change that requires the resource
to be replaced.

The resource can be deleted (\`RemovalPolicy.DESTROY\`), or left in your AWS
account for data recovery and cleanup later (\`RemovalPolicy.RETAIN\`).

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>policy</code> | <code>aws_cdk.core.RemovalPolicy</code> | *No description.* |

**<code>add_event_notification</code>**
\`\`\`python
def add_event_notification(
  event: EventType,
  dest: IBucketNotificationDestination,
  prefix: str = None,
  suffix: str = None
) -> None
\`\`\`

Adds a bucket notification event destination.

> [https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>event</code> | <code>aws_cdk.aws_s3.EventType</code> | The event to trigger the notification. |
| <code>dest</code> | <code>aws_cdk.aws_s3.IBucketNotificationDestination</code> | The notification destination (Lambda, SNS Topic or SQS Queue). |
| <code>prefix</code> | <code>str</code> | S3 keys must have the specified prefix. |
| <code>suffix</code> | <code>str</code> | S3 keys must have the specified suffix. |

*Example*

\`\`\`python
   declare const myLambda: lambda.Function;
   const bucket = new s3.Bucket(this, 'MyBucket');
   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});
\`\`\`


**<code>add_object_created_notification</code>**
\`\`\`python
def add_object_created_notification(
  dest: IBucketNotificationDestination,
  prefix: str = None,
  suffix: str = None
) -> None
\`\`\`

Subscribes a destination to receive notifications when an object is created in the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_CREATED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>aws_cdk.aws_s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>prefix</code> | <code>str</code> | S3 keys must have the specified prefix. |
| <code>suffix</code> | <code>str</code> | S3 keys must have the specified suffix. |

**<code>add_object_removed_notification</code>**
\`\`\`python
def add_object_removed_notification(
  dest: IBucketNotificationDestination,
  prefix: str = None,
  suffix: str = None
) -> None
\`\`\`

Subscribes a destination to receive notifications when an object is removed from the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_REMOVED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>aws_cdk.aws_s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>prefix</code> | <code>str</code> | S3 keys must have the specified prefix. |
| <code>suffix</code> | <code>str</code> | S3 keys must have the specified suffix. |

**<code>add_to_resource_policy</code>**
\`\`\`python
def add_to_resource_policy(
  permission: PolicyStatement
) -> AddToResourcePolicyResult
\`\`\`

Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects.

Note that the policy statement may or may not be added to the policy.
For example, when an \`IBucket\` is created from an existing bucket,
it's not possible to tell whether the bucket already has a policy
attached, let alone to re-use that policy to add more statements to it.
So it's safest to do nothing in these cases.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>permission</code> | <code>aws_cdk.aws_iam.PolicyStatement</code> | the policy statement to be added to the bucket's policy. |

**<code>arn_for_objects</code>**
\`\`\`python
def arn_for_objects(
  key_pattern: str
) -> str
\`\`\`

Returns an ARN that represents all objects within the bucket that match the key pattern specified.

To represent all keys, specify \`\`\\"*\\"\`\`.

If you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:

   arnForObjects(\`home/\${team}/\${user}/*\`)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key_pattern</code> | <code>str</code> | *No description.* |

**<code>grant_delete</code>**
\`\`\`python
def grant_delete(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | The principal. |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grant_public_access</code>**
\`\`\`python
def grant_public_access(
  allowed_actions: str,
  key_prefix: str = None
) -> Grant
\`\`\`

Allows unrestricted access to objects from this bucket.

IMPORTANT: This permission allows anyone to perform actions on S3 objects
in this bucket, which is useful for when you configure your bucket as a
website and want everyone to be able to read objects in the bucket without
needing to authenticate.

Without arguments, this method will grant read (\\"s3:GetObject\\") access to
all objects (\\"*\\") in the bucket.

The method returns the \`iam.Grant\` object, which can then be modified
as needed. For example, you can add a condition that will restrict access only
to an IPv4 range like this:

     const grant = bucket.grantPublicAccess();
     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });

Note that if this \`IBucket\` refers to an existing bucket, possibly not
managed by CloudFormation, this method will have no effect, since it's
impossible to modify the policy of an existing bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowed_actions</code> | <code>str</code> | the set of S3 actions to allow. |
| <code>key_prefix</code> | <code>str</code> | the prefix of S3 object keys (e.g. \`home/*\`). Default is \\"*\\". |

**<code>grant_put</code>**
\`\`\`python
def grant_put(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | The principal. |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grant_put_acl</code>**
\`\`\`python
def grant_put_acl(
  identity: IGrantable,
  objects_key_pattern: str = None
) -> Grant
\`\`\`

Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket.

If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,
calling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;
in this case, if you need to modify object ACLs, call this method explicitly.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>objects_key_pattern</code> | <code>str</code> | *No description.* |

**<code>grant_read</code>**
\`\`\`python
def grant_read(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If encryption is used, permission to use the key to decrypt the contents
of the bucket will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | The principal. |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grant_read_write</code>**
\`\`\`python
def grant_read_write(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If an encryption key is used, permission to use the key for
encrypt/decrypt will also be granted.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | *No description.* |

**<code>grant_write</code>**
\`\`\`python
def grant_write(
  identity: IGrantable,
  objects_key_pattern: typing.Any = None
) -> Grant
\`\`\`

Grant write permissions to this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>aws_cdk.aws_iam.IGrantable</code> | *No description.* |
| <code>objects_key_pattern</code> | <code>typing.Any</code> | *No description.* |

**<code>on_cloud_trail_event</code>**
\`\`\`python
def on_cloud_trail_event(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  paths: typing.List[str] = None
) -> Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>paths</code> | <code>typing.List[str]</code> | Only watch changes to these object paths. |

**<code>on_cloud_trail_put_object</code>**
\`\`\`python
def on_cloud_trail_put_object(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  paths: typing.List[str] = None
) -> Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using \`onCloudTrailWriteObject\` may be preferable.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>paths</code> | <code>typing.List[str]</code> | Only watch changes to these object paths. |

**<code>on_cloud_trail_write_object</code>**
\`\`\`python
def on_cloud_trail_write_object(
  id: str,
  description: str = None,
  event_pattern: EventPattern = None,
  rule_name: str = None,
  target: IRuleTarget = None,
  paths: typing.List[str] = None
) -> Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to.

This includes
the events PutObject, CopyObject, and CompleteMultipartUpload.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using this method may be preferable to \`onCloudTrailPutObject\`.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The id of the rule. |
| <code>description</code> | <code>str</code> | A description of the rule's purpose. |
| <code>event_pattern</code> | <code>aws_cdk.aws_events.EventPattern</code> | Additional restrictions for the event to route to the specified target. |
| <code>rule_name</code> | <code>str</code> | A name for the rule. |
| <code>target</code> | <code>aws_cdk.aws_events.IRuleTarget</code> | The target to register for the event. |
| <code>paths</code> | <code>typing.List[str]</code> | Only watch changes to these object paths. |

**<code>s3_url_for_object</code>**
\`\`\`python
def s3_url_for_object(
  key: str = None
) -> str
\`\`\`

The S3 URL of an S3 object. For example:.

\`s3://onlybucket\`
- \`s3://bucket/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |

**<code>transfer_acceleration_url_for_object</code>**
\`\`\`python
def transfer_acceleration_url_for_object(
  key: str = None,
  dual_stack: bool = None
) -> str
\`\`\`

The https Transfer Acceleration URL of an S3 object.

Specify \`dualStack: true\` at the options
for dual-stack endpoint (connect to the bucket over IPv6). For example:

- \`https://bucket.s3-accelerate.amazonaws.com\`
- \`https://bucket.s3-accelerate.amazonaws.com/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |
| <code>dual_stack</code> | <code>bool</code> | Dual-stack support to connect to the bucket over IPv6. |

**<code>url_for_object</code>**
\`\`\`python
def url_for_object(
  key: str = None
) -> str
\`\`\`

The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:.

\`https://s3.us-west-1.amazonaws.com/onlybucket\`
- \`https://s3.us-west-1.amazonaws.com/bucket/key\`
- \`https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |

**<code>virtual_hosted_url_for_object</code>**
\`\`\`python
def virtual_hosted_url_for_object(
  key: str = None,
  regional: bool = None
) -> str
\`\`\`

The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:.

\`https://only-bucket.s3.us-west-1.amazonaws.com\`
- \`https://bucket.s3.us-west-1.amazonaws.com/key\`
- \`https://bucket.s3.amazonaws.com/key\`
- \`https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>str</code> | The S3 key of the object. |
| <code>regional</code> | <code>bool</code> | Specifies the URL includes the region. |

**<code>add_cors_rule</code>**
\`\`\`python
def add_cors_rule(
  allowed_methods: typing.List[HttpMethods],
  allowed_origins: typing.List[str],
  allowed_headers: typing.List[str] = None,
  exposed_headers: typing.List[str] = None,
  id: str = None,
  max_age: typing.Union[int, float] = None
) -> None
\`\`\`

Adds a cross-origin access configuration for objects in an Amazon S3 bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowed_methods</code> | <code>typing.List[aws_cdk.aws_s3.HttpMethods]</code> | An HTTP method that you allow the origin to execute. |
| <code>allowed_origins</code> | <code>typing.List[str]</code> | One or more origins you want customers to be able to access the bucket from. |
| <code>allowed_headers</code> | <code>typing.List[str]</code> | Headers that are specified in the Access-Control-Request-Headers header. |
| <code>exposed_headers</code> | <code>typing.List[str]</code> | One or more headers in the response that you want customers to be able to access from their applications. |
| <code>id</code> | <code>str</code> | A unique identifier for this rule. |
| <code>max_age</code> | <code>typing.Union[int, float]</code> | The time in seconds that your browser is to cache the preflight response for the specified resource. |

**<code>add_inventory</code>**
\`\`\`python
def add_inventory(
  destination: InventoryDestination,
  enabled: bool = None,
  format: InventoryFormat = None,
  frequency: InventoryFrequency = None,
  include_object_versions: InventoryObjectVersion = None,
  inventory_id: str = None,
  objects_prefix: str = None,
  optional_fields: typing.List[str] = None
) -> None
\`\`\`

Add an inventory configuration.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>destination</code> | <code>aws_cdk.aws_s3.InventoryDestination</code> | The destination of the inventory. |
| <code>enabled</code> | <code>bool</code> | Whether the inventory is enabled or disabled. |
| <code>format</code> | <code>aws_cdk.aws_s3.InventoryFormat</code> | The format of the inventory. |
| <code>frequency</code> | <code>aws_cdk.aws_s3.InventoryFrequency</code> | Frequency at which the inventory should be generated. |
| <code>include_object_versions</code> | <code>aws_cdk.aws_s3.InventoryObjectVersion</code> | If the inventory should contain all the object versions or only the current one. |
| <code>inventory_id</code> | <code>str</code> | The inventory configuration ID. |
| <code>objects_prefix</code> | <code>str</code> | The inventory will only include objects that meet the prefix filter criteria. |
| <code>optional_fields</code> | <code>typing.List[str]</code> | A list of optional fields to be included in the inventory result. |

**<code>add_lifecycle_rule</code>**
\`\`\`python
def add_lifecycle_rule(
  abort_incomplete_multipart_upload_after: Duration = None,
  enabled: bool = None,
  expiration: Duration = None,
  expiration_date: datetime.datetime = None,
  expired_object_delete_marker: bool = None,
  id: str = None,
  noncurrent_version_expiration: Duration = None,
  noncurrent_versions_to_retain: typing.Union[int, float] = None,
  noncurrent_version_transitions: typing.List[NoncurrentVersionTransition] = None,
  object_size_greater_than: typing.Union[int, float] = None,
  object_size_less_than: typing.Union[int, float] = None,
  prefix: str = None,
  tag_filters: typing.Mapping[typing.Any] = None,
  transitions: typing.List[Transition] = None
) -> None
\`\`\`

Add a lifecycle rule to the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>abort_incomplete_multipart_upload_after</code> | <code>aws_cdk.core.Duration</code> | Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket. |
| <code>enabled</code> | <code>bool</code> | Whether this rule is enabled. |
| <code>expiration</code> | <code>aws_cdk.core.Duration</code> | Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier. |
| <code>expiration_date</code> | <code>datetime.datetime</code> | Indicates when objects are deleted from Amazon S3 and Amazon Glacier. |
| <code>expired_object_delete_marker</code> | <code>bool</code> | Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. |
| <code>id</code> | <code>str</code> | A unique identifier for this rule. |
| <code>noncurrent_version_expiration</code> | <code>aws_cdk.core.Duration</code> | Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire. |
| <code>noncurrent_versions_to_retain</code> | <code>typing.Union[int, float]</code> | Indicates a maximum number of noncurrent versions to retain. |
| <code>noncurrent_version_transitions</code> | <code>typing.List[aws_cdk.aws_s3.NoncurrentVersionTransition]</code> | One or more transition rules that specify when non-current objects transition to a specified storage class. |
| <code>object_size_greater_than</code> | <code>typing.Union[int, float]</code> | Specifies the minimum object size in bytes for this rule to apply to. |
| <code>object_size_less_than</code> | <code>typing.Union[int, float]</code> | Specifies the maximum object size in bytes for this rule to apply to. |
| <code>prefix</code> | <code>str</code> | Object key prefix that identifies one or more objects to which this rule applies. |
| <code>tag_filters</code> | <code>typing.Mapping[typing.Any]</code> | The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket. |
| <code>transitions</code> | <code>typing.List[aws_cdk.aws_s3.Transition]</code> | One or more transition rules that specify when an object transitions to a specified storage class. |

**<code>add_metric</code>**
\`\`\`python
def add_metric(
  id: str,
  prefix: str = None,
  tag_filters: typing.Mapping[typing.Any] = None
) -> None
\`\`\`

Adds a metrics configuration for the CloudWatch request metrics from the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>str</code> | The ID used to identify the metrics configuration. |
| <code>prefix</code> | <code>str</code> | The prefix that an object must have to be included in the metrics results. |
| <code>tag_filters</code> | <code>typing.Mapping[typing.Any]</code> | Specifies a list of tag filters to use as a metrics configuration filter. |

**<code>greet</code>**
\`\`\`python
def greet() -> None
\`\`\`

#### Static Methods <a name=\\"Static Methods\\" id=\\"Static Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>is_resource</code> | Check whether the given construct is a Resource. |
| <code>from_bucket_arn</code> | *No description.* |
| <code>from_bucket_attributes</code> | Creates a Bucket construct that represents an external bucket. |
| <code>from_bucket_name</code> | *No description.* |
| <code>validate_bucket_name</code> | Thrown an exception if the given bucket name is not valid. |

---

**<code>is_resource</code>**
\`\`\`python
import construct_library

construct_library.GreeterBucket.is_resource(
  construct: IConstruct
)
\`\`\`

Check whether the given construct is a Resource.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>construct</code> | <code>aws_cdk.core.IConstruct</code> | *No description.* |

**<code>from_bucket_arn</code>**
\`\`\`python
import construct_library

construct_library.GreeterBucket.from_bucket_arn(
  scope: Construct,
  id: str,
  bucket_arn: str
)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>bucket_arn</code> | <code>str</code> | *No description.* |

**<code>from_bucket_attributes</code>**
\`\`\`python
import construct_library

construct_library.GreeterBucket.from_bucket_attributes(
  scope: Construct,
  id: str,
  account: str = None,
  bucket_arn: str = None,
  bucket_domain_name: str = None,
  bucket_dual_stack_domain_name: str = None,
  bucket_name: str = None,
  bucket_regional_domain_name: str = None,
  bucket_website_new_url_format: bool = None,
  bucket_website_url: str = None,
  encryption_key: IKey = None,
  is_website: bool = None,
  notifications_handler_role: IRole = None,
  region: str = None
)
\`\`\`

Creates a Bucket construct that represents an external bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | The parent creating construct (usually \`this\`). |
| <code>id</code> | <code>str</code> | The construct's name. |
| <code>account</code> | <code>str</code> | The account this existing bucket belongs to. |
| <code>bucket_arn</code> | <code>str</code> | The ARN of the bucket. |
| <code>bucket_domain_name</code> | <code>str</code> | The domain name of the bucket. |
| <code>bucket_dual_stack_domain_name</code> | <code>str</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucket_name</code> | <code>str</code> | The name of the bucket. |
| <code>bucket_regional_domain_name</code> | <code>str</code> | The regional domain name of the specified bucket. |
| <code>bucket_website_new_url_format</code> | <code>bool</code> | The format of the website URL of the bucket. |
| <code>bucket_website_url</code> | <code>str</code> | The website URL of the bucket (if static web hosting is enabled). |
| <code>encryption_key</code> | <code>aws_cdk.aws_kms.IKey</code> | *No description.* |
| <code>is_website</code> | <code>bool</code> | If this bucket has been configured for static website hosting. |
| <code>notifications_handler_role</code> | <code>aws_cdk.aws_iam.IRole</code> | The role to be used by the notifications handler. |
| <code>region</code> | <code>str</code> | The region this existing bucket is in. |

**<code>from_bucket_name</code>**
\`\`\`python
import construct_library

construct_library.GreeterBucket.from_bucket_name(
  scope: Construct,
  id: str,
  bucket_name: str
)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>str</code> | *No description.* |
| <code>bucket_name</code> | <code>str</code> | *No description.* |

**<code>validate_bucket_name</code>**
\`\`\`python
import construct_library

construct_library.GreeterBucket.validate_bucket_name(
  physical_name: str
)
\`\`\`

Thrown an exception if the given bucket name is not valid.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>physical_name</code> | <code>str</code> | name of the bucket. |

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>aws_cdk.core.ConstructNode</code> | The construct tree node associated with this construct. |
| <code>env</code> | <code>aws_cdk.core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>aws_cdk.core.Stack</code> | The stack in which this resource is defined. |
| <code>bucket_arn</code> | <code>str</code> | The ARN of the bucket. |
| <code>bucket_domain_name</code> | <code>str</code> | The IPv4 DNS name of the specified bucket. |
| <code>bucket_dual_stack_domain_name</code> | <code>str</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucket_name</code> | <code>str</code> | The name of the bucket. |
| <code>bucket_regional_domain_name</code> | <code>str</code> | The regional domain name of the specified bucket. |
| <code>bucket_website_domain_name</code> | <code>str</code> | The Domain name of the static website. |
| <code>bucket_website_url</code> | <code>str</code> | The URL of the static website. |
| <code>encryption_key</code> | <code>aws_cdk.aws_kms.IKey</code> | Optional KMS encryption key associated with this bucket. |
| <code>is_website</code> | <code>bool</code> | If this bucket has been configured for static website hosting. |
| <code>policy</code> | <code>aws_cdk.aws_s3.BucketPolicy</code> | The resource policy associated with this bucket. |

---

**<code>node</code>**
\`\`\`python
node: ConstructNode
\`\`\`

- *Type:* <code>aws_cdk.core.ConstructNode</code>

The construct tree node associated with this construct.

---

**<code>env</code>**
\`\`\`python
env: ResourceEnvironment
\`\`\`

- *Type:* <code>aws_cdk.core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`python
stack: Stack
\`\`\`

- *Type:* <code>aws_cdk.core.Stack</code>

The stack in which this resource is defined.

---

**<code>bucket_arn</code>**
\`\`\`python
bucket_arn: str
\`\`\`

- *Type:* <code>str</code>

The ARN of the bucket.

---

**<code>bucket_domain_name</code>**
\`\`\`python
bucket_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The IPv4 DNS name of the specified bucket.

---

**<code>bucket_dual_stack_domain_name</code>**
\`\`\`python
bucket_dual_stack_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The IPv6 DNS name of the specified bucket.

---

**<code>bucket_name</code>**
\`\`\`python
bucket_name: str
\`\`\`

- *Type:* <code>str</code>

The name of the bucket.

---

**<code>bucket_regional_domain_name</code>**
\`\`\`python
bucket_regional_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The regional domain name of the specified bucket.

---

**<code>bucket_website_domain_name</code>**
\`\`\`python
bucket_website_domain_name: str
\`\`\`

- *Type:* <code>str</code>

The Domain name of the static website.

---

**<code>bucket_website_url</code>**
\`\`\`python
bucket_website_url: str
\`\`\`

- *Type:* <code>str</code>

The URL of the static website.

---

**<code>encryption_key</code>**
\`\`\`python
encryption_key: IKey
\`\`\`

- *Type:* <code>aws_cdk.aws_kms.IKey</code>

Optional KMS encryption key associated with this bucket.

---

**<code>is_website</code>**
\`\`\`python
is_website: bool
\`\`\`

- *Type:* <code>bool</code>

If this bucket has been configured for static website hosting.

---

**<code>policy</code>**
\`\`\`python
policy: BucketPolicy
\`\`\`

- *Type:* <code>aws_cdk.aws_s3.BucketPolicy</code>

The resource policy associated with this bucket.

If \`autoCreatePolicy\` is true, a \`BucketPolicy\` will be created upon the
first call to addToResourcePolicy(s).

---





"
`;

exports[`specify root submodule 1`] = `
"# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Resources <a name=\\"Resources\\" id=\\"Resources\\"></a>

### GreeterBucket <a name=\\"GreeterBucket\\" id=\\"construct-library.GreeterBucket\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"construct-library.GreeterBucket.Initializer\\"></a>

\`\`\`typescript
import { GreeterBucket } from 'construct-library'

new GreeterBucket(scope: Construct, id: string, props?: BucketProps)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>props</code> | <code>@aws-cdk/aws-s3.BucketProps</code> | *No description.* |

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>applyRemovalPolicy</code> | Apply the given removal policy to this resource. |
| <code>addEventNotification</code> | Adds a bucket notification event destination. |
| <code>addObjectCreatedNotification</code> | Subscribes a destination to receive notifications when an object is created in the bucket. |
| <code>addObjectRemovedNotification</code> | Subscribes a destination to receive notifications when an object is removed from the bucket. |
| <code>addToResourcePolicy</code> | Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects. |
| <code>arnForObjects</code> | Returns an ARN that represents all objects within the bucket that match the key pattern specified. |
| <code>grantDelete</code> | Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket. |
| <code>grantPublicAccess</code> | Allows unrestricted access to objects from this bucket. |
| <code>grantPut</code> | Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal. |
| <code>grantPutAcl</code> | Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket. |
| <code>grantRead</code> | Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantReadWrite</code> | Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantWrite</code> | Grant write permissions to this bucket to an IAM principal. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailPutObject</code> | Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call. |
| <code>onCloudTrailWriteObject</code> | Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to. |
| <code>s3UrlForObject</code> | The S3 URL of an S3 object. For example:. |
| <code>transferAccelerationUrlForObject</code> | The https Transfer Acceleration URL of an S3 object. |
| <code>urlForObject</code> | The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:. |
| <code>virtualHostedUrlForObject</code> | The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:. |
| <code>addCorsRule</code> | Adds a cross-origin access configuration for objects in an Amazon S3 bucket. |
| <code>addInventory</code> | Add an inventory configuration. |
| <code>addLifecycleRule</code> | Add a lifecycle rule to the bucket. |
| <code>addMetric</code> | Adds a metrics configuration for the CloudWatch request metrics from the bucket. |
| <code>greet</code> | *No description.* |

---

**<code>applyRemovalPolicy</code>**
\`\`\`typescript
public applyRemovalPolicy(policy: RemovalPolicy): void
\`\`\`

Apply the given removal policy to this resource.

The Removal Policy controls what happens to this resource when it stops
being managed by CloudFormation, either because you've removed it from the
CDK application or because you've made a change that requires the resource
to be replaced.

The resource can be deleted (\`RemovalPolicy.DESTROY\`), or left in your AWS
account for data recovery and cleanup later (\`RemovalPolicy.RETAIN\`).

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>policy</code> | <code>@aws-cdk/core.RemovalPolicy</code> | *No description.* |

**<code>addEventNotification</code>**
\`\`\`typescript
public addEventNotification(event: EventType, dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Adds a bucket notification event destination.

> [https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>event</code> | <code>@aws-cdk/aws-s3.EventType</code> | The event to trigger the notification. |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (Lambda, SNS Topic or SQS Queue). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | S3 object key filter rules to determine which objects trigger this event. |

*Example*

\`\`\`typescript
   declare const myLambda: lambda.Function;
   const bucket = new s3.Bucket(this, 'MyBucket');
   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});
\`\`\`


**<code>addObjectCreatedNotification</code>**
\`\`\`typescript
public addObjectCreatedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is created in the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_CREATED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addObjectRemovedNotification</code>**
\`\`\`typescript
public addObjectRemovedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is removed from the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_REMOVED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addToResourcePolicy</code>**
\`\`\`typescript
public addToResourcePolicy(permission: PolicyStatement): AddToResourcePolicyResult
\`\`\`

Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects.

Note that the policy statement may or may not be added to the policy.
For example, when an \`IBucket\` is created from an existing bucket,
it's not possible to tell whether the bucket already has a policy
attached, let alone to re-use that policy to add more statements to it.
So it's safest to do nothing in these cases.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>permission</code> | <code>@aws-cdk/aws-iam.PolicyStatement</code> | the policy statement to be added to the bucket's policy. |

**<code>arnForObjects</code>**
\`\`\`typescript
public arnForObjects(keyPattern: string): string
\`\`\`

Returns an ARN that represents all objects within the bucket that match the key pattern specified.

To represent all keys, specify \`\`\\"*\\"\`\`.

If you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:

   arnForObjects(\`home/\${team}/\${user}/*\`)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>keyPattern</code> | <code>string</code> | *No description.* |

**<code>grantDelete</code>**
\`\`\`typescript
public grantDelete(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPublicAccess</code>**
\`\`\`typescript
public grantPublicAccess(allowedActions: string, keyPrefix?: string): Grant
\`\`\`

Allows unrestricted access to objects from this bucket.

IMPORTANT: This permission allows anyone to perform actions on S3 objects
in this bucket, which is useful for when you configure your bucket as a
website and want everyone to be able to read objects in the bucket without
needing to authenticate.

Without arguments, this method will grant read (\\"s3:GetObject\\") access to
all objects (\\"*\\") in the bucket.

The method returns the \`iam.Grant\` object, which can then be modified
as needed. For example, you can add a condition that will restrict access only
to an IPv4 range like this:

     const grant = bucket.grantPublicAccess();
     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });

Note that if this \`IBucket\` refers to an existing bucket, possibly not
managed by CloudFormation, this method will have no effect, since it's
impossible to modify the policy of an existing bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowedActions</code> | <code>string</code> | the set of S3 actions to allow. |
| <code>keyPrefix</code> | <code>string</code> | the prefix of S3 object keys (e.g. \`home/*\`). Default is \\"*\\". |

**<code>grantPut</code>**
\`\`\`typescript
public grantPut(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPutAcl</code>**
\`\`\`typescript
public grantPutAcl(identity: IGrantable, objectsKeyPattern?: string): Grant
\`\`\`

Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket.

If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,
calling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;
in this case, if you need to modify object ACLs, call this method explicitly.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>string</code> | *No description.* |

**<code>grantRead</code>**
\`\`\`typescript
public grantRead(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If encryption is used, permission to use the key to decrypt the contents
of the bucket will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantReadWrite</code>**
\`\`\`typescript
public grantReadWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If an encryption key is used, permission to use the key for
encrypt/decrypt will also be granted.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>grantWrite</code>**
\`\`\`typescript
public grantWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant write permissions to this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailPutObject</code>**
\`\`\`typescript
public onCloudTrailPutObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using \`onCloudTrailWriteObject\` may be preferable.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailWriteObject</code>**
\`\`\`typescript
public onCloudTrailWriteObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to.

This includes
the events PutObject, CopyObject, and CompleteMultipartUpload.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using this method may be preferable to \`onCloudTrailPutObject\`.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>s3UrlForObject</code>**
\`\`\`typescript
public s3UrlForObject(key?: string): string
\`\`\`

The S3 URL of an S3 object. For example:.

\`s3://onlybucket\`
- \`s3://bucket/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>transferAccelerationUrlForObject</code>**
\`\`\`typescript
public transferAccelerationUrlForObject(key?: string, options?: TransferAccelerationUrlOptions): string
\`\`\`

The https Transfer Acceleration URL of an S3 object.

Specify \`dualStack: true\` at the options
for dual-stack endpoint (connect to the bucket over IPv6). For example:

- \`https://bucket.s3-accelerate.amazonaws.com\`
- \`https://bucket.s3-accelerate.amazonaws.com/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.TransferAccelerationUrlOptions</code> | Options for generating URL. |

**<code>urlForObject</code>**
\`\`\`typescript
public urlForObject(key?: string): string
\`\`\`

The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:.

\`https://s3.us-west-1.amazonaws.com/onlybucket\`
- \`https://s3.us-west-1.amazonaws.com/bucket/key\`
- \`https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>virtualHostedUrlForObject</code>**
\`\`\`typescript
public virtualHostedUrlForObject(key?: string, options?: VirtualHostedStyleUrlOptions): string
\`\`\`

The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:.

\`https://only-bucket.s3.us-west-1.amazonaws.com\`
- \`https://bucket.s3.us-west-1.amazonaws.com/key\`
- \`https://bucket.s3.amazonaws.com/key\`
- \`https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions</code> | Options for generating URL. |

**<code>addCorsRule</code>**
\`\`\`typescript
public addCorsRule(rule: CorsRule): void
\`\`\`

Adds a cross-origin access configuration for objects in an Amazon S3 bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.CorsRule</code> | The CORS configuration rule to add. |

**<code>addInventory</code>**
\`\`\`typescript
public addInventory(inventory: Inventory): void
\`\`\`

Add an inventory configuration.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>inventory</code> | <code>@aws-cdk/aws-s3.Inventory</code> | configuration to add. |

**<code>addLifecycleRule</code>**
\`\`\`typescript
public addLifecycleRule(rule: LifecycleRule): void
\`\`\`

Add a lifecycle rule to the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.LifecycleRule</code> | The rule to add. |

**<code>addMetric</code>**
\`\`\`typescript
public addMetric(metric: BucketMetrics): void
\`\`\`

Adds a metrics configuration for the CloudWatch request metrics from the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>metric</code> | <code>@aws-cdk/aws-s3.BucketMetrics</code> | The metric configuration to add. |

**<code>greet</code>**
\`\`\`typescript
public greet(): void
\`\`\`

#### Static Methods <a name=\\"Static Methods\\" id=\\"Static Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>isResource</code> | Check whether the given construct is a Resource. |
| <code>fromBucketArn</code> | *No description.* |
| <code>fromBucketAttributes</code> | Creates a Bucket construct that represents an external bucket. |
| <code>fromBucketName</code> | *No description.* |
| <code>validateBucketName</code> | Thrown an exception if the given bucket name is not valid. |

---

**<code>isResource</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.isResource(construct: IConstruct)
\`\`\`

Check whether the given construct is a Resource.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>construct</code> | <code>@aws-cdk/core.IConstruct</code> | *No description.* |

**<code>fromBucketArn</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.fromBucketArn(scope: Construct, id: string, bucketArn: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketArn</code> | <code>string</code> | *No description.* |

**<code>fromBucketAttributes</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.fromBucketAttributes(scope: Construct, id: string, attrs: BucketAttributes)
\`\`\`

Creates a Bucket construct that represents an external bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | The parent creating construct (usually \`this\`). |
| <code>id</code> | <code>string</code> | The construct's name. |
| <code>attrs</code> | <code>@aws-cdk/aws-s3.BucketAttributes</code> | A \`BucketAttributes\` object. |

**<code>fromBucketName</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.fromBucketName(scope: Construct, id: string, bucketName: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketName</code> | <code>string</code> | *No description.* |

**<code>validateBucketName</code>**
\`\`\`typescript
import { GreeterBucket } from 'construct-library'

GreeterBucket.validateBucketName(physicalName: string)
\`\`\`

Thrown an exception if the given bucket name is not valid.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>physicalName</code> | <code>string</code> | name of the bucket. |

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node associated with this construct. |
| <code>env</code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code>bucketArn</code> | <code>string</code> | The ARN of the bucket. |
| <code>bucketDomainName</code> | <code>string</code> | The IPv4 DNS name of the specified bucket. |
| <code>bucketDualStackDomainName</code> | <code>string</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucketName</code> | <code>string</code> | The name of the bucket. |
| <code>bucketRegionalDomainName</code> | <code>string</code> | The regional domain name of the specified bucket. |
| <code>bucketWebsiteDomainName</code> | <code>string</code> | The Domain name of the static website. |
| <code>bucketWebsiteUrl</code> | <code>string</code> | The URL of the static website. |
| <code>encryptionKey</code> | <code>@aws-cdk/aws-kms.IKey</code> | Optional KMS encryption key associated with this bucket. |
| <code>isWebsite</code> | <code>boolean</code> | If this bucket has been configured for static website hosting. |
| <code>policy</code> | <code>@aws-cdk/aws-s3.BucketPolicy</code> | The resource policy associated with this bucket. |

---

**<code>node</code>**
\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* <code>@aws-cdk/core.ConstructNode</code>

The construct tree node associated with this construct.

---

**<code>env</code>**
\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* <code>@aws-cdk/core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* <code>@aws-cdk/core.Stack</code>

The stack in which this resource is defined.

---

**<code>bucketArn</code>**
\`\`\`typescript
public readonly bucketArn: string;
\`\`\`

- *Type:* <code>string</code>

The ARN of the bucket.

---

**<code>bucketDomainName</code>**
\`\`\`typescript
public readonly bucketDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv4 DNS name of the specified bucket.

---

**<code>bucketDualStackDomainName</code>**
\`\`\`typescript
public readonly bucketDualStackDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv6 DNS name of the specified bucket.

---

**<code>bucketName</code>**
\`\`\`typescript
public readonly bucketName: string;
\`\`\`

- *Type:* <code>string</code>

The name of the bucket.

---

**<code>bucketRegionalDomainName</code>**
\`\`\`typescript
public readonly bucketRegionalDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The regional domain name of the specified bucket.

---

**<code>bucketWebsiteDomainName</code>**
\`\`\`typescript
public readonly bucketWebsiteDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The Domain name of the static website.

---

**<code>bucketWebsiteUrl</code>**
\`\`\`typescript
public readonly bucketWebsiteUrl: string;
\`\`\`

- *Type:* <code>string</code>

The URL of the static website.

---

**<code>encryptionKey</code>**
\`\`\`typescript
public readonly encryptionKey: IKey;
\`\`\`

- *Type:* <code>@aws-cdk/aws-kms.IKey</code>

Optional KMS encryption key associated with this bucket.

---

**<code>isWebsite</code>**
\`\`\`typescript
public readonly isWebsite: boolean;
\`\`\`

- *Type:* <code>boolean</code>

If this bucket has been configured for static website hosting.

---

**<code>policy</code>**
\`\`\`typescript
public readonly policy: BucketPolicy;
\`\`\`

- *Type:* <code>@aws-cdk/aws-s3.BucketPolicy</code>

The resource policy associated with this bucket.

If \`autoCreatePolicy\` is true, a \`BucketPolicy\` will be created upon the
first call to addToResourcePolicy(s).

---





"
`;

exports[`specify submodule 1`] = `
"# API Reference <a name=\\"API Reference\\" id=\\"api-reference\\"></a>

## Resources <a name=\\"Resources\\" id=\\"Resources\\"></a>

### GoodbyeBucket <a name=\\"GoodbyeBucket\\" id=\\"construct-library.submod1.GoodbyeBucket\\"></a>

#### Initializer <a name=\\"Initializer\\" id=\\"construct-library.submod1.GoodbyeBucket.Initializer\\"></a>

\`\`\`typescript
import { submod1 } from 'construct-library'

new submod1.GoodbyeBucket(scope: Construct, id: string, props?: BucketProps)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>props</code> | <code>@aws-cdk/aws-s3.BucketProps</code> | *No description.* |

---

#### Methods <a name=\\"Methods\\" id=\\"Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>applyRemovalPolicy</code> | Apply the given removal policy to this resource. |
| <code>addEventNotification</code> | Adds a bucket notification event destination. |
| <code>addObjectCreatedNotification</code> | Subscribes a destination to receive notifications when an object is created in the bucket. |
| <code>addObjectRemovedNotification</code> | Subscribes a destination to receive notifications when an object is removed from the bucket. |
| <code>addToResourcePolicy</code> | Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects. |
| <code>arnForObjects</code> | Returns an ARN that represents all objects within the bucket that match the key pattern specified. |
| <code>grantDelete</code> | Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket. |
| <code>grantPublicAccess</code> | Allows unrestricted access to objects from this bucket. |
| <code>grantPut</code> | Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal. |
| <code>grantPutAcl</code> | Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket. |
| <code>grantRead</code> | Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantReadWrite</code> | Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User). |
| <code>grantWrite</code> | Grant write permissions to this bucket to an IAM principal. |
| <code>onCloudTrailEvent</code> | Define a CloudWatch event that triggers when something happens to this repository. |
| <code>onCloudTrailPutObject</code> | Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call. |
| <code>onCloudTrailWriteObject</code> | Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to. |
| <code>s3UrlForObject</code> | The S3 URL of an S3 object. For example:. |
| <code>transferAccelerationUrlForObject</code> | The https Transfer Acceleration URL of an S3 object. |
| <code>urlForObject</code> | The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:. |
| <code>virtualHostedUrlForObject</code> | The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:. |
| <code>addCorsRule</code> | Adds a cross-origin access configuration for objects in an Amazon S3 bucket. |
| <code>addInventory</code> | Add an inventory configuration. |
| <code>addLifecycleRule</code> | Add a lifecycle rule to the bucket. |
| <code>addMetric</code> | Adds a metrics configuration for the CloudWatch request metrics from the bucket. |
| <code>goodbye</code> | *No description.* |

---

**<code>applyRemovalPolicy</code>**
\`\`\`typescript
public applyRemovalPolicy(policy: RemovalPolicy): void
\`\`\`

Apply the given removal policy to this resource.

The Removal Policy controls what happens to this resource when it stops
being managed by CloudFormation, either because you've removed it from the
CDK application or because you've made a change that requires the resource
to be replaced.

The resource can be deleted (\`RemovalPolicy.DESTROY\`), or left in your AWS
account for data recovery and cleanup later (\`RemovalPolicy.RETAIN\`).

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>policy</code> | <code>@aws-cdk/core.RemovalPolicy</code> | *No description.* |

**<code>addEventNotification</code>**
\`\`\`typescript
public addEventNotification(event: EventType, dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Adds a bucket notification event destination.

> [https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>event</code> | <code>@aws-cdk/aws-s3.EventType</code> | The event to trigger the notification. |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (Lambda, SNS Topic or SQS Queue). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | S3 object key filter rules to determine which objects trigger this event. |

*Example*

\`\`\`typescript
   declare const myLambda: lambda.Function;
   const bucket = new s3.Bucket(this, 'MyBucket');
   bucket.addEventNotification(s3.EventType.OBJECT_CREATED, new s3n.LambdaDestination(myLambda), {prefix: 'home/myusername/*'});
\`\`\`


**<code>addObjectCreatedNotification</code>**
\`\`\`typescript
public addObjectCreatedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is created in the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_CREATED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addObjectRemovedNotification</code>**
\`\`\`typescript
public addObjectRemovedNotification(dest: IBucketNotificationDestination, filters: NotificationKeyFilter): void
\`\`\`

Subscribes a destination to receive notifications when an object is removed from the bucket.

This is identical to calling
\`onEvent(EventType.OBJECT_REMOVED)\`.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>dest</code> | <code>@aws-cdk/aws-s3.IBucketNotificationDestination</code> | The notification destination (see onEvent). |
| <code>filters</code> | <code>@aws-cdk/aws-s3.NotificationKeyFilter</code> | Filters (see onEvent). |

**<code>addToResourcePolicy</code>**
\`\`\`typescript
public addToResourcePolicy(permission: PolicyStatement): AddToResourcePolicyResult
\`\`\`

Adds a statement to the resource policy for a principal (i.e. account/role/service) to perform actions on this bucket and/or its contents. Use \`bucketArn\` and \`arnForObjects(keys)\` to obtain ARNs for this bucket or objects.

Note that the policy statement may or may not be added to the policy.
For example, when an \`IBucket\` is created from an existing bucket,
it's not possible to tell whether the bucket already has a policy
attached, let alone to re-use that policy to add more statements to it.
So it's safest to do nothing in these cases.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>permission</code> | <code>@aws-cdk/aws-iam.PolicyStatement</code> | the policy statement to be added to the bucket's policy. |

**<code>arnForObjects</code>**
\`\`\`typescript
public arnForObjects(keyPattern: string): string
\`\`\`

Returns an ARN that represents all objects within the bucket that match the key pattern specified.

To represent all keys, specify \`\`\\"*\\"\`\`.

If you need to specify a keyPattern with multiple components, concatenate them into a single string, e.g.:

   arnForObjects(\`home/\${team}/\${user}/*\`)

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>keyPattern</code> | <code>string</code> | *No description.* |

**<code>grantDelete</code>**
\`\`\`typescript
public grantDelete(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:DeleteObject* permission to an IAM principal for objects in this bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPublicAccess</code>**
\`\`\`typescript
public grantPublicAccess(allowedActions: string, keyPrefix?: string): Grant
\`\`\`

Allows unrestricted access to objects from this bucket.

IMPORTANT: This permission allows anyone to perform actions on S3 objects
in this bucket, which is useful for when you configure your bucket as a
website and want everyone to be able to read objects in the bucket without
needing to authenticate.

Without arguments, this method will grant read (\\"s3:GetObject\\") access to
all objects (\\"*\\") in the bucket.

The method returns the \`iam.Grant\` object, which can then be modified
as needed. For example, you can add a condition that will restrict access only
to an IPv4 range like this:

     const grant = bucket.grantPublicAccess();
     grant.resourceStatement!.addCondition(‘IpAddress’, { “aws:SourceIp”: “54.240.143.0/24” });

Note that if this \`IBucket\` refers to an existing bucket, possibly not
managed by CloudFormation, this method will have no effect, since it's
impossible to modify the policy of an existing bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>allowedActions</code> | <code>string</code> | the set of S3 actions to allow. |
| <code>keyPrefix</code> | <code>string</code> | the prefix of S3 object keys (e.g. \`home/*\`). Default is \\"*\\". |

**<code>grantPut</code>**
\`\`\`typescript
public grantPut(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantPutAcl</code>**
\`\`\`typescript
public grantPutAcl(identity: IGrantable, objectsKeyPattern?: string): Grant
\`\`\`

Grant the given IAM identity permissions to modify the ACLs of objects in the given Bucket.

If your application has the '@aws-cdk/aws-s3:grantWriteWithoutAcl' feature flag set,
calling {@link grantWrite} or {@link grantReadWrite} no longer grants permissions to modify the ACLs of the objects;
in this case, if you need to modify object ACLs, call this method explicitly.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>string</code> | *No description.* |

**<code>grantRead</code>**
\`\`\`typescript
public grantRead(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant read permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If encryption is used, permission to use the key to decrypt the contents
of the bucket will also be granted to the same principal.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | The principal. |
| <code>objectsKeyPattern</code> | <code>any</code> | Restrict the permission to a certain key pattern (default '*'). |

**<code>grantReadWrite</code>**
\`\`\`typescript
public grantReadWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grants read/write permissions for this bucket and it's contents to an IAM principal (Role/Group/User).

If an encryption key is used, permission to use the key for
encrypt/decrypt will also be granted.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>grantWrite</code>**
\`\`\`typescript
public grantWrite(identity: IGrantable, objectsKeyPattern?: any): Grant
\`\`\`

Grant write permissions to this bucket to an IAM principal.

If encryption is used, permission to use the key to encrypt the contents
of written files will also be granted to the same principal.

Before CDK version 1.85.0, this method granted the \`s3:PutObject*\` permission that included \`s3:PutObjectAcl\`,
which could be used to grant read/write object access to IAM principals in other accounts.
If you want to get rid of that behavior, update your CDK version to 1.85.0 or later,
and make sure the \`@aws-cdk/aws-s3:grantWriteWithoutAcl\` feature flag is set to \`true\`
in the \`context\` key of your cdk.json file.
If you've already updated, but still need the principal to have permissions to modify the ACLs,
use the {@link grantPutAcl} method.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>identity</code> | <code>@aws-cdk/aws-iam.IGrantable</code> | *No description.* |
| <code>objectsKeyPattern</code> | <code>any</code> | *No description.* |

**<code>onCloudTrailEvent</code>**
\`\`\`typescript
public onCloudTrailEvent(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Define a CloudWatch event that triggers when something happens to this repository.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailPutObject</code>**
\`\`\`typescript
public onCloudTrailPutObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object is uploaded to the specified paths (keys) in this bucket using the PutObject API call.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using \`onCloudTrailWriteObject\` may be preferable.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>onCloudTrailWriteObject</code>**
\`\`\`typescript
public onCloudTrailWriteObject(id: string, options?: OnCloudTrailBucketEventOptions): Rule
\`\`\`

Defines an AWS CloudWatch event that triggers when an object at the specified paths (keys) in this bucket are written to.

This includes
the events PutObject, CopyObject, and CompleteMultipartUpload.

Note that some tools like \`aws s3 cp\` will automatically use either
PutObject or the multipart upload API depending on the file size,
so using this method may be preferable to \`onCloudTrailPutObject\`.

Requires that there exists at least one CloudTrail Trail in your account
that captures the event. This method will not create the Trail.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>id</code> | <code>string</code> | The id of the rule. |
| <code>options</code> | <code>@aws-cdk/aws-s3.OnCloudTrailBucketEventOptions</code> | Options for adding the rule. |

**<code>s3UrlForObject</code>**
\`\`\`typescript
public s3UrlForObject(key?: string): string
\`\`\`

The S3 URL of an S3 object. For example:.

\`s3://onlybucket\`
- \`s3://bucket/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>transferAccelerationUrlForObject</code>**
\`\`\`typescript
public transferAccelerationUrlForObject(key?: string, options?: TransferAccelerationUrlOptions): string
\`\`\`

The https Transfer Acceleration URL of an S3 object.

Specify \`dualStack: true\` at the options
for dual-stack endpoint (connect to the bucket over IPv6). For example:

- \`https://bucket.s3-accelerate.amazonaws.com\`
- \`https://bucket.s3-accelerate.amazonaws.com/key\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.TransferAccelerationUrlOptions</code> | Options for generating URL. |

**<code>urlForObject</code>**
\`\`\`typescript
public urlForObject(key?: string): string
\`\`\`

The https URL of an S3 object. Specify \`regional: false\` at the options for non-regional URLs. For example:.

\`https://s3.us-west-1.amazonaws.com/onlybucket\`
- \`https://s3.us-west-1.amazonaws.com/bucket/key\`
- \`https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |

**<code>virtualHostedUrlForObject</code>**
\`\`\`typescript
public virtualHostedUrlForObject(key?: string, options?: VirtualHostedStyleUrlOptions): string
\`\`\`

The virtual hosted-style URL of an S3 object. Specify \`regional: false\` at the options for non-regional URL. For example:.

\`https://only-bucket.s3.us-west-1.amazonaws.com\`
- \`https://bucket.s3.us-west-1.amazonaws.com/key\`
- \`https://bucket.s3.amazonaws.com/key\`
- \`https://china-bucket.s3.cn-north-1.amazonaws.com.cn/mykey\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>key</code> | <code>string</code> | The S3 key of the object. |
| <code>options</code> | <code>@aws-cdk/aws-s3.VirtualHostedStyleUrlOptions</code> | Options for generating URL. |

**<code>addCorsRule</code>**
\`\`\`typescript
public addCorsRule(rule: CorsRule): void
\`\`\`

Adds a cross-origin access configuration for objects in an Amazon S3 bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.CorsRule</code> | The CORS configuration rule to add. |

**<code>addInventory</code>**
\`\`\`typescript
public addInventory(inventory: Inventory): void
\`\`\`

Add an inventory configuration.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>inventory</code> | <code>@aws-cdk/aws-s3.Inventory</code> | configuration to add. |

**<code>addLifecycleRule</code>**
\`\`\`typescript
public addLifecycleRule(rule: LifecycleRule): void
\`\`\`

Add a lifecycle rule to the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>rule</code> | <code>@aws-cdk/aws-s3.LifecycleRule</code> | The rule to add. |

**<code>addMetric</code>**
\`\`\`typescript
public addMetric(metric: BucketMetrics): void
\`\`\`

Adds a metrics configuration for the CloudWatch request metrics from the bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>metric</code> | <code>@aws-cdk/aws-s3.BucketMetrics</code> | The metric configuration to add. |

**<code>goodbye</code>**
\`\`\`typescript
public goodbye(): void
\`\`\`

#### Static Methods <a name=\\"Static Methods\\" id=\\"Static Methods\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>isResource</code> | Check whether the given construct is a Resource. |
| <code>fromBucketArn</code> | *No description.* |
| <code>fromBucketAttributes</code> | Creates a Bucket construct that represents an external bucket. |
| <code>fromBucketName</code> | *No description.* |
| <code>validateBucketName</code> | Thrown an exception if the given bucket name is not valid. |

---

**<code>isResource</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.isResource(construct: IConstruct)
\`\`\`

Check whether the given construct is a Resource.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>construct</code> | <code>@aws-cdk/core.IConstruct</code> | *No description.* |

**<code>fromBucketArn</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.fromBucketArn(scope: Construct, id: string, bucketArn: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketArn</code> | <code>string</code> | *No description.* |

**<code>fromBucketAttributes</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.fromBucketAttributes(scope: Construct, id: string, attrs: BucketAttributes)
\`\`\`

Creates a Bucket construct that represents an external bucket.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | The parent creating construct (usually \`this\`). |
| <code>id</code> | <code>string</code> | The construct's name. |
| <code>attrs</code> | <code>@aws-cdk/aws-s3.BucketAttributes</code> | A \`BucketAttributes\` object. |

**<code>fromBucketName</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.fromBucketName(scope: Construct, id: string, bucketName: string)
\`\`\`

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>scope</code> | <code>constructs.Construct</code> | *No description.* |
| <code>id</code> | <code>string</code> | *No description.* |
| <code>bucketName</code> | <code>string</code> | *No description.* |

**<code>validateBucketName</code>**
\`\`\`typescript
import { submod1 } from 'construct-library'

submod1.GoodbyeBucket.validateBucketName(physicalName: string)
\`\`\`

Thrown an exception if the given bucket name is not valid.

| **Parameter** | **Type** | **Description** |
| --- | --- | --- |
| <code>physicalName</code> | <code>string</code> | name of the bucket. |

#### Properties <a name=\\"Properties\\" id=\\"Properties\\"></a>

| **Property** | **Type** | **Description** |
| --- | --- | --- |
| <code>node</code> | <code>@aws-cdk/core.ConstructNode</code> | The construct tree node associated with this construct. |
| <code>env</code> | <code>@aws-cdk/core.ResourceEnvironment</code> | The environment this resource belongs to. |
| <code>stack</code> | <code>@aws-cdk/core.Stack</code> | The stack in which this resource is defined. |
| <code>bucketArn</code> | <code>string</code> | The ARN of the bucket. |
| <code>bucketDomainName</code> | <code>string</code> | The IPv4 DNS name of the specified bucket. |
| <code>bucketDualStackDomainName</code> | <code>string</code> | The IPv6 DNS name of the specified bucket. |
| <code>bucketName</code> | <code>string</code> | The name of the bucket. |
| <code>bucketRegionalDomainName</code> | <code>string</code> | The regional domain name of the specified bucket. |
| <code>bucketWebsiteDomainName</code> | <code>string</code> | The Domain name of the static website. |
| <code>bucketWebsiteUrl</code> | <code>string</code> | The URL of the static website. |
| <code>encryptionKey</code> | <code>@aws-cdk/aws-kms.IKey</code> | Optional KMS encryption key associated with this bucket. |
| <code>isWebsite</code> | <code>boolean</code> | If this bucket has been configured for static website hosting. |
| <code>policy</code> | <code>@aws-cdk/aws-s3.BucketPolicy</code> | The resource policy associated with this bucket. |

---

**<code>node</code>**
\`\`\`typescript
public readonly node: ConstructNode;
\`\`\`

- *Type:* <code>@aws-cdk/core.ConstructNode</code>

The construct tree node associated with this construct.

---

**<code>env</code>**
\`\`\`typescript
public readonly env: ResourceEnvironment;
\`\`\`

- *Type:* <code>@aws-cdk/core.ResourceEnvironment</code>

The environment this resource belongs to.

For resources that are created and managed by the CDK
(generally, those created by creating new class instances like Role, Bucket, etc.),
this is always the same as the environment of the stack they belong to;
however, for imported resources
(those obtained from static methods like fromRoleArn, fromBucketName, etc.),
that might be different than the stack they were imported into.

---

**<code>stack</code>**
\`\`\`typescript
public readonly stack: Stack;
\`\`\`

- *Type:* <code>@aws-cdk/core.Stack</code>

The stack in which this resource is defined.

---

**<code>bucketArn</code>**
\`\`\`typescript
public readonly bucketArn: string;
\`\`\`

- *Type:* <code>string</code>

The ARN of the bucket.

---

**<code>bucketDomainName</code>**
\`\`\`typescript
public readonly bucketDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv4 DNS name of the specified bucket.

---

**<code>bucketDualStackDomainName</code>**
\`\`\`typescript
public readonly bucketDualStackDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The IPv6 DNS name of the specified bucket.

---

**<code>bucketName</code>**
\`\`\`typescript
public readonly bucketName: string;
\`\`\`

- *Type:* <code>string</code>

The name of the bucket.

---

**<code>bucketRegionalDomainName</code>**
\`\`\`typescript
public readonly bucketRegionalDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The regional domain name of the specified bucket.

---

**<code>bucketWebsiteDomainName</code>**
\`\`\`typescript
public readonly bucketWebsiteDomainName: string;
\`\`\`

- *Type:* <code>string</code>

The Domain name of the static website.

---

**<code>bucketWebsiteUrl</code>**
\`\`\`typescript
public readonly bucketWebsiteUrl: string;
\`\`\`

- *Type:* <code>string</code>

The URL of the static website.

---

**<code>encryptionKey</code>**
\`\`\`typescript
public readonly encryptionKey: IKey;
\`\`\`

- *Type:* <code>@aws-cdk/aws-kms.IKey</code>

Optional KMS encryption key associated with this bucket.

---

**<code>isWebsite</code>**
\`\`\`typescript
public readonly isWebsite: boolean;
\`\`\`

- *Type:* <code>boolean</code>

If this bucket has been configured for static website hosting.

---

**<code>policy</code>**
\`\`\`typescript
public readonly policy: BucketPolicy;
\`\`\`

- *Type:* <code>@aws-cdk/aws-s3.BucketPolicy</code>

The resource policy associated with this bucket.

If \`autoCreatePolicy\` is true, a \`BucketPolicy\` will be created upon the
first call to addToResourcePolicy(s).

---





"
`;
