{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudformation": "1.126.0",
    "@aws-cdk/aws-ec2": "1.126.0",
    "@aws-cdk/aws-iam": "1.126.0",
    "@aws-cdk/aws-lambda": "1.126.0",
    "@aws-cdk/aws-logs": "1.126.0",
    "@aws-cdk/aws-sns": "1.126.0",
    "@aws-cdk/core": "1.126.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Constructs for implementing CDK custom resources",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.35.0 (build 6ebef96)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cloudformation",
    "custom-resources",
    "customresources"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/custom-resources",
  "readme": {
    "markdown": "# AWS CDK Custom Resources\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Provider Framework\n\nAWS CloudFormation [custom resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html) are extension points to the provisioning\nengine. When CloudFormation needs to create, update or delete a custom resource,\nit sends a lifecycle event notification to a **custom resource provider**. The provider\nhandles the event (e.g. creates a resource) and sends back a response to CloudFormation.\n\nThe `@aws-cdk/custom-resources.Provider` construct is a \"mini-framework\" for\nimplementing providers for AWS CloudFormation custom resources. The framework offers a high-level API which makes it easier to implement robust\nand powerful custom resources and includes the following capabilities:\n\n* Handles responses to AWS CloudFormation and protects against blocked\n  deployments\n* Validates handler return values to help with correct handler implementation\n* Supports asynchronous handlers to enable operations that require a long waiting period for a resource, which can exceed the AWS Lambda timeout\n* Implements default behavior for physical resource IDs.\n\nThe following code shows how the `Provider` construct is used in conjunction\nwith a `CustomResource` and a user-provided AWS Lambda function which implements\nthe actual handler.\n\n```ts\nimport { CustomResource } from '@aws-cdk/core';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cr from '@aws-cdk/custom-resources';\n\nconst onEvent = new lambda.Function(this, 'MyHandler', { /* ... */ });\n\nconst myRole = new iam.Role(this, 'MyRole', { /* ... */ });\n\nconst myProvider = new cr.Provider(this, 'MyProvider', {\n  onEventHandler: onEvent,\n  isCompleteHandler: isComplete,        // optional async \"waiter\"\n  logRetention: logs.RetentionDays.ONE_DAY,   // default is INFINITE\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n});\n\nnew CustomResource(this, 'Resource1', { serviceToken: myProvider.serviceToken });\nnew CustomResource(this, 'Resource2', { serviceToken: myProvider.serviceToken });\n```\n\nProviders are implemented through AWS Lambda functions that are triggered by the\nprovider framework in response to lifecycle events.\n\nAt the minimum, users must define the `onEvent` handler, which is invoked by the\nframework for all resource lifecycle events (`Create`, `Update` and `Delete`)\nand returns a result which is then submitted to CloudFormation.\n\nThe following example is a skeleton for a Python implementation of `onEvent`:\n\n```py\ndef on_event(event, context):\n  print(event)\n  request_type = event['RequestType']\n  if request_type == 'Create': return on_create(event)\n  if request_type == 'Update': return on_update(event)\n  if request_type == 'Delete': return on_delete(event)\n  raise Exception(\"Invalid request type: %s\" % request_type)\n\ndef on_create(event):\n  props = event[\"ResourceProperties\"]\n  print(\"create new resource with props %s\" % props)\n\n  # add your create code here...\n  physical_id = ...\n\n  return { 'PhysicalResourceId': physical_id }\n\ndef on_update(event):\n  physical_id = event[\"PhysicalResourceId\"]\n  props = event[\"ResourceProperties\"]\n  print(\"update resource %s with props %s\" % (physical_id, props))\n  # ...\n\ndef on_delete(event):\n  physical_id = event[\"PhysicalResourceId\"]\n  print(\"delete resource %s\" % physical_id)\n  # ...\n```\n\nUsers may also provide an additional handler called `isComplete`, for cases\nwhere the lifecycle operation cannot be completed immediately. The\n`isComplete` handler will be retried asynchronously after `onEvent` until it\nreturns `IsComplete: true`, or until the total provider timeout has expired.\n\nThe following example is a skeleton for a Python implementation of `isComplete`:\n\n```py\ndef is_complete(event, context):\n  physical_id = event[\"PhysicalResourceId\"]\n  request_type = event[\"RequestType\"]\n\n  # check if resource is stable based on request_type\n  is_ready = ...\n\n  return { 'IsComplete': is_ready }\n```\n\n### Handling Lifecycle Events: onEvent\n\nThe user-defined `onEvent` AWS Lambda function is invoked whenever a resource\nlifecycle event occurs. The function is expected to handle the event and return\na response to the framework that, at least, includes the physical resource ID.\n\nIf `onEvent` returns successfully, the framework will submit a \"SUCCESS\" response\nto AWS CloudFormation for this resource operation.  If the provider is\n[asynchronous](#asynchronous-providers-iscomplete) (`isCompleteHandler` is\ndefined), the framework will only submit a response based on the result of\n`isComplete`.\n\nIf `onEvent` throws an error, the framework will submit a \"FAILED\" response to\nAWS CloudFormation.\n\nThe input event includes the following fields derived from the [Custom Resource\nProvider Request]:\n\n|Field|Type|Description\n|-----|----|----------------\n|`RequestType`|String|The type of lifecycle event: `Create`, `Update` or `Delete`.\n|`LogicalResourceId`|String|The template developer-chosen name (logical ID) of the custom resource in the AWS CloudFormation template.\n|`PhysicalResourceId`|String|This field will only be present for `Update` and `Delete` events and includes the value returned in `PhysicalResourceId` of the previous operation.\n|`ResourceProperties`|JSON|This field contains the properties defined in the template for this custom resource.\n|`OldResourceProperties`|JSON|This field will only be present for `Update` events and contains the resource properties that were declared previous to the update request.\n|`ResourceType`|String|The resource type defined for this custom resource in the template. A provider may handle any number of custom resource types.\n|`RequestId`|String|A unique ID for the request.\n|`StackId`|String|The ARN that identifies the stack that contains the custom resource.\n\nThe return value from `onEvent` must be a JSON object with the following fields:\n\n|Field|Type|Required|Description\n|-----|----|--------|-----------\n|`PhysicalResourceId`|String|No|The allocated/assigned physical ID of the resource. If omitted for `Create` events, the event's `RequestId` will be used. For `Update`, the current physical ID will be used. If a different value is returned, CloudFormation will follow with a subsequent `Delete` for the previous ID (resource replacement). For `Delete`, it will always return the current physical resource ID, and if the user returns a different one, an error will occur.\n|`Data`|JSON|No|Resource attributes, which can later be retrieved through `Fn::GetAtt` on the custom resource object.\n|*any*|*any*|No|Any other field included in the response will be passed through to `isComplete`. This can sometimes be useful to pass state between the handlers.\n\n[Custom Resource Provider Request]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-ref-requests.html#crpg-ref-request-fields\n\n### Asynchronous Providers: isComplete\n\nIt is not uncommon for the provisioning of resources to be an asynchronous\noperation, which means that the operation does not immediately finish, and we\nneed to \"wait\" until the resource stabilizes.\n\nThe provider framework makes it easy to implement \"waiters\" by allowing users to\nspecify an additional AWS Lambda function in `isCompleteHandler`.\n\nThe framework will repeatedly invoke the handler every `queryInterval`. When\n`isComplete` returns with `IsComplete: true`, the framework will submit a\n\"SUCCESS\" response to AWS CloudFormation. If `totalTimeout` expires and the\noperation has not yet completed, the framework will submit a \"FAILED\" response\nwith the message \"Operation timed out\".\n\nIf an error is thrown, the framework will submit a \"FAILED\" response to AWS\nCloudFormation.\n\nThe input event to `isComplete` includes all request fields, combined with all\nfields returned from `onEvent`. If `PhysicalResourceId` has not been explicitly\nreturned from `onEvent`, it's value will be calculated based on the heuristics\ndescribed above.\n\nThe return value must be a JSON object with the following fields:\n\n|Field|Type|Required|Description\n|-----|----|--------|-----------\n|`IsComplete`|Boolean|Yes|Indicates if the operation has finished or not.\n|`Data`|JSON|No|May only be sent if `IsComplete` is `true` and includes additional resource attributes. These attributes will be **merged** with the ones returned from `onEvent`\n\n### Physical Resource IDs\n\nEvery resource in CloudFormation has a physical resource ID. When a resource is\ncreated, the `PhysicalResourceId` returned from the `Create` operation is stored\nby AWS CloudFormation and assigned to the logical ID defined for this resource\nin the template. If a `Create` operation returns without a `PhysicalResourceId`,\nthe framework will use `RequestId` as the default. This is sufficient for\nvarious cases such as \"pseudo-resources\" which only query data.\n\nFor `Update` and `Delete` operations, the resource event will always include the\ncurrent `PhysicalResourceId` of the resource.\n\nWhen an `Update` operation occurs, the default behavior is to return the current\nphysical resource ID. if the `onEvent` returns a `PhysicalResourceId` which is\ndifferent from the current one, AWS CloudFormation will treat this as a\n**resource replacement**, and it will issue a subsequent `Delete` operation for\nthe old resource.\n\nAs a rule of thumb, if your custom resource supports configuring a physical name\n(e.g. you can specify a `BucketName` when you define an `AWS::S3::Bucket`), you\nmust return this name in `PhysicalResourceId` and make sure to handle\nreplacement properly. The `S3File` example demonstrates this\nthrough the `objectKey` property.\n\n### Handling Provider Framework Error\n\nAs mentioned above, if any of the user handlers fail (i.e. throws an exception)\nor times out (due to their AWS Lambda timing out), the framework will trap these\nerrors and submit a \"FAILED\" response to AWS CloudFormation, along with the error\nmessage.\n\nSince errors can occur in multiple places in the provider (framework, `onEvent`,\n`isComplete`), it is important to know that there could situations where a\nresource operation fails even though the operation technically succeeded (i.e.\nisComplete throws an error).\n\nWhen AWS CloudFormation receives a \"FAILED\" response, it will attempt to roll\nback the stack to it's last state. This has different meanings for different\nlifecycle events:\n\n* If a `Create` event fails, the resource provider framework will automatically\n  ignore the subsequent `Delete` operation issued by AWS CloudFormation. The\n  framework currently does not support customizing this behavior (see\n  https://github.com/aws/aws-cdk/issues/5524).\n* If an `Update` event fails, CloudFormation will issue an additional `Update`\n  with the previous properties.\n* If a `Delete` event fails, CloudFormation will abandon this resource.\n\n### Provider Framework Execution Policy\n\nSimilarly to any AWS Lambda function, if the user-defined handlers require\naccess to AWS resources, you will have to define these permissions\nby calling \"grant\" methods such as `myBucket.grantRead(myHandler)`), using `myHandler.addToRolePolicy`\nor specifying an `initialPolicy` when defining the function.\n\nBear in mind that in most cases, a single provider will be used for multiple\nresource instances. This means that the execution policy of the provider must\nhave the appropriate privileges.\n\nThe following example grants the `onEvent` handler `s3:GetObject*` permissions\nto all buckets:\n\n```ts\nnew lambda.Function(this, 'OnEventHandler', {\n  // ...\n  initialPolicy: [\n    new iam.PolicyStatement({ actions: [ 's3:GetObject*' ], resources: [ '*' ] })\n  ]\n});\n```\n\n### Timeouts\n\nUsers are responsible to define the timeouts for the AWS Lambda functions for\nuser-defined handlers. It is recommended not to exceed a **14 minutes** timeout,\nsince all framework functions are configured to time out after 15 minutes, which\nis the maximal AWS Lambda timeout.\n\nIf your operation takes over **14 minutes**, the recommended approach is to\nimplement an [asynchronous provider](#asynchronous-providers-iscomplete), and\nthen configure the timeouts for the asynchronous retries through the\n`queryInterval` and the `totalTimeout` options.\n\n### Provider Framework Examples\n\nThis module includes a few examples for custom resource implementations:\n\n#### S3File\n\nProvisions an object in an S3 bucket with textual contents. See the source code\nfor the\n[construct](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/custom-resources/test/provider-framework/integration-test-fixtures/s3-assert.ts) and\n[handler](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/custom-resources/test/provider-framework/integration-test-fixtures/s3-assert-handler/index.py).\n\nThe following example will create the file `folder/file1.txt` inside `myBucket`\nwith the contents `hello!`.\n\n\n```ts\nnew S3File(this, 'MyFile', {\n  bucket: myBucket,\n  objectKey: 'folder/file1.txt', // optional\n  content: 'hello!',\n  public: true // optional\n});\n```\n\nThis sample demonstrates the following concepts:\n\n* Synchronous implementation (`isComplete` is not defined)\n* Automatically generates the physical name if `objectKey` is not defined\n* Handles physical name changes\n* Returns resource attributes\n* Handles deletions\n* Implemented in TypeScript\n\n#### S3Assert\n\nChecks that the textual contents of an S3 object matches a certain value. The check will be retried for 5 minutes as long as the object is not found or the value is different. See the source code for the [construct](test/provider-framework/integration-test-fixtures/s3-assert.ts) and [handler](test/provider-framework/integration-test-fixtures/s3-assert-handler/index.py).\n\nThe following example defines an `S3Assert` resource which waits until\n`myfile.txt` in `myBucket` exists and includes the contents `foo bar`:\n\n```ts\nnew S3Assert(this, 'AssertMyFile', {\n  bucket: myBucket,\n  objectKey: 'myfile.txt',\n  expectedContent: 'foo bar'\n});\n```\n\nThis sample demonstrates the following concepts:\n\n* Asynchronous implementation\n* Non-intrinsic physical IDs\n* Implemented in Python\n\n## Custom Resources for AWS APIs\n\nSometimes a single API call can fill the gap in the CloudFormation coverage. In\nthis case you can use the `AwsCustomResource` construct. This construct creates\na custom resource that can be customized to make specific API calls for the\n`CREATE`, `UPDATE` and `DELETE` events. Additionally, data returned by the API\ncall can be extracted and used in other constructs/resources (creating a real\nCloudFormation dependency using `Fn::GetAtt` under the hood).\n\nThe physical id of the custom resource can be specified or derived from the data\nreturned by the API call.\n\nThe `AwsCustomResource` uses the AWS SDK for JavaScript. Services, actions and\nparameters can be found in the [API documentation](https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html).\n\nPath to data must be specified using a dot notation, e.g. to get the string value\nof the `Title` attribute for the first item returned by `dynamodb.query` it should\nbe `Items.0.Title.S`.\n\nTo make sure that the newest API calls are available the latest AWS SDK v2 is installed\nin the Lambda function implementing the custom resource. The installation takes around 60\nseconds. If you prefer to optimize for speed, you can disable the installation by setting\nthe `installLatestAwsSdk` prop to `false`.\n\n### Custom Resource Execution Policy\n\nYou must provide the `policy` property defining the IAM Policy that will be applied to the API calls.\nThe library provides two factory methods to quickly configure this:\n\n* **`AwsCustomResourcePolicy.fromSdkCalls`** - Use this to auto-generate IAM Policy statements based on the configured SDK calls.\nNote that you will have to either provide specific ARN's, or explicitly use `AwsCustomResourcePolicy.ANY_RESOURCE` to allow access to any resource.\n* **`AwsCustomResourcePolicy.fromStatements`** - Use this to specify your own custom statements.\n\nThe custom resource also implements `iam.IGrantable`, making it possible to use the `grantXxx()` methods.\n\nAs this custom resource uses a singleton Lambda function, it's important to note\nthat the function's role will eventually accumulate the permissions/grants from all\nresources.\n\nChained API calls can be achieved by creating dependencies:\n\n```ts\nconst awsCustom1 = new AwsCustomResource(this, 'API1', {\n  onCreate: {\n    service: '...',\n    action: '...',\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\nconst awsCustom2 = new AwsCustomResource(this, 'API2', {\n  onCreate: {\n    service: '...',\n    action: '...'\n    parameters: {\n      text: awsCustom1.getResponseField('Items.0.text')\n    },\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n})\n```\n\n### Physical Resource Id Parameter\n\nSome AWS APIs may require passing the physical resource id in as a parameter for doing updates and deletes. You can pass it by using `PhysicalResourceIdReference`.\n\n```ts\nconst awsCustom = new AwsCustomResource(this, '...', {\n  onCreate: {\n    service: '...',\n    action: '...'\n    parameters: {\n      text: '...'\n    },\n    physicalResourceId: PhysicalResourceId.of('...')\n  },\n  onUpdate: {\n    service: '...',\n    action: '...'.\n    parameters: {\n      text: '...',\n      resourceId: new PhysicalResourceIdReference()\n    }\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n})\n```\n\n### Handling Custom Resource Errors\n\nEvery error produced by the API call is treated as is and will cause a \"FAILED\" response to be submitted to CloudFormation.\nYou can ignore some errors by specifying the `ignoreErrorCodesMatching` property, which accepts a regular expression that is\ntested against the `code` property of the response. If matched, a \"SUCCESS\" response is submitted.\nNote that in such a case, the call response data and the `Data` key submitted to CloudFormation would both be an empty JSON object.\nSince a successful resource provisioning might or might not produce outputs, this presents us with some limitations:\n\n* `PhysicalResourceId.fromResponse` - Since the call response data might be empty, we cannot use it to extract the physical id.\n* `getResponseField` and `getResponseFieldReference` - Since the `Data` key is empty, the resource will not have any attributes, and therefore, invoking these functions will result in an error.\n\nIn both the cases, you will get a synth time error if you attempt to use it in conjunction with `ignoreErrorCodesMatching`.\n\n### Customizing the Lambda function implementing the custom resource\n\nUse the `role`, `timeout`, `logRetention` and `functionName` properties to customize\nthe Lambda function implementing the custom resource:\n\n```ts\nnew AwsCustomResource(this, 'Customized', {\n  // other props here\n  role: myRole, // must be assumable by the `lambda.amazonaws.com` service principal\n  timeout: cdk.Duration.minutes(10) // defaults to 2 minutes\n  logRetention: logs.RetentionDays.ONE_WEEK // defaults to never delete logs\n  functionName: 'my-custom-name', // defaults to a CloudFormation generated name\n})\n```\n\n### Restricting the output of the Custom Resource\n\nCloudFormation imposes a hard limit of 4096 bytes for custom resources response\nobjects. If your API call returns an object that exceeds this limit, you can restrict\nthe data returned by the custom resource to specific paths in the API response:\n\n```ts\nnew AwsCustomResource(stack, 'ListObjects', {\n  onCreate: {\n    service: 's3',\n    action: 'listObjectsV2',\n    parameters: {\n      Bucket: 'my-bucket',\n    },\n    physicalResourceId: PhysicalResourceId.of('id'),\n    outputPaths: ['Contents.0.Key', 'Contents.1.Key'], // Output only the two first keys\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({ resources: AwsCustomResourcePolicy.ANY_RESOURCE }),\n});\n```\n\nNote that even if you restrict the output of your custom resource you can still use any\npath in `PhysicalResourceId.fromResponse()`.\n\n### Custom Resource Examples\n\n#### Verify a domain with SES\n\n```ts\nconst verifyDomainIdentity = new AwsCustomResource(this, 'VerifyDomainIdentity', {\n  onCreate: {\n    service: 'SES',\n    action: 'verifyDomainIdentity',\n    parameters: {\n      Domain: 'example.com'\n    },\n    physicalResourceId: PhysicalResourceId.fromResponse('VerificationToken') // Use the token returned by the call as physical id\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\nnew route53.TxtRecord(this, 'SESVerificationRecord', {\n  zone,\n  recordName: `_amazonses.example.com`,\n  values: [verifyDomainIdentity.getResponseField('VerificationToken')]\n});\n```\n\n#### Get the latest version of a secure SSM parameter\n\n```ts\nconst getParameter = new AwsCustomResource(this, 'GetParameter', {\n  onUpdate: { // will also be called for a CREATE event\n    service: 'SSM',\n    action: 'getParameter',\n    parameters: {\n      Name: 'my-parameter',\n      WithDecryption: true\n    },\n    physicalResourceId: PhysicalResourceId.of(Date.now().toString()) // Update physical id to always fetch the latest version\n  },\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\n// Use the value in another construct with\ngetParameter.getResponseField('Parameter.Value')\n```\n\n#### Associate a PrivateHostedZone with VPC shared from another account\n\n```ts\nconst getParameter = new AwsCustomResource(this, 'AssociateVPCWithHostedZone', {\n  onCreate: {\n    assumedRoleArn: 'arn:aws:iam::OTHERACCOUNT:role/CrossAccount/ManageHostedZoneConnections',\n    service: 'Route53',\n    action: 'associateVPCWithHostedZone',\n    parameters: {\n      HostedZoneId: 'hz-123',\n      VPC: {\n\t\tVPCId: 'vpc-123',\n\t\tVPCRegion: 'region-for-vpc'\n      }\n    },\n    physicalResourceId: PhysicalResourceId.of('${vpcStack.SharedVpc.VpcId}-${vpcStack.Region}-${PrivateHostedZone.HostedZoneId}')\n  },\n  //Will ignore any resource and use the assumedRoleArn as resource and 'sts:AssumeRole' for service:action\n  policy: AwsCustomResourcePolicy.fromSdkCalls({resources: AwsCustomResourcePolicy.ANY_RESOURCE})\n});\n\n```\n\n---\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/custom-resources",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.CustomResources",
      "packageId": "Amazon.CDK.AWS.CustomResources"
    },
    "java": {
      "maven": {
        "artifactId": "cdk-customresources",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.customresources"
    },
    "js": {
      "npm": "@aws-cdk/custom-resources"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.custom-resources",
      "module": "aws_cdk.custom_resources"
    }
  },
  "types": {
    "@aws-cdk/custom-resources.AwsCustomResource": {
      "assembly": "@aws-cdk/custom-resources",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "Use this to bridge any gap that might exist in the CloudFormation Coverage.\nYou can specify exactly which calls are invoked for the 'CREATE', 'UPDATE' and 'DELETE' life cycle events.",
        "stability": "stable",
        "summary": "Defines a custom resource that is materialized using specific AWS API calls."
      },
      "fqn": "@aws-cdk/custom-resources.AwsCustomResource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
          "line": 335
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/custom-resources.AwsCustomResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 316
      },
      "methods": [
        {
          "docs": {
            "remarks": "Example for S3 / listBucket : 'Buckets.0.Name'\n\nNote that you cannot use this method if `ignoreErrorCodesMatching`\nis configured for any of the SDK calls. This is because in such a case,\nthe response data might not exist, and will cause a CloudFormation deploy time error.",
            "stability": "stable",
            "summary": "Returns response data for the AWS SDK call as string."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 452
          },
          "name": "getResponseField",
          "parameters": [
            {
              "docs": {
                "summary": "the path to the data."
              },
              "name": "dataPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Example for S3 / listBucket : 'Buckets.0.Name'\n\nUse `Token.asXxx` to encode the returned `Reference` as a specific type or\nuse the convenience `getDataString` for string attributes.\n\nNote that you cannot use this method if `ignoreErrorCodesMatching`\nis configured for any of the SDK calls. This is because in such a case,\nthe response data might not exist, and will cause a CloudFormation deploy time error.",
            "stability": "stable",
            "summary": "Returns response data for the AWS SDK call."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 436
          },
          "name": "getResponseFieldReference",
          "parameters": [
            {
              "docs": {
                "summary": "the path to the data."
              },
              "name": "dataPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.Reference"
            }
          }
        }
      ],
      "name": "AwsCustomResource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 328
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.AwsCustomResourcePolicy": {
      "assembly": "@aws-cdk/custom-resources",
      "docs": {
        "stability": "stable",
        "summary": "The IAM Policy that will be applied to the different calls."
      },
      "fqn": "@aws-cdk/custom-resources.AwsCustomResourcePolicy",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 181
      },
      "methods": [
        {
          "docs": {
            "remarks": "Each SDK call with be translated to an IAM Policy Statement in the form of: `call.service:call.action` (e.g `s3:PutObject`).",
            "stability": "stable",
            "summary": "Generate IAM Policy Statements from the configured SDK calls."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 204
          },
          "name": "fromSdkCalls",
          "parameters": [
            {
              "docs": {
                "summary": "options for the policy generation."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/custom-resources.SdkCallsPolicyOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/custom-resources.AwsCustomResourcePolicy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Explicit IAM Policy Statements."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 193
          },
          "name": "fromStatements",
          "parameters": [
            {
              "docs": {
                "summary": "the statements to propagate to the SDK calls."
              },
              "name": "statements",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-iam.PolicyStatement"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/custom-resources.AwsCustomResourcePolicy"
            }
          },
          "static": true
        }
      ],
      "name": "AwsCustomResourcePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Use this constant to configure access to any resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 186
          },
          "name": "ANY_RESOURCE",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "statements for explicit policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 212
          },
          "name": "statements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "resources for auto-generated from SDK calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 212
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.AwsCustomResourceProps": {
      "assembly": "@aws-cdk/custom-resources",
      "datatype": true,
      "docs": {
        "remarks": "Note that at least onCreate, onUpdate or onDelete must be specified.",
        "stability": "stable",
        "summary": "Properties for AwsCustomResource."
      },
      "fqn": "@aws-cdk/custom-resources.AwsCustomResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 220
      },
      "name": "AwsCustomResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The custom resource also implements `iam.IGrantable`, making it possible\nto use the `grantXxx()` methods.\n\nAs this custom resource uses a singleton Lambda function, it's important\nto note the that function's role will eventually accumulate the\npermissions/grants from all resources.",
            "see": "Policy.fromSdkCalls",
            "stability": "stable",
            "summary": "The policy that will be added to the execution role of the Lambda function implementing this custom resource provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 263
          },
          "name": "policy",
          "type": {
            "fqn": "@aws-cdk/custom-resources.AwsCustomResourcePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS CloudFormation generates a unique physical ID and uses that\nID for the function's name. For more information, see Name Type.",
            "stability": "stable",
            "summary": "A name for the Lambda function implementing this custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 306
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "The installation takes around 60 seconds.",
            "stability": "stable",
            "summary": "Whether to install the latest AWS SDK v2. Allows to use the latest API calls documented at https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 298
          },
          "name": "installLatestAwsSdk",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "logs.RetentionDays.INFINITE",
            "stability": "stable",
            "summary": "The number of days log events of the Lambda function implementing this custom resource are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 288
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the call when the resource is updated",
            "stability": "stable",
            "summary": "The AWS SDK call to make when the resource is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 233
          },
          "name": "onCreate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/custom-resources.AwsSdkCall"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no call",
            "stability": "stable",
            "summary": "The AWS SDK call to make when the resource is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 247
          },
          "name": "onDelete",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/custom-resources.AwsSdkCall"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no call",
            "stability": "stable",
            "summary": "The AWS SDK call to make when the resource is updated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 240
          },
          "name": "onUpdate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/custom-resources.AwsSdkCall"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Custom::AWS",
            "stability": "stable",
            "summary": "Cloudformation Resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 226
          },
          "name": "resourceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new role is created",
            "remarks": "This role will apply to all `AwsCustomResource`\ninstances in the stack. The role must be assumable by the\n`lambda.amazonaws.com` service principal.",
            "stability": "stable",
            "summary": "The execution role for the Lambda function implementing this custom resource provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 273
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(2)",
            "stability": "stable",
            "summary": "The timeout for the Lambda function implementing this custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 280
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.AwsSdkCall": {
      "assembly": "@aws-cdk/custom-resources",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An AWS SDK call."
      },
      "fqn": "@aws-cdk/custom-resources.AwsSdkCall",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 65
      },
      "name": "AwsSdkCall",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html",
            "stability": "stable",
            "summary": "The service action to call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 78
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html",
            "stability": "stable",
            "summary": "The service to call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 71
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use latest available API version",
            "see": "https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/locking-api-versions.html",
            "stability": "stable",
            "summary": "API version to use for the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 111
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- run without assuming role",
            "remarks": "Example for Route53 / associateVPCWithHostedZone",
            "stability": "stable",
            "summary": "Used for running the SDK calls in underlying lambda with a different role Can be used primarily for cross-account requests to for example connect hostedzone with a shared vpc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 157
          },
          "name": "assumedRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- do not catch errors",
            "remarks": "The `code` property of the\n`Error` object will be tested against this pattern. If there is a match an\nerror will not be thrown.",
            "stability": "stable",
            "summary": "The regex pattern to use to catch API errors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 103
          },
          "name": "ignoreErrorCodesMatching",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- return all data",
            "deprecated": "use outputPaths instead",
            "remarks": "Use this to limit the data returned by the custom\nresource if working with API calls that could potentially result in custom\nresponse objects exceeding the hard limit of 4096 bytes.\n\nExample for ECS / updateService: 'service.deploymentConfiguration.maximumPercent'",
            "stability": "deprecated",
            "summary": "Restrict the data returned by the custom resource to a specific path in the API response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 134
          },
          "name": "outputPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- return all data",
            "remarks": "Use this to limit the data returned by the custom\nresource if working with API calls that could potentially result in custom\nresponse objects exceeding the hard limit of 4096 bytes.\n\nExample for ECS / updateService: ['service.deploymentConfiguration.maximumPercent']",
            "stability": "stable",
            "summary": "Restrict the data returned by the custom resource to specific paths in the API response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 146
          },
          "name": "outputPaths",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no parameters",
            "see": "https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/index.html",
            "stability": "stable",
            "summary": "The parameters for the service action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 86
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no physical resource id",
            "remarks": "Mandatory for onCreate or onUpdate calls.",
            "stability": "stable",
            "summary": "The physical resource id of the custom resource for this call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 94
          },
          "name": "physicalResourceId",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/custom-resources.PhysicalResourceId"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the region where this custom resource is deployed",
            "remarks": "**Note: Cross-region operations are generally considered an anti-pattern.**\n**Consider first deploying a stack in that region.**",
            "stability": "stable",
            "summary": "The region to send service requests to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 120
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.PhysicalResourceId": {
      "assembly": "@aws-cdk/custom-resources",
      "docs": {
        "stability": "stable",
        "summary": "Physical ID of the custom resource."
      },
      "fqn": "@aws-cdk/custom-resources.PhysicalResourceId",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 39
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Extract the physical resource id from the path (dot notation) to the data in the API call response."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 44
          },
          "name": "fromResponse",
          "parameters": [
            {
              "name": "responsePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/custom-resources.PhysicalResourceId"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Explicit physical resource id."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 51
          },
          "name": "of",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/custom-resources.PhysicalResourceId"
            }
          },
          "static": true
        }
      ],
      "name": "PhysicalResourceId",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Literal string to be used as the physical id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 59
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Path to a response data element to be used as the physical id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 59
          },
          "name": "responsePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.PhysicalResourceIdReference": {
      "assembly": "@aws-cdk/custom-resources",
      "docs": {
        "stability": "stable",
        "summary": "Reference to the physical resource id that can be passed to the AWS operation as a parameter."
      },
      "fqn": "@aws-cdk/custom-resources.PhysicalResourceIdReference",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "@aws-cdk/core.IResolvable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Produce the Token's value at resolution time."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 27
          },
          "name": "resolve",
          "overrides": "@aws-cdk/core.IResolvable",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/core.IResolveContext"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "toJSON serialization to replace `PhysicalResourceIdReference` with a magic string."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 23
          },
          "name": "toJSON",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns a reversible string representation.",
            "stability": "stable",
            "summary": "Return a string representation of this resolvable object."
          },
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 31
          },
          "name": "toString",
          "overrides": "@aws-cdk/core.IResolvable",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "PhysicalResourceIdReference",
      "properties": [
        {
          "docs": {
            "remarks": "This may return an array with a single informational element indicating how\nto get this property populated, if it was skipped for performance reasons.",
            "stability": "stable",
            "summary": "The creation stack of this resolvable which will be appended to errors thrown during resolution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 18
          },
          "name": "creationStack",
          "overrides": "@aws-cdk/core.IResolvable",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.Provider": {
      "assembly": "@aws-cdk/custom-resources",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Defines an AWS CloudFormation custom resource provider."
      },
      "fqn": "@aws-cdk/custom-resources.Provider",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/provider-framework/provider.ts",
          "line": 150
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/custom-resources.ProviderProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudformation.ICustomResourceProvider"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/provider-framework/provider.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "deprecated": "use `provider.serviceToken` instead",
            "stability": "deprecated",
            "summary": "Called by `CustomResource` which uses this provider."
          },
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 195
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cloudformation.ICustomResourceProvider",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudformation.CustomResourceProviderConfig"
            }
          }
        }
      ],
      "name": "Provider",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The user-defined AWS Lambda function which is invoked for all resource lifecycle operations (CREATE/UPDATE/DELETE)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 129
          },
          "name": "onEventHandler",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The service token to use in order to define custom resources that are backed by this provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 141
          },
          "name": "serviceToken",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The user-defined AWS Lambda function which is invoked asynchronously in order to determine if the operation is complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 135
          },
          "name": "isCompleteHandler",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.ProviderProps": {
      "assembly": "@aws-cdk/custom-resources",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization properties for the `Provider` construct."
      },
      "fqn": "@aws-cdk/custom-resources.ProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/provider-framework/provider.ts",
        "line": 25
      },
      "name": "ProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This function is responsible to begin the requested resource operation\n(CREATE/UPDATE/DELETE) and return any additional properties to add to the\nevent, which will later be passed to `isComplete`. The `PhysicalResourceId`\nproperty must be included in the response.",
            "stability": "stable",
            "summary": "The AWS Lambda function to invoke for all resource lifecycle operations (CREATE/UPDATE/DELETE)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 36
          },
          "name": "onEventHandler",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- provider is synchronous. This means that the `onEvent` handler\nis expected to finish all lifecycle operations within the initial invocation.",
            "remarks": "This function will be called immediately after `onEvent` and then\nperiodically based on the configured query interval as long as it returns\n`false`. If the function still returns `false` and the alloted timeout has\npassed, the operation will fail.",
            "stability": "stable",
            "summary": "The AWS Lambda function to invoke in order to determine if the operation is complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 50
          },
          "name": "isCompleteHandler",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "logs.RetentionDays.INFINITE",
            "remarks": "When\nupdating this property, unsetting it doesn't remove the log retention policy.\nTo remove the retention policy, set the value to `INFINITE`.",
            "stability": "stable",
            "summary": "The number of days framework log events are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 80
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "remarks": "The first `isComplete` will be called immediately after `handler` and then\nevery `queryInterval` seconds, and until `timeout` has been reached or until\n`isComplete` returns `true`.",
            "stability": "stable",
            "summary": "Time between calls to the `isComplete` handler which determines if the resource has been stabilized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 62
          },
          "name": "queryInterval",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default role will be created.",
            "remarks": "The role that will be assumed by the AWS Lambda.\nMust be assumable by the 'lambda.amazonaws.com' service principal.",
            "stability": "stable",
            "summary": "AWS Lambda execution role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 117
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If `vpc` is not supplied, no security groups are attached. Otherwise, a dedicated security\ngroup is created for each function.",
            "remarks": "Only used if 'vpc' is supplied",
            "stability": "stable",
            "summary": "Security groups to attach to the provider functions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 107
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(30)",
            "remarks": "The maximum timeout is 2 hours (yes, it can exceed the AWS Lambda 15 minutes)",
            "stability": "stable",
            "summary": "Total timeout for the entire operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 71
          },
          "name": "totalTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- functions are not provisioned inside a vpc.",
            "stability": "stable",
            "summary": "The vpc to provision the lambda functions in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 87
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified",
            "remarks": "Only used if 'vpc' is supplied. Note: internet access for Lambdas\nrequires a NAT gateway, so picking Public subnets is not allowed.",
            "stability": "stable",
            "summary": "Which subnets from the VPC to place the lambda functions in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/provider-framework/provider.ts",
            "line": 97
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/custom-resources.SdkCallsPolicyOptions": {
      "assembly": "@aws-cdk/custom-resources",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the auto-generation of policies based on the configured SDK calls."
      },
      "fqn": "@aws-cdk/custom-resources.SdkCallsPolicyOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
        "line": 163
      },
      "name": "SdkCallsPolicyOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It is best to use specific resource ARN's when possible. However, you can also use `AwsCustomResourcePolicy.ANY_RESOURCE`\nto allow access to all resources. For example, when `onCreate` is used to create a resource which you don't\nknow the physical name of in advance.\n\nNote that will apply to ALL SDK calls.",
            "stability": "stable",
            "summary": "The resources that the calls will have access to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-custom-resource/aws-custom-resource.ts",
            "line": 174
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    }
  },
  "version": "1.126.0",
  "fingerprint": "PtwqpOd0UzQgHJaxwfzTm/8dC8mRpJRNCjnPTVV2kP8="
}
