{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.126.0",
    "@aws-cdk/aws-iam": "1.126.0",
    "@aws-cdk/aws-logs": "1.126.0",
    "@aws-cdk/cloud-assembly-schema": "1.126.0",
    "@aws-cdk/core": "1.126.0",
    "@aws-cdk/custom-resources": "1.126.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Route53",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.35.0 (build 6ebef96)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "route53"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-route53",
  "readme": {
    "markdown": "# Amazon Route53 Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nTo add a public hosted zone:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\n\nnew route53.PublicHostedZone(this, 'HostedZone', {\n  zoneName: 'fully.qualified.domain.com'\n});\n```\n\nTo add a private hosted zone, use `PrivateHostedZone`. Note that\n`enableDnsHostnames` and `enableDnsSupport` must have been enabled for the\nVPC you're configuring for private hosted zones.\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53 from '@aws-cdk/aws-route53';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\n\nconst zone = new route53.PrivateHostedZone(this, 'HostedZone', {\n  zoneName: 'fully.qualified.domain.com',\n  vpc    // At least one VPC has to be added to a Private Hosted Zone.\n});\n```\n\nAdditional VPCs can be added with `zone.addVpc()`.\n\n## Adding Records\n\nTo add a TXT record to your zone:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\n\nnew route53.TxtRecord(this, 'TXTRecord', {\n  zone: myZone,\n  recordName: '_foo',  // If the name ends with a \".\", it will be used as-is;\n                       // if it ends with a \".\" followed by the zone name, a trailing \".\" will be added automatically;\n                       // otherwise, a \".\", the zone name, and a trailing \".\" will be added automatically.\n                       // Defaults to zone root if not specified.\n  values: [            // Will be quoted for you, and \" will be escaped automatically.\n    'Bar!',\n    'Baz?'\n  ],\n  ttl: Duration.minutes(90),       // Optional - default is 30 minutes\n});\n```\n\nTo add a NS record to your zone:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\n\nnew route53.NsRecord(this, 'NSRecord', {\n  zone: myZone,\n  recordName: 'foo',\n  values: [\n    'ns-1.awsdns.co.uk.',\n    'ns-2.awsdns.com.'\n  ],\n  ttl: Duration.minutes(90),       // Optional - default is 30 minutes\n});\n```\n\nTo add a DS record to your zone:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\n\nnew route53.DsRecord(this, 'DSRecord', {\n  zone: myZone,\n  recordName: 'foo',\n  values: [\n    '12345 3 1 123456789abcdef67890123456789abcdef67890',\n  ],\n  ttl: Duration.minutes(90),       // Optional - default is 30 minutes\n});\n```\n\nTo add an A record to your zone:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\n\nnew route53.ARecord(this, 'ARecord', {\n  zone: myZone,\n  target: route53.RecordTarget.fromIpAddresses('1.2.3.4', '5.6.7.8')\n});\n```\n\nTo add an A record for an EC2 instance with an Elastic IP (EIP) to your zone:\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53 from '@aws-cdk/aws-route53';\n\nconst instance = new ec2.Instance(this, 'Instance', {\n  // ...\n});\n\nconst elasticIp = new ec2.CfnEIP(this, 'EIP', {\n  domain: 'vpc',\n  instanceId: instance.instanceId\n});\n\nnew route53.ARecord(this, 'ARecord', {\n  zone: myZone,\n  target: route53.RecordTarget.fromIpAddresses(elasticIp.ref)\n});\n```\n\nTo add an AAAA record pointing to a CloudFront distribution:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\nimport * as targets from '@aws-cdk/aws-route53-targets';\n\nnew route53.AaaaRecord(this, 'Alias', {\n  zone: myZone,\n  target: route53.RecordTarget.fromAlias(new targets.CloudFrontTarget(distribution))\n});\n```\n\nConstructs are available for A, AAAA, CAA, CNAME, MX, NS, SRV and TXT records.\n\nUse the `CaaAmazonRecord` construct to easily restrict certificate authorities\nallowed to issue certificates for a domain to Amazon only.\n\nTo add a NS record to a HostedZone in different account you can do the following:\n\nIn the account containing the parent hosted zone:\n\n```ts\nimport * as route53 from '@aws-cdk/aws-route53';\n\nconst parentZone = new route53.PublicHostedZone(this, 'HostedZone', {\n  zoneName: 'someexample.com',\n  crossAccountZoneDelegationPrincipal: new iam.AccountPrincipal('12345678901'),\n  crossAccountZoneDelegationRoleName: 'MyDelegationRole',\n});\n```\n\nIn the account containing the child zone to be delegated:\n\n```ts\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as route53 from '@aws-cdk/aws-route53';\n\nconst subZone = new route53.PublicHostedZone(this, 'SubZone', {\n  zoneName: 'sub.someexample.com'\n});\n\n// import the delegation role by constructing the roleArn\nconst delegationRoleArn = Stack.of(this).formatArn({\n  region: '', // IAM is global in each partition\n  service: 'iam',\n  account: 'parent-account-id',\n  resource: 'role',\n  resourceName: 'MyDelegationRole',\n});\nconst delegationRole = iam.Role.fromRoleArn(this, 'DelegationRole', delegationRoleArn);\n\n// create the record\nnew route53.CrossAccountZoneDelegationRecord(this, 'delegate', {\n  delegatedZone: subZone,\n  parentHostedZoneName: 'someexample.com', // or you can use parentHostedZoneId\n  delegationRole,\n});\n```\n\n## Imports\n\nIf you don't know the ID of the Hosted Zone to import, you can use the\n`HostedZone.fromLookup`:\n\n```ts\nHostedZone.fromLookup(this, 'MyZone', {\n  domainName: 'example.com'\n});\n```\n\n`HostedZone.fromLookup` requires an environment to be configured. Check\nout the [documentation](https://docs.aws.amazon.com/cdk/latest/guide/environments.html) for more documentation and examples. CDK\nautomatically looks into your `~/.aws/config` file for the `[default]` profile.\nIf you want to specify a different account run `cdk deploy --profile [profile]`.\n\n```ts\nnew MyDevStack(app, 'dev', {\n  env: {\n    account: process.env.CDK_DEFAULT_ACCOUNT,\n    region: process.env.CDK_DEFAULT_REGION\n}});\n```\n\nIf you know the ID and Name of a Hosted Zone, you can import it directly:\n\n```ts\nconst zone = HostedZone.fromHostedZoneAttributes(this, 'MyZone', {\n  zoneName: 'example.com',\n  hostedZoneId: 'ZOJJZC49E0EPZ',\n});\n```\n\nAlternatively, use the `HostedZone.fromHostedZoneId` to import hosted zones if\nyou know the ID and the retrieval for the `zoneName` is undesirable.\n\n```ts\nconst zone = HostedZone.fromHostedZoneId(this, 'MyZone', 'ZOJJZC49E0EPZ');\n```\n\n## VPC Endpoint Service Private DNS\n\nWhen you create a VPC endpoint service, AWS generates endpoint-specific DNS hostnames that consumers use to communicate with the service.\nFor example, vpce-1234-abcdev-us-east-1.vpce-svc-123345.us-east-1.vpce.amazonaws.com.\nBy default, your consumers access the service with that DNS name.\nThis can cause problems with HTTPS traffic because the DNS will not match the backend certificate:\n\n```console\ncurl: (60) SSL: no alternative certificate subject name matches target host name 'vpce-abcdefghijklmnopq-rstuvwx.vpce-svc-abcdefghijklmnopq.us-east-1.vpce.amazonaws.com'\n```\n\nEffectively, the endpoint appears untrustworthy. To mitigate this, clients have to create an alias for this DNS name in Route53.\n\nPrivate DNS for an endpoint service lets you configure a private DNS name so consumers can\naccess the service using an existing DNS name without creating this Route53 DNS alias\nThis DNS name can also be guaranteed to match up with the backend certificate.\n\nBefore consumers can use the private DNS name, you must verify that you have control of the domain/subdomain.\n\nAssuming your account has ownership of the particular domain/subdomain,\nthis construct sets up the private DNS configuration on the endpoint service,\ncreates all the necessary Route53 entries, and verifies domain ownership.\n\n```ts\nimport { Stack } from '@aws-cdk/core';\nimport { Vpc, VpcEndpointService } from '@aws-cdk/aws-ec2';\nimport { NetworkLoadBalancer } from '@aws-cdk/aws-elasticloadbalancingv2';\nimport { PublicHostedZone } from '@aws-cdk/aws-route53';\n\nstack = new Stack();\nvpc = new Vpc(stack, 'VPC');\nnlb = new NetworkLoadBalancer(stack, 'NLB', {\n  vpc,\n});\nvpces = new VpcEndpointService(stack, 'VPCES', {\n  vpcEndpointServiceLoadBalancers: [nlb],\n});\n// You must use a public hosted zone so domain ownership can be verified\nzone = new PublicHostedZone(stack, 'PHZ', {\n  zoneName: 'aws-cdk.dev',\n});\nnew VpcEndpointServiceDomainName(stack, 'EndpointDomain', {\n  endpointService: vpces,\n  domainName: 'my-stuff.aws-cdk.dev',\n  publicHostedZone: zone,\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-route53",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Route53",
      "packageId": "Amazon.CDK.AWS.Route53"
    },
    "java": {
      "maven": {
        "artifactId": "route53",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.route53"
    },
    "js": {
      "npm": "@aws-cdk/aws-route53"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-route53",
      "module": "aws_cdk.aws_route53"
    }
  },
  "types": {
    "@aws-cdk/aws-route53.ARecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS A record."
      },
      "fqn": "@aws-cdk/aws-route53.ARecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 262
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.ARecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 261
      },
      "name": "ARecord"
    },
    "@aws-cdk/aws-route53.ARecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a ARecord."
      },
      "fqn": "@aws-cdk/aws-route53.ARecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 249
      },
      "name": "ARecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 253
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-route53.RecordTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.AaaaRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS AAAA record."
      },
      "fqn": "@aws-cdk/aws-route53.AaaaRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 287
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.AaaaRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 286
      },
      "name": "AaaaRecord"
    },
    "@aws-cdk/aws-route53.AaaaRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a AaaaRecord."
      },
      "fqn": "@aws-cdk/aws-route53.AaaaRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 274
      },
      "name": "AaaaRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 278
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-route53.RecordTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.AddressRecordTarget": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordTarget",
      "docs": {
        "deprecated": "Use RecordTarget",
        "stability": "deprecated",
        "summary": "Target for a DNS A Record."
      },
      "fqn": "@aws-cdk/aws-route53.AddressRecordTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 193
        },
        "parameters": [
          {
            "docs": {
              "summary": "correspond with the chosen record type (e.g. for 'A' Type, specify one or more IP addresses)."
            },
            "name": "values",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          {
            "docs": {
              "summary": "alias for targets such as CloudFront distribution to route traffic to."
            },
            "name": "aliasTarget",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53.IAliasRecordTarget"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 243
      },
      "name": "AddressRecordTarget"
    },
    "@aws-cdk/aws-route53.AliasRecordTargetConfig": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the properties of an alias target destination."
      },
      "fqn": "@aws-cdk/aws-route53.AliasRecordTargetConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias-record-target.ts",
        "line": 18
      },
      "name": "AliasRecordTargetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "DNS name of the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-record-target.ts",
            "line": 27
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Hosted zone ID of the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/alias-record-target.ts",
            "line": 22
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CaaAmazonRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.CaaRecord",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "remarks": "A CAA record to restrict certificate authorities allowed\nto issue certificates for a domain to Amazon only.",
        "stability": "stable",
        "summary": "A DNS Amazon CAA record."
      },
      "fqn": "@aws-cdk/aws-route53.CaaAmazonRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 497
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CaaAmazonRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 496
      },
      "name": "CaaAmazonRecord"
    },
    "@aws-cdk/aws-route53.CaaAmazonRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CaaAmazonRecord."
      },
      "fqn": "@aws-cdk/aws-route53.CaaAmazonRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 486
      },
      "name": "CaaAmazonRecordProps"
    },
    "@aws-cdk/aws-route53.CaaRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS CAA record."
      },
      "fqn": "@aws-cdk/aws-route53.CaaRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 474
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CaaRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 473
      },
      "name": "CaaRecord"
    },
    "@aws-cdk/aws-route53.CaaRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CaaRecord."
      },
      "fqn": "@aws-cdk/aws-route53.CaaRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 461
      },
      "name": "CaaRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 465
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53.CaaRecordValue"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CaaRecordValue": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a CAA record value."
      },
      "fqn": "@aws-cdk/aws-route53.CaaRecordValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 441
      },
      "name": "CaaRecordValue",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The flag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 445
          },
          "name": "flag",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 450
          },
          "name": "tag",
          "type": {
            "fqn": "@aws-cdk/aws-route53.CaaTag"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value associated with the tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 455
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CaaTag": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "The CAA tag."
      },
      "fqn": "@aws-cdk/aws-route53.CaaTag",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 418
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Explicity authorizes a single certificate authority to issue a certificate (any type) for the hostname."
          },
          "name": "ISSUE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Explicity authorizes a single certificate authority to issue a wildcard certificate (and only wildcard) for the hostname."
          },
          "name": "ISSUEWILD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specifies a URL to which a certificate authority may report policy violations."
          },
          "name": "IODEF"
        }
      ],
      "name": "CaaTag"
    },
    "@aws-cdk/aws-route53.CfnDNSSEC": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53::DNSSEC",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53::DNSSEC`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnDNSSEC",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53::DNSSEC`."
        },
        "locationInModule": {
          "filename": "lib/route53.generated.ts",
          "line": 117
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CfnDNSSECProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 130
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 141
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDNSSEC",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 83
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 135
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html#cfn-route53-dnssec-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::DNSSEC.HostedZoneId`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 108
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnDNSSECProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Route53::DNSSEC`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnDNSSECProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 17
      },
      "name": "CfnDNSSECProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html#cfn-route53-dnssec-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::DNSSEC.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 23
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHealthCheck": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53::HealthCheck",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53::HealthCheck`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnHealthCheck",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53::HealthCheck`."
        },
        "locationInModule": {
          "filename": "lib/route53.generated.ts",
          "line": 272
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CfnHealthCheckProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 223
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 287
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 299
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHealthCheck",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 227
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "HealthCheckId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 251
          },
          "name": "attrHealthCheckId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 292
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthcheckconfig"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HealthCheck.HealthCheckConfig`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 257
          },
          "name": "healthCheckConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthchecktags"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HealthCheck.HealthCheckTags`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 263
          },
          "name": "healthCheckTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckTagProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHealthCheck.AlarmIdentifierProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-alarmidentifier.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.AlarmIdentifierProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 309
      },
      "name": "AlarmIdentifierProperty",
      "namespace": "CfnHealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-alarmidentifier.html#cfn-route53-healthcheck-alarmidentifier-name"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.AlarmIdentifierProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 314
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-alarmidentifier.html#cfn-route53-healthcheck-alarmidentifier-region"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.AlarmIdentifierProperty.Region`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 319
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckConfigProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 381
      },
      "name": "HealthCheckConfigProperty",
      "namespace": "CfnHealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-type"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 461
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-alarmidentifier"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.AlarmIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 386
          },
          "name": "alarmIdentifier",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.AlarmIdentifierProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-childhealthchecks"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.ChildHealthChecks`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 391
          },
          "name": "childHealthChecks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-enablesni"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.EnableSNI`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 396
          },
          "name": "enableSni",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-failurethreshold"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.FailureThreshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 401
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.FullyQualifiedDomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 406
          },
          "name": "fullyQualifiedDomainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-healththreshold"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.HealthThreshold`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 411
          },
          "name": "healthThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-insufficientdatahealthstatus"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.InsufficientDataHealthStatus`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 421
          },
          "name": "insufficientDataHealthStatus",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-inverted"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.Inverted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 426
          },
          "name": "inverted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-ipaddress"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.IPAddress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 416
          },
          "name": "ipAddress",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-measurelatency"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.MeasureLatency`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 431
          },
          "name": "measureLatency",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-port"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 436
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-regions"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.Regions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 441
          },
          "name": "regions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-requestinterval"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.RequestInterval`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 446
          },
          "name": "requestInterval",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-resourcepath"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.ResourcePath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 451
          },
          "name": "resourcePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-searchstring"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckConfigProperty.SearchString`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 456
          },
          "name": "searchString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckTagProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktag.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckTagProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 564
      },
      "name": "HealthCheckTagProperty",
      "namespace": "CfnHealthCheck",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktag.html#cfn-route53-healthcheck-healthchecktag-key"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckTagProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 569
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktag.html#cfn-route53-healthcheck-healthchecktag-value"
            },
            "stability": "external",
            "summary": "`CfnHealthCheck.HealthCheckTagProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 574
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHealthCheckProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Route53::HealthCheck`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnHealthCheckProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 152
      },
      "name": "CfnHealthCheckProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthcheckconfig"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HealthCheck.HealthCheckConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 158
          },
          "name": "healthCheckConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthchecktags"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HealthCheck.HealthCheckTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 164
          },
          "name": "healthCheckTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53.CfnHealthCheck.HealthCheckTagProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53::HostedZone",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53::HostedZone`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnHostedZone",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53::HostedZone`."
        },
        "locationInModule": {
          "filename": "lib/route53.generated.ts",
          "line": 807
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CfnHostedZoneProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 735
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 826
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 841
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnHostedZone",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 739
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 763
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NameServers"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 768
          },
          "name": "attrNameServers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 831
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzonetags"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.HostedZoneTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 786
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-name"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.Name`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 774
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzoneconfig"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.HostedZoneConfig`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 780
          },
          "name": "hostedZoneConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-queryloggingconfig"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.QueryLoggingConfig`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 792
          },
          "name": "queryLoggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHostedZone.QueryLoggingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-vpcs"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.VPCs`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 798
          },
          "name": "vpcs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53.CfnHostedZone.VPCProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneConfigProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 851
      },
      "name": "HostedZoneConfigProperty",
      "namespace": "CfnHostedZone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html#cfn-route53-hostedzone-hostedzoneconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnHostedZone.HostedZoneConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 856
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneTagProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetag.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneTagProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 913
      },
      "name": "HostedZoneTagProperty",
      "namespace": "CfnHostedZone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetag.html#cfn-route53-hostedzone-hostedzonetag-key"
            },
            "stability": "external",
            "summary": "`CfnHostedZone.HostedZoneTagProperty.Key`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 918
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetag.html#cfn-route53-hostedzone-hostedzonetag-value"
            },
            "stability": "external",
            "summary": "`CfnHostedZone.HostedZoneTagProperty.Value`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 923
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHostedZone.QueryLoggingConfigProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-queryloggingconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHostedZone.QueryLoggingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 985
      },
      "name": "QueryLoggingConfigProperty",
      "namespace": "CfnHostedZone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-queryloggingconfig.html#cfn-route53-hostedzone-queryloggingconfig-cloudwatchlogsloggrouparn"
            },
            "stability": "external",
            "summary": "`CfnHostedZone.QueryLoggingConfigProperty.CloudWatchLogsLogGroupArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 990
          },
          "name": "cloudWatchLogsLogGroupArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHostedZone.VPCProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-vpc.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnHostedZone.VPCProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1048
      },
      "name": "VPCProperty",
      "namespace": "CfnHostedZone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-vpc.html#cfn-route53-hostedzone-vpc-vpcid"
            },
            "stability": "external",
            "summary": "`CfnHostedZone.VPCProperty.VPCId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1053
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-vpc.html#cfn-route53-hostedzone-vpc-vpcregion"
            },
            "stability": "external",
            "summary": "`CfnHostedZone.VPCProperty.VPCRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1058
          },
          "name": "vpcRegion",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnHostedZoneProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Route53::HostedZone`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnHostedZoneProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 637
      },
      "name": "CfnHostedZoneProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-name"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 643
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzoneconfig"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.HostedZoneConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 649
          },
          "name": "hostedZoneConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzonetags"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.HostedZoneTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 655
          },
          "name": "hostedZoneTags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53.CfnHostedZone.HostedZoneTagProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-queryloggingconfig"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.QueryLoggingConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 661
          },
          "name": "queryLoggingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnHostedZone.QueryLoggingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-vpcs"
            },
            "stability": "external",
            "summary": "`AWS::Route53::HostedZone.VPCs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 667
          },
          "name": "vpcs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53.CfnHostedZone.VPCProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnKeySigningKey": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53::KeySigningKey",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53::KeySigningKey`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnKeySigningKey",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53::KeySigningKey`."
        },
        "locationInModule": {
          "filename": "lib/route53.generated.ts",
          "line": 1269
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CfnKeySigningKeyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1213
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1288
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1302
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnKeySigningKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1217
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1293
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.HostedZoneId`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1242
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-keymanagementservicearn"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.KeyManagementServiceArn`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1248
          },
          "name": "keyManagementServiceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-name"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.Name`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1254
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-status"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.Status`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1260
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnKeySigningKeyProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Route53::KeySigningKey`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnKeySigningKeyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1121
      },
      "name": "CfnKeySigningKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1127
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-keymanagementservicearn"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.KeyManagementServiceArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1133
          },
          "name": "keyManagementServiceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-name"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1139
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-status"
            },
            "stability": "external",
            "summary": "`AWS::Route53::KeySigningKey.Status`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1145
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSet": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53::RecordSet",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53::RecordSet`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSet",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53::RecordSet`."
        },
        "locationInModule": {
          "filename": "lib/route53.generated.ts",
          "line": 1624
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CfnRecordSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1502
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1652
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1677
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRecordSet",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1506
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1657
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-name"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Name`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1531
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-type"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Type`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1537
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-aliastarget"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.AliasTarget`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1543
          },
          "name": "aliasTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnRecordSet.AliasTargetProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-comment"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Comment`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1549
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-failover"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Failover`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1555
          },
          "name": "failover",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geolocation"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.GeoLocation`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1561
          },
          "name": "geoLocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnRecordSet.GeoLocationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-healthcheckid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.HealthCheckId`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1567
          },
          "name": "healthCheckId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.HostedZoneId`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1573
          },
          "name": "hostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzonename"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.HostedZoneName`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1579
          },
          "name": "hostedZoneName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-multivalueanswer"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.MultiValueAnswer`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1585
          },
          "name": "multiValueAnswer",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-region"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Region`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1591
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-resourcerecords"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.ResourceRecords`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1597
          },
          "name": "resourceRecords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-setidentifier"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.SetIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1603
          },
          "name": "setIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-ttl"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.TTL`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1609
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-weight"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Weight`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1615
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSet.AliasTargetProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSet.AliasTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1687
      },
      "name": "AliasTargetProperty",
      "namespace": "CfnRecordSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-dnshostname"
            },
            "stability": "external",
            "summary": "`CfnRecordSet.AliasTargetProperty.DNSName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1692
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid"
            },
            "stability": "external",
            "summary": "`CfnRecordSet.AliasTargetProperty.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1702
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-evaluatetargethealth"
            },
            "stability": "external",
            "summary": "`CfnRecordSet.AliasTargetProperty.EvaluateTargetHealth`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1697
          },
          "name": "evaluateTargetHealth",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSet.GeoLocationProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSet.GeoLocationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1767
      },
      "name": "GeoLocationProperty",
      "namespace": "CfnRecordSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html#cfn-route53-recordset-geolocation-continentcode"
            },
            "stability": "external",
            "summary": "`CfnRecordSet.GeoLocationProperty.ContinentCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1772
          },
          "name": "continentCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html#cfn-route53-recordset-geolocation-countrycode"
            },
            "stability": "external",
            "summary": "`CfnRecordSet.GeoLocationProperty.CountryCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1777
          },
          "name": "countryCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html#cfn-route53-recordset-geolocation-subdivisioncode"
            },
            "stability": "external",
            "summary": "`CfnRecordSet.GeoLocationProperty.SubdivisionCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1782
          },
          "name": "subdivisionCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSetGroup": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53::RecordSetGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53::RecordSetGroup`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53::RecordSetGroup`."
        },
        "locationInModule": {
          "filename": "lib/route53.generated.ts",
          "line": 1990
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1934
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2005
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2019
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRecordSetGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1938
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2010
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-comment"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.Comment`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1963
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.HostedZoneId`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1969
          },
          "name": "hostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-hostedzonename"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.HostedZoneName`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1975
          },
          "name": "hostedZoneName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-recordsets"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.RecordSets`."
          },
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1981
          },
          "name": "recordSets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.RecordSetProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSetGroup.AliasTargetProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.AliasTargetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 2029
      },
      "name": "AliasTargetProperty",
      "namespace": "CfnRecordSetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-dnshostname"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.AliasTargetProperty.DNSName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2034
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.AliasTargetProperty.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2044
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-evaluatetargethealth"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.AliasTargetProperty.EvaluateTargetHealth`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2039
          },
          "name": "evaluateTargetHealth",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSetGroup.GeoLocationProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.GeoLocationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 2109
      },
      "name": "GeoLocationProperty",
      "namespace": "CfnRecordSetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html#cfn-route53-recordsetgroup-geolocation-continentcode"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.GeoLocationProperty.ContinentCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2114
          },
          "name": "continentCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html#cfn-route53-recordset-geolocation-countrycode"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.GeoLocationProperty.CountryCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2119
          },
          "name": "countryCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html#cfn-route53-recordset-geolocation-subdivisioncode"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.GeoLocationProperty.SubdivisionCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2124
          },
          "name": "subdivisionCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSetGroup.RecordSetProperty": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.RecordSetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 2187
      },
      "name": "RecordSetProperty",
      "namespace": "CfnRecordSetGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-name"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2232
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-type"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2257
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-aliastarget"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.AliasTarget`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2192
          },
          "name": "aliasTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.AliasTargetProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-comment"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2197
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-failover"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.Failover`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2202
          },
          "name": "failover",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geolocation"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.GeoLocation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2207
          },
          "name": "geoLocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.GeoLocationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-healthcheckid"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.HealthCheckId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2212
          },
          "name": "healthCheckId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzoneid"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2217
          },
          "name": "hostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzonename"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.HostedZoneName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2222
          },
          "name": "hostedZoneName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-multivalueanswer"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.MultiValueAnswer`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2227
          },
          "name": "multiValueAnswer",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-region"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.Region`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2237
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-resourcerecords"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.ResourceRecords`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2242
          },
          "name": "resourceRecords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-setidentifier"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.SetIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2247
          },
          "name": "setIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-ttl"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.TTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2252
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-weight"
            },
            "stability": "external",
            "summary": "`CfnRecordSetGroup.RecordSetProperty.Weight`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 2262
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSetGroupProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Route53::RecordSetGroup`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1846
      },
      "name": "CfnRecordSetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-comment"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1852
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1858
          },
          "name": "hostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-hostedzonename"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.HostedZoneName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1864
          },
          "name": "hostedZoneName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-recordsets"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSetGroup.RecordSets`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1870
          },
          "name": "recordSets",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53.CfnRecordSetGroup.RecordSetProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CfnRecordSetProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Route53::RecordSet`."
      },
      "fqn": "@aws-cdk/aws-route53.CfnRecordSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53.generated.ts",
        "line": 1313
      },
      "name": "CfnRecordSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-name"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1319
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-type"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1325
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-aliastarget"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.AliasTarget`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1331
          },
          "name": "aliasTarget",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnRecordSet.AliasTargetProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-comment"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1337
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-failover"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Failover`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1343
          },
          "name": "failover",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geolocation"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.GeoLocation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1349
          },
          "name": "geoLocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-route53.CfnRecordSet.GeoLocationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-healthcheckid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.HealthCheckId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1355
          },
          "name": "healthCheckId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzoneid"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1361
          },
          "name": "hostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzonename"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.HostedZoneName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1367
          },
          "name": "hostedZoneName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-multivalueanswer"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.MultiValueAnswer`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1373
          },
          "name": "multiValueAnswer",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-region"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Region`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1379
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-resourcerecords"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.ResourceRecords`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1385
          },
          "name": "resourceRecords",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-setidentifier"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.SetIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1391
          },
          "name": "setIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-ttl"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.TTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1397
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-weight"
            },
            "stability": "external",
            "summary": "`AWS::Route53::RecordSet.Weight`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53.generated.ts",
            "line": 1403
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CnameRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS CNAME record."
      },
      "fqn": "@aws-cdk/aws-route53.CnameRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 312
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CnameRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 311
      },
      "name": "CnameRecord"
    },
    "@aws-cdk/aws-route53.CnameRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CnameRecord."
      },
      "fqn": "@aws-cdk/aws-route53.CnameRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 299
      },
      "name": "CnameRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The domain name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 303
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CommonHostedZoneProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Common properties to create a Route 53 hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.CommonHostedZoneProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 15
      },
      "name": "CommonHostedZoneProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For resource record types that include a domain\nname, specify a fully qualified domain name.",
            "stability": "stable",
            "summary": "The name of the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 20
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "Any comments that you want to include about the hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 27
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "disabled",
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) for the log group that you want Amazon Route 53 to send query logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 34
          },
          "name": "queryLogsLogGroupArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.CrossAccountZoneDelegationRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A Cross Account Zone Delegation record."
      },
      "fqn": "@aws-cdk/aws-route53.CrossAccountZoneDelegationRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 675
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.CrossAccountZoneDelegationRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 674
      },
      "name": "CrossAccountZoneDelegationRecord"
    },
    "@aws-cdk/aws-route53.CrossAccountZoneDelegationRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a CrossAccountZoneDelegationRecord."
      },
      "fqn": "@aws-cdk/aws-route53.CrossAccountZoneDelegationRecordProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 631
      },
      "name": "CrossAccountZoneDelegationRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The zone to be delegated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 635
          },
          "name": "delegatedZone",
          "type": {
            "fqn": "@aws-cdk/aws-route53.IHostedZone"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The delegation role in the parent account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 654
          },
          "name": "delegationRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no zone id",
            "stability": "stable",
            "summary": "The hosted zone id in the parent account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 649
          },
          "name": "parentHostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no zone name",
            "stability": "stable",
            "summary": "The hosted zone name in the parent account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 642
          },
          "name": "parentHostedZoneName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.DESTROY",
            "stability": "stable",
            "summary": "The removal policy to apply to the record set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 668
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(2)",
            "stability": "stable",
            "summary": "The resource record cache time to live (TTL)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 661
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.DsRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS DS record."
      },
      "fqn": "@aws-cdk/aws-route53.DsRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 592
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.DsRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 591
      },
      "name": "DsRecord"
    },
    "@aws-cdk/aws-route53.DsRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a DSRecord."
      },
      "fqn": "@aws-cdk/aws-route53.DsRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 579
      },
      "name": "DsRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The DS values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 583
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.HostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Container for records, and records contain information about how to route traffic for a specific domain, such as example.com and its subdomains (acme.example.com, zenith.example.com)."
      },
      "fqn": "@aws-cdk/aws-route53.HostedZone",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/hosted-zone.ts",
          "line": 152
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.HostedZoneProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-route53.IHostedZone"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 56
      },
      "methods": [
        {
          "docs": {
            "remarks": "Use when both hosted zone ID and hosted zone name are known.",
            "stability": "stable",
            "summary": "Imports a hosted zone from another stack."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 93
          },
          "name": "fromHostedZoneAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical name of this Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the HostedZoneAttributes (hosted zone ID and hosted zone name)."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-route53.HostedZoneAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.IHostedZone"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use when hosted zone ID is known. Hosted zone name becomes unavailable through this query.",
            "stability": "stable",
            "summary": "Import a Route 53 hosted zone defined either outside the CDK, or in a different CDK stack."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 70
          },
          "name": "fromHostedZoneId",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical name of this Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the ID of the hosted zone to import."
              },
              "name": "hostedZoneId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.IHostedZone"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Requires environment, you must specify env for the stack.\n\nUse to easily query hosted zones.",
            "see": "https://docs.aws.amazon.com/cdk/latest/guide/environments.html",
            "stability": "stable",
            "summary": "Lookup a hosted zone in the current account/region based on query parameters."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 113
          },
          "name": "fromLookup",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "query",
              "type": {
                "fqn": "@aws-cdk/aws-route53.HostedZoneProviderProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.IHostedZone"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add another VPC to this private hosted zone."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 178
          },
          "name": "addVpc",
          "parameters": [
            {
              "docs": {
                "summary": "the other VPC to add."
              },
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ]
        }
      ],
      "name": "HostedZone",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of this hosted zone, such as arn:${Partition}:route53:::hostedzone/${Id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 57
          },
          "name": "hostedZoneArn",
          "overrides": "@aws-cdk/aws-route53.IHostedZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ID of this hosted zone, such as \"Z23ABC4XYZL05B\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 143
          },
          "name": "hostedZoneId",
          "overrides": "@aws-cdk/aws-route53.IHostedZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "VPCs to which this hosted zone will be added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 150
          },
          "name": "vpcs",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53.CfnHostedZone.VPCProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "FQDN of this hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 144
          },
          "name": "zoneName",
          "overrides": "@aws-cdk/aws-route53.IHostedZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This attribute will be undefined for private hosted zones or hosted zones imported from another stack.",
            "stability": "stable",
            "summary": "Returns the set of name servers for the specific hosted zone. For example: ns1.example.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 145
          },
          "name": "hostedZoneNameServers",
          "optional": true,
          "overrides": "@aws-cdk/aws-route53.IHostedZone",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.HostedZoneAttributes": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Reference to a hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.HostedZoneAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone-ref.ts",
        "line": 40
      },
      "name": "HostedZoneAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifier of the hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-ref.ts",
            "line": 44
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-ref.ts",
            "line": 49
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.HostedZoneProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of a new hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.HostedZoneProps",
      "interfaces": [
        "@aws-cdk/aws-route53.CommonHostedZoneProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 40
      },
      "name": "HostedZoneProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "public (no VPCs associated)",
            "remarks": "When you specify\nthis property, a private hosted zone will be created.\n\nYou can associate additional VPCs to this private zone using `addVpc(vpc)`.",
            "stability": "stable",
            "summary": "A VPC that you want to associate with this hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 49
          },
          "name": "vpcs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.HostedZoneProviderProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Zone properties for looking up the Hosted Zone."
      },
      "fqn": "@aws-cdk/aws-route53.HostedZoneProviderProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone-provider.ts",
        "line": 4
      },
      "name": "HostedZoneProviderProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The zone domain e.g. example.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-provider.ts",
            "line": 8
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the zone that is being looked up is a private hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-provider.ts",
            "line": 15
          },
          "name": "privateZone",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No VPC ID",
            "remarks": "If a VPC ID is provided and privateZone is false, no results will be returned\nand an error will be raised",
            "stability": "stable",
            "summary": "Specifies the ID of the VPC associated with a private hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-provider.ts",
            "line": 25
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.IAliasRecordTarget": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "Classes that are valid alias record targets, like CloudFront distributions and load balancers, should implement this interface."
      },
      "fqn": "@aws-cdk/aws-route53.IAliasRecordTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/alias-record-target.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return hosted zone ID and DNS name, usable for Route53 alias targets."
          },
          "locationInModule": {
            "filename": "lib/alias-record-target.ts",
            "line": 12
          },
          "name": "bind",
          "parameters": [
            {
              "name": "record",
              "type": {
                "fqn": "@aws-cdk/aws-route53.IRecordSet"
              }
            },
            {
              "name": "zone",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-route53.IHostedZone"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.AliasRecordTargetConfig"
            }
          }
        }
      ],
      "name": "IAliasRecordTarget"
    },
    "@aws-cdk/aws-route53.IHostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "Imported or created hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.IHostedZone",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone-ref.ts",
        "line": 6
      },
      "name": "IHostedZone",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ARN of this hosted zone, such as arn:${Partition}:route53:::hostedzone/${Id}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-ref.ts",
            "line": 24
          },
          "name": "hostedZoneArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "ID of this hosted zone, such as \"Z23ABC4XYZL05B\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-ref.ts",
            "line": 12
          },
          "name": "hostedZoneId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "FQDN of this hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-ref.ts",
            "line": 17
          },
          "name": "zoneName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "This attribute will be undefined for private hosted zones or hosted zones imported from another stack.",
            "stability": "stable",
            "summary": "Returns the set of name servers for the specific hosted zone. For example: ns1.example.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone-ref.ts",
            "line": 34
          },
          "name": "hostedZoneNameServers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.IPrivateHostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Route 53 private hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.IPrivateHostedZone",
      "interfaces": [
        "@aws-cdk/aws-route53.IHostedZone"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 336
      },
      "name": "IPrivateHostedZone"
    },
    "@aws-cdk/aws-route53.IPublicHostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Route 53 public hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.IPublicHostedZone",
      "interfaces": [
        "@aws-cdk/aws-route53.IHostedZone"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 213
      },
      "name": "IPublicHostedZone"
    },
    "@aws-cdk/aws-route53.IRecordSet": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "A record set."
      },
      "fqn": "@aws-cdk/aws-route53.IRecordSet",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 19
      },
      "name": "IRecordSet",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 23
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.MxRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS MX record."
      },
      "fqn": "@aws-cdk/aws-route53.MxRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 542
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.MxRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 541
      },
      "name": "MxRecord"
    },
    "@aws-cdk/aws-route53.MxRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a MxRecord."
      },
      "fqn": "@aws-cdk/aws-route53.MxRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 529
      },
      "name": "MxRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 533
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53.MxRecordValue"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.MxRecordValue": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a MX record value."
      },
      "fqn": "@aws-cdk/aws-route53.MxRecordValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 514
      },
      "name": "MxRecordValue",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The mail server host name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 523
          },
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 518
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.NsRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS NS record."
      },
      "fqn": "@aws-cdk/aws-route53.NsRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 567
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.NsRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 566
      },
      "name": "NsRecord"
    },
    "@aws-cdk/aws-route53.NsRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a NSRecord."
      },
      "fqn": "@aws-cdk/aws-route53.NsRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 554
      },
      "name": "NsRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The NS values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 558
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.PrivateHostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.HostedZone",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::HostedZone"
        },
        "remarks": "Note that `enableDnsHostnames` and `enableDnsSupport` must have been enabled\nfor the VPC you're configuring for private hosted zones.",
        "stability": "stable",
        "summary": "Create a Route53 private hosted zone for use in one or more VPCs."
      },
      "fqn": "@aws-cdk/aws-route53.PrivateHostedZone",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/hosted-zone.ts",
          "line": 366
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.PrivateHostedZoneProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-route53.IPrivateHostedZone"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 346
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a Route 53 private hosted zone defined either outside the CDK, or in a different CDK stack."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 355
          },
          "name": "fromPrivateHostedZoneId",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical name of this Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the ID of the private hosted zone to import."
              },
              "name": "privateHostedZoneId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.IPrivateHostedZone"
            }
          },
          "static": true
        }
      ],
      "name": "PrivateHostedZone"
    },
    "@aws-cdk/aws-route53.PrivateHostedZoneProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a Route 53 private hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.PrivateHostedZoneProps",
      "interfaces": [
        "@aws-cdk/aws-route53.CommonHostedZoneProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 323
      },
      "name": "PrivateHostedZoneProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Private hosted zones must be associated with at least one VPC. You can\nassociated additional VPCs using `addVpc(vpc)`.",
            "stability": "stable",
            "summary": "A VPC that you want to associate with this hosted zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 330
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.PublicHostedZone": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.HostedZone",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::HostedZone"
        },
        "stability": "stable",
        "summary": "Create a Route53 public hosted zone."
      },
      "fqn": "@aws-cdk/aws-route53.PublicHostedZone",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/hosted-zone.ts",
          "line": 245
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.PublicHostedZoneProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-route53.IPublicHostedZone"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 220
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a Route 53 public hosted zone defined either outside the CDK, or in a different CDK stack."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 229
          },
          "name": "fromPublicHostedZoneId",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical name of this Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the ID of the public hosted zone to import."
              },
              "name": "publicHostedZoneId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.IPublicHostedZone"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a delegation from this zone to a designated zone."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 290
          },
          "name": "addDelegation",
          "parameters": [
            {
              "docs": {
                "summary": "the zone being delegated to."
              },
              "name": "delegate",
              "type": {
                "fqn": "@aws-cdk/aws-route53.IPublicHostedZone"
              }
            },
            {
              "docs": {
                "summary": "options for creating the DNS record, if any."
              },
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-route53.ZoneDelegationOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add another VPC to this private hosted zone."
          },
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 280
          },
          "name": "addVpc",
          "overrides": "@aws-cdk/aws-route53.HostedZone",
          "parameters": [
            {
              "name": "_vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ]
        }
      ],
      "name": "PublicHostedZone",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Role for cross account zone delegation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 243
          },
          "name": "crossAccountZoneDelegationRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.PublicHostedZoneProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a PublicHostedZone."
      },
      "fqn": "@aws-cdk/aws-route53.PublicHostedZoneProps",
      "interfaces": [
        "@aws-cdk/aws-route53.CommonHostedZoneProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 186
      },
      "name": "PublicHostedZoneProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to create a CAA record to restrict certificate authorities allowed to issue certificates for this domain to Amazon only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 193
          },
          "name": "caaAmazon",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No delegation configuration",
            "stability": "stable",
            "summary": "A principal which is trusted to assume a role for zone delegation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 200
          },
          "name": "crossAccountZoneDelegationPrincipal",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role name is generated automatically",
            "stability": "stable",
            "summary": "The name of the role created for cross account delegation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 207
          },
          "name": "crossAccountZoneDelegationRoleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.RecordSet": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A record set."
      },
      "fqn": "@aws-cdk/aws-route53.RecordSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 219
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.RecordSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-route53.IRecordSet"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 216
      },
      "name": "RecordSet",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 217
          },
          "name": "domainName",
          "overrides": "@aws-cdk/aws-route53.IRecordSet",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.RecordSetOptions": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a RecordSet."
      },
      "fqn": "@aws-cdk/aws-route53.RecordSetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 135
      },
      "name": "RecordSetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The hosted zone in which to define the new record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 139
          },
          "name": "zone",
          "type": {
            "fqn": "@aws-cdk/aws-route53.IHostedZone"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no comment",
            "stability": "stable",
            "summary": "A comment to add on the record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 160
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "zone root",
            "stability": "stable",
            "summary": "The domain name for this record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 146
          },
          "name": "recordName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(30)",
            "stability": "stable",
            "summary": "The resource record cache time to live (TTL)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 153
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.RecordSetProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a RecordSet."
      },
      "fqn": "@aws-cdk/aws-route53.RecordSetProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 200
      },
      "name": "RecordSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The record type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 204
          },
          "name": "recordType",
          "type": {
            "fqn": "@aws-cdk/aws-route53.RecordType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target for this record, either `RecordTarget.fromValues()` or `RecordTarget.fromAlias()`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 210
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-route53.RecordTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.RecordTarget": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "Type union for a record that accepts multiple types of target."
      },
      "fqn": "@aws-cdk/aws-route53.RecordTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 193
        },
        "parameters": [
          {
            "docs": {
              "summary": "correspond with the chosen record type (e.g. for 'A' Type, specify one or more IP addresses)."
            },
            "name": "values",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          {
            "docs": {
              "summary": "alias for targets such as CloudFront distribution to route traffic to."
            },
            "name": "aliasTarget",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53.IAliasRecordTarget"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 166
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use an alias as target."
          },
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 177
          },
          "name": "fromAlias",
          "parameters": [
            {
              "name": "aliasTarget",
              "type": {
                "fqn": "@aws-cdk/aws-route53.IAliasRecordTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.RecordTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use ip addresses as target."
          },
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 184
          },
          "name": "fromIpAddresses",
          "parameters": [
            {
              "name": "ipAddresses",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.RecordTarget"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use string values as target."
          },
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 170
          },
          "name": "fromValues",
          "parameters": [
            {
              "name": "values",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53.RecordTarget"
            }
          },
          "static": true,
          "variadic": true
        }
      ],
      "name": "RecordTarget",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "alias for targets such as CloudFront distribution to route traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 193
          },
          "name": "aliasTarget",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-route53.IAliasRecordTarget"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "correspond with the chosen record type (e.g. for 'A' Type, specify one or more IP addresses)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 193
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.RecordType": {
      "assembly": "@aws-cdk/aws-route53",
      "docs": {
        "stability": "stable",
        "summary": "The record type."
      },
      "fqn": "@aws-cdk/aws-route53.RecordType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 29
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#AFormat",
            "stability": "stable",
            "summary": "route traffic to a resource, such as a web server, using an IPv4 address in dotted decimal notation."
          },
          "name": "A"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#AAAAFormat",
            "stability": "stable",
            "summary": "route traffic to a resource, such as a web server, using an IPv6 address in colon-separated hexadecimal format."
          },
          "name": "AAAA"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#CAAFormat",
            "stability": "stable",
            "summary": "A CAA record specifies which certificate authorities (CAs) are allowed to issue certificates for a domain or subdomain."
          },
          "name": "CAA"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#CNAMEFormat",
            "stability": "stable",
            "summary": "A CNAME record maps DNS queries for the name of the current record, such as acme.example.com, to another domain (example.com or example.net) or subdomain (acme.example.com or zenith.example.org)."
          },
          "name": "CNAME"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#DSFormat",
            "stability": "stable",
            "summary": "A delegation signer (DS) record refers a zone key for a delegated subdomain zone."
          },
          "name": "DS"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#MXFormat",
            "stability": "stable",
            "summary": "An MX record specifies the names of your mail servers and, if you have two or more mail servers, the priority order."
          },
          "name": "MX"
        },
        {
          "docs": {
            "remarks": "For example, one common use is to convert phone numbers into SIP URIs.",
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#NAPTRFormat",
            "stability": "stable",
            "summary": "A Name Authority Pointer (NAPTR) is a type of record that is used by Dynamic Delegation Discovery System (DDDS) applications to convert one value to another or to replace one value with another."
          },
          "name": "NAPTR"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#NSFormat",
            "stability": "stable",
            "summary": "An NS record identifies the name servers for the hosted zone."
          },
          "name": "NS"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#PTRFormat",
            "stability": "stable",
            "summary": "A PTR record maps an IP address to the corresponding domain name."
          },
          "name": "PTR"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#SOAFormat",
            "stability": "stable",
            "summary": "A start of authority (SOA) record provides information about a domain and the corresponding Amazon Route 53 hosted zone."
          },
          "name": "SOA"
        },
        {
          "docs": {
            "remarks": "Instead of an SPF record, we recommend that you create a TXT record that contains the applicable value.",
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#SPFFormat",
            "stability": "stable",
            "summary": "SPF records were formerly used to verify the identity of the sender of email messages."
          },
          "name": "SPF"
        },
        {
          "docs": {
            "remarks": "The first three values are\ndecimal numbers representing priority, weight, and port. The fourth value is a domain name.",
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#SRVFormat",
            "stability": "stable",
            "summary": "An SRV record Value element consists of four space-separated values."
          },
          "name": "SRV"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html#TXTFormat",
            "stability": "stable",
            "summary": "A TXT record contains one or more strings that are enclosed in double quotation marks (\")."
          },
          "name": "TXT"
        }
      ],
      "name": "RecordType"
    },
    "@aws-cdk/aws-route53.SrvRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS SRV record."
      },
      "fqn": "@aws-cdk/aws-route53.SrvRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 406
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.SrvRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 405
      },
      "name": "SrvRecord"
    },
    "@aws-cdk/aws-route53.SrvRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a SrvRecord."
      },
      "fqn": "@aws-cdk/aws-route53.SrvRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 393
      },
      "name": "SrvRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 397
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53.SrvRecordValue"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.SrvRecordValue": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a SRV record value."
      },
      "fqn": "@aws-cdk/aws-route53.SrvRecordValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 369
      },
      "name": "SrvRecordValue",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The server host name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 388
          },
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 383
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 373
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The weight."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 378
          },
          "name": "weight",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.TxtRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "custom": {
          "resource": "AWS::Route53::RecordSet"
        },
        "stability": "stable",
        "summary": "A DNS TXT record."
      },
      "fqn": "@aws-cdk/aws-route53.TxtRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 337
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.TxtRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 336
      },
      "name": "TxtRecord"
    },
    "@aws-cdk/aws-route53.TxtRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a TxtRecord."
      },
      "fqn": "@aws-cdk/aws-route53.TxtRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 324
      },
      "name": "TxtRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The text values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 328
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.VpcEndpointServiceDomainName": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "A Private DNS configuration for a VPC endpoint service."
      },
      "fqn": "@aws-cdk/aws-route53.VpcEndpointServiceDomainName",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/vpc-endpoint-service-domain-name.ts",
          "line": 56
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.VpcEndpointServiceDomainNameProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service-domain-name.ts",
        "line": 41
      },
      "name": "VpcEndpointServiceDomainName"
    },
    "@aws-cdk/aws-route53.VpcEndpointServiceDomainNameProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to configure a VPC Endpoint Service domain name."
      },
      "fqn": "@aws-cdk/aws-route53.VpcEndpointServiceDomainNameProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vpc-endpoint-service-domain-name.ts",
        "line": 15
      },
      "name": "VpcEndpointServiceDomainNameProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This domain name must be owned by this account (registered through Route53),\nor delegated to this account. Domain ownership will be verified by AWS before\nprivate DNS can be used.",
            "see": "https://docs.aws.amazon.com/vpc/latest/userguide/endpoint-services-dns-validation.html",
            "stability": "stable",
            "summary": "The domain name to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service-domain-name.ts",
            "line": 30
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC Endpoint Service to configure Private DNS for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service-domain-name.ts",
            "line": 20
          },
          "name": "endpointService",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpcEndpointService"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The public hosted zone to use for the domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vpc-endpoint-service-domain-name.ts",
            "line": 35
          },
          "name": "publicHostedZone",
          "type": {
            "fqn": "@aws-cdk/aws-route53.IPublicHostedZone"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.ZoneDelegationOptions": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options available when creating a delegation relationship from one PublicHostedZone to another."
      },
      "fqn": "@aws-cdk/aws-route53.ZoneDelegationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/hosted-zone.ts",
        "line": 304
      },
      "name": "ZoneDelegationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "A comment to add on the DNS record created to incorporate the delegation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 310
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "172800",
            "stability": "stable",
            "summary": "The TTL (Time To Live) of the DNS delegation record in DNS caches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/hosted-zone.ts",
            "line": 317
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-route53.ZoneDelegationRecord": {
      "assembly": "@aws-cdk/aws-route53",
      "base": "@aws-cdk/aws-route53.RecordSet",
      "docs": {
        "stability": "stable",
        "summary": "A record to delegate further lookups to a different set of name servers."
      },
      "fqn": "@aws-cdk/aws-route53.ZoneDelegationRecord",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/record-set.ts",
          "line": 615
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53.ZoneDelegationRecordProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 614
      },
      "name": "ZoneDelegationRecord"
    },
    "@aws-cdk/aws-route53.ZoneDelegationRecordProps": {
      "assembly": "@aws-cdk/aws-route53",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a ZoneDelegationRecord."
      },
      "fqn": "@aws-cdk/aws-route53.ZoneDelegationRecordProps",
      "interfaces": [
        "@aws-cdk/aws-route53.RecordSetOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/record-set.ts",
        "line": 604
      },
      "name": "ZoneDelegationRecordProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name servers to report in the delegation records."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/record-set.ts",
            "line": 608
          },
          "name": "nameServers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    }
  },
  "version": "1.126.0",
  "fingerprint": "DHAoqr7wtKrFQZILoy31EUncM4a4iVzvtLAv3SOl9Mg="
}
