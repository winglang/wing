{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-certificatemanager": "1.126.0",
    "@aws-cdk/aws-cloudwatch": "1.126.0",
    "@aws-cdk/aws-ec2": "1.126.0",
    "@aws-cdk/aws-iam": "1.126.0",
    "@aws-cdk/aws-kms": "1.126.0",
    "@aws-cdk/aws-lambda": "1.126.0",
    "@aws-cdk/aws-s3": "1.126.0",
    "@aws-cdk/aws-ssm": "1.126.0",
    "@aws-cdk/core": "1.126.0",
    "@aws-cdk/cx-api": "1.126.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::CloudFront",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.35.0 (build 6ebef96)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cloudfront"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-cloudfront",
  "readme": {
    "markdown": "# Amazon CloudFront Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nAmazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to\nyour users. CloudFront delivers your content through a worldwide network of data centers called edge locations. When a user requests content that\nyou're serving with CloudFront, the user is routed to the edge location that provides the lowest latency, so that content is delivered with the best\npossible performance.\n\n## Distribution API\n\nThe `Distribution` API is currently being built to replace the existing `CloudFrontWebDistribution` API. The `Distribution` API is optimized for the\nmost common use cases of CloudFront distributions (e.g., single origin and behavior, few customizations) while still providing the ability for more\nadvanced use cases. The API focuses on simplicity for the common use cases, and convenience methods for creating the behaviors and origins necessary\nfor more complex use cases.\n\n### Creating a distribution\n\nCloudFront distributions deliver your content from one or more origins; an origin is the location where you store the original version of your\ncontent. Origins can be created from S3 buckets or a custom origin (HTTP server). Constructs to define origins are in the `@aws-cdk/aws-cloudfront-origins` module.\n\nEach distribution has a default behavior which applies to all requests to that distribution, and routes requests to a primary origin.\nAdditional behaviors may be specified for an origin with a given URL path pattern. Behaviors allow routing with multiple origins,\ncontrolling which HTTP methods to support, whether to require users to use HTTPS, and what query strings or cookies to forward to your origin,\namong other settings.\n\n#### From an S3 Bucket\n\nAn S3 bucket can be added as an origin. If the bucket is configured as a website endpoint, the distribution can use S3 redirects and S3 custom error\ndocuments.\n\n```ts\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\n// Creates a distribution for a S3 bucket.\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});\n```\n\nThe above will treat the bucket differently based on if `IBucket.isWebsite` is set or not. If the bucket is configured as a website, the bucket is\ntreated as an HTTP origin, and the built-in S3 redirects and error pages can be used. Otherwise, the bucket is handled as a bucket origin and\nCloudFront's redirect and error handling will be used. In the latter case, the Origin will create an origin access identity and grant it access to the\nunderlying bucket. This can be used in conjunction with a bucket that is not public to require that your users access your content using CloudFront\nURLs and not S3 URLs directly.\n\n#### ELBv2 Load Balancer\n\nAn Elastic Load Balancing (ELB) v2 load balancer may be used as an origin. In order for a load balancer to serve as an origin, it must be publicly\naccessible (`internetFacing` is true). Both Application and Network load balancers are supported.\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst vpc = new ec2.Vpc(...);\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});\n```\n\n#### From an HTTP endpoint\n\nOrigins can also be created from any other HTTP endpoint, given the domain name, and optionally, other origin properties.\n\n```ts\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});\n```\n\n### Domain Names and Certificates\n\nWhen you create a distribution, CloudFront assigns a domain name for the distribution, for example: `d111111abcdef8.cloudfront.net`; this value can\nbe retrieved from `distribution.distributionDomainName`. CloudFront distributions use a default certificate (`*.cloudfront.net`) to support HTTPS by\ndefault. If you want to use your own domain name, such as `www.example.com`, you must associate a certificate with your distribution that contains\nyour domain name, and provide one (or more) domain names from the certificate for the distribution.\n\nThe certificate must be present in the AWS Certificate Manager (ACM) service in the US East (N. Virginia) region; the certificate\nmay either be created by ACM, or created elsewhere and imported into ACM. When a certificate is used, the distribution will support HTTPS connections\nfrom SNI only and a minimum protocol version of TLSv1.2_2021 if the '@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021' feature flag is set, and TLSv1.2_2019 otherwise.\n\n```ts\nconst myCertificate = new acm.DnsValidatedCertificate(this, 'mySiteCert', {\n  domainName: 'www.example.com',\n  hostedZone,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n  domainNames: ['www.example.com'],\n  certificate: myCertificate,\n});\n```\n\nHowever, you can customize the minimum protocol version for the certificate while creating the distribution using `minimumProtocolVersion` property.\n\n```ts\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n  domainNames: ['www.example.com'],\n  minimumProtocolVersion: SecurityPolicyProtocol.TLS_V1_2016\n});\n```\n\n### Multiple Behaviors & Origins\n\nEach distribution has a default behavior which applies to all requests to that distribution; additional behaviors may be specified for a\ngiven URL path pattern. Behaviors allow routing with multiple origins, controlling which HTTP methods to support, whether to require users to\nuse HTTPS, and what query strings or cookies to forward to your origin, among others.\n\nThe properties of the default behavior can be adjusted as part of the distribution creation. The following example shows configuring the HTTP\nmethods and viewer protocol policy of the cache.\n\n```ts\nconst myWebDistribution = new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    allowedMethods: AllowedMethods.ALLOW_ALL,\n    viewerProtocolPolicy: ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n  }\n});\n```\n\nAdditional behaviors can be specified at creation, or added after the initial creation. Each additional behavior is associated with an origin,\nand enable customization for a specific set of resources based on a URL path pattern. For example, we can add a behavior to `myWebDistribution` to\noverride the default viewer protocol policy for all of the images.\n\n```ts\nmyWebDistribution.addBehavior('/images/*.jpg', new origins.S3Origin(myBucket), {\n  viewerProtocolPolicy: ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n});\n```\n\nThese behaviors can also be specified at distribution creation time.\n\n```ts\nconst bucketOrigin = new origins.S3Origin(myBucket);\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    allowedMethods: AllowedMethods.ALLOW_ALL,\n    viewerProtocolPolicy: ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n  },\n  additionalBehaviors: {\n    '/images/*.jpg': {\n      origin: bucketOrigin,\n      viewerProtocolPolicy: ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n    },\n  },\n});\n```\n\n### Customizing Cache Keys and TTLs with Cache Policies\n\nYou can use a cache policy to improve your cache hit ratio by controlling the values (URL query strings, HTTP headers, and cookies)\nthat are included in the cache key, and/or adjusting how long items remain in the cache via the time-to-live (TTL) settings.\nCloudFront provides some predefined cache policies, known as managed policies, for common use cases. You can use these managed policies,\nor you can create your own cache policy that’s specific to your needs.\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html for more details.\n\n```ts\n// Using an existing cache policy\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: cloudfront.CachePolicy.CACHING_OPTIMIZED,\n  },\n});\n\n// Creating a custom cache policy  -- all parameters optional\nconst myCachePolicy = new cloudfront.CachePolicy(this, 'myCachePolicy', {\n  cachePolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  defaultTtl: Duration.days(2),\n  minTtl: Duration.minutes(1),\n  maxTtl: Duration.days(10),\n  cookieBehavior: cloudfront.CacheCookieBehavior.all(),\n  headerBehavior: cloudfront.CacheHeaderBehavior.allowList('X-CustomHeader'),\n  queryStringBehavior: cloudfront.CacheQueryStringBehavior.denyList('username'),\n  enableAcceptEncodingGzip: true,\n  enableAcceptEncodingBrotli: true,\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n  },\n});\n```\n\n### Customizing Origin Requests with Origin Request Policies\n\nWhen CloudFront makes a request to an origin, the URL path, request body (if present), and a few standard headers are included.\nOther information from the viewer request, such as URL query strings, HTTP headers, and cookies, is not included in the origin request by default.\nYou can use an origin request policy to control the information that’s included in an origin request.\nCloudFront provides some predefined origin request policies, known as managed policies, for common use cases. You can use these managed policies,\nor you can create your own origin request policy that’s specific to your needs.\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html for more details.\n\n```ts\n// Using an existing origin request policy\nnew cloudfront.Distribution(this, 'myDistManagedPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    originRequestPolicy: cloudfront.OriginRequestPolicy.CORS_S3_ORIGIN,\n  },\n});\n// Creating a custom origin request policy -- all parameters optional\nconst myOriginRequestPolicy = new cloudfront.OriginRequestPolicy(stack, 'OriginRequestPolicy', {\n  originRequestPolicyName: 'MyPolicy',\n  comment: 'A default policy',\n  cookieBehavior: cloudfront.OriginRequestCookieBehavior.none(),\n  headerBehavior: cloudfront.OriginRequestHeaderBehavior.all('CloudFront-Is-Android-Viewer'),\n  queryStringBehavior: cloudfront.OriginRequestQueryStringBehavior.allowList('username'),\n});\nnew cloudfront.Distribution(this, 'myDistCustomPolicy', {\n  defaultBehavior: {\n    origin: bucketOrigin,\n    cachePolicy: myCachePolicy,\n    originRequestPolicy: myOriginRequestPolicy,\n  },\n});\n```\n\n### Validating signed URLs or signed cookies with Trusted Key Groups\n\nCloudFront Distribution now supports validating signed URLs or signed cookies using key groups. When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior.\n\nExample:\n\n```ts\n// public key in PEM format\nconst pubKey = new PublicKey(stack, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new KeyGroup(stack, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(stack, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});\n```\n\n### Lambda@Edge\n\nLambda@Edge is an extension of AWS Lambda, a compute service that lets you execute functions that customize the content that CloudFront delivers.\nYou can author Node.js or Python functions in the US East (N. Virginia) region,\nand then execute them in AWS locations globally that are closer to the viewer,\nwithout provisioning or managing servers.\nLambda@Edge functions are associated with a specific behavior and event type.\nLambda@Edge can be used to rewrite URLs,\nalter responses based on headers or cookies,\nor authorize requests based on headers or authorization tokens.\n\nThe following shows a Lambda@Edge function added to the default behavior and triggered on every request:\n\n```ts\nconst myFunc = new cloudfront.experimental.EdgeFunction(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(myBucket),\n    edgeLambdas: [\n      {\n        functionVersion: myFunc.currentVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      }\n    ],\n  },\n});\n```\n\n> **Note:** Lambda@Edge functions must be created in the `us-east-1` region, regardless of the region of the CloudFront distribution and stack.\n> To make it easier to request functions for Lambda@Edge, the `EdgeFunction` construct can be used.\n> The `EdgeFunction` construct will automatically request a function in `us-east-1`, regardless of the region of the current stack.\n> `EdgeFunction` has the same interface as `Function` and can be created and used interchangeably.\n> Please note that using `EdgeFunction` requires that the `us-east-1` region has been bootstrapped.\n> See https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html for more about bootstrapping regions.\n\nIf the stack is in `us-east-1`, a \"normal\" `lambda.Function` can be used instead of an `EdgeFunction`.\n\n```ts\nconst myFunc = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler')),\n});\n```\n\nIf the stack is not in `us-east-1`, and you need references from different applications on the same account,\nyou can also set a specific stack ID for each Lambda@Edge.\n\n```ts\nconst myFunc1 = new cloudfront.experimental.EdgeFunction(this, 'MyFunction1', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler1')),\n  stackId: 'edge-lambda-stack-id-1'\n});\n\nconst myFunc2 = new cloudfront.experimental.EdgeFunction(this, 'MyFunction2', {\n  runtime: lambda.Runtime.NODEJS_12_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'lambda-handler2')),\n  stackId: 'edge-lambda-stack-id-2'\n});\n```\n\nLambda@Edge functions can also be associated with additional behaviors,\neither at or after Distribution creation time.\n\n```ts\n// assigning at Distribution creation\nconst myOrigin = new origins.S3Origin(myBucket);\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: myOrigin },\n  additionalBehaviors: {\n    'images/*': {\n      origin: myOrigin,\n      edgeLambdas: [\n        {\n          functionVersion: myFunc.currentVersion,\n          eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n          includeBody: true, // Optional - defaults to false\n        },\n      ],\n    },\n  },\n});\n\n// assigning after creation\nmyDistribution.addBehavior('images/*', myOrigin, {\n  edgeLambdas: [\n    {\n      functionVersion: myFunc.currentVersion,\n      eventType: cloudfront.LambdaEdgeEventType.VIEWER_RESPONSE,\n    },\n  ],\n});\n```\n\nAdding an existing Lambda@Edge function created in a different stack to a CloudFront distribution.\n\n```ts\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n       {\n         functionVersion,\n         eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST\n       },\n    ],\n  },\n});\n```\n\n### CloudFront Function\n\nYou can also deploy CloudFront functions and add them to a CloudFront distribution.\n\n```ts\nconst cfFunction = new cloudfront.Function(stack, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\nnew cloudfront.Distribution(stack, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});\n```\n\nIt will auto-generate the name of the function and deploy it to the `live` stage.\n\nAdditionally, you can load the function's code from a file using the `FunctionCode.fromFile()` method.\n\n### Logging\n\nYou can configure CloudFront to create log files that contain detailed information about every user request that CloudFront receives.\nThe logs can go to either an existing bucket, or a bucket will be created for you.\n\n```ts\n// Simplest form - creates a new bucket and logs to it.\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n  enableLogging: true,\n});\n\n// You can optionally log to a specific bucket, configure whether cookies are logged, and give the log files a prefix.\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n  enableLogging: true, // Optional, this is implied if logBucket is specified\n  logBucket: new s3.Bucket(this, 'LogBucket'),\n  logFilePrefix: 'distribution-access-logs/',\n  logIncludesCookies: true,\n});\n```\n\n### Importing Distributions\n\nExisting distributions can be imported as well; note that like most imported constructs, an imported distribution cannot be modified.\nHowever, it can be used as a reference for other higher-level constructs.\n\n```ts\nconst distribution = cloudfront.Distribution.fromDistributionAttributes(scope, 'ImportedDist', {\n  domainName: 'd111111abcdef8.cloudfront.net',\n  distributionId: '012345ABCDEF',\n});\n```\n\n## CloudFrontWebDistribution API\n\n> The `CloudFrontWebDistribution` construct is the original construct written for working with CloudFront distributions.\n> Users are encouraged to use the newer `Distribution` instead, as it has a simpler interface and receives new features faster.\n\nExample usage:\n\n```ts\nconst sourceBucket = new Bucket(this, 'Bucket');\n\nconst distribution = new CloudFrontWebDistribution(this, 'MyDistribution', {\n    originConfigs: [\n        {\n            s3OriginSource: {\n                s3BucketSource: sourceBucket\n            },\n            behaviors : [ {isDefaultBehavior: true}]\n        }\n    ]\n });\n```\n\n### Viewer certificate\n\nBy default, CloudFront Web Distributions will answer HTTPS requests with CloudFront's default certificate, only containing the distribution `domainName` (e.g. d111111abcdef8.cloudfront.net).\nYou can customize the viewer certificate property to provide a custom certificate and/or list of domain name aliases to fit your needs.\n\nSee [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html) in the CloudFront User Guide.\n\n#### Default certificate\n\nYou can customize the default certificate aliases. This is intended to be used in combination with CNAME records in your DNS zone.\n\nExample:\n\n```ts lit=test/example.default-cert-alias.lit.ts\n    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromCloudFrontDefaultCertificate(\n        'www.example.com',\n      ),\n    });\n```\n\n#### ACM certificate\n\nYou can change the default certificate by one stored AWS Certificate Manager, or ACM.\nThose certificate can either be generated by AWS, or purchased by another CA imported into ACM.\n\nFor more information, see [the aws-certificatemanager module documentation](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-certificatemanager-readme.html) or [Importing Certificates into AWS Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the AWS Certificate Manager User Guide.\n\nExample:\n\n```ts lit=test/example.acm-cert-alias.lit.ts\n    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const certificate = new certificatemanager.Certificate(this, 'Certificate', {\n      domainName: 'example.com',\n      subjectAlternativeNames: ['*.example.com'],\n    });\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromAcmCertificate(\n        certificate,\n        {\n          aliases: ['example.com', 'www.example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.TLS_V1, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });\n```\n\n#### IAM certificate\n\nYou can also import a certificate into the IAM certificate store.\n\nSee [Importing an SSL/TLS Certificate](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-and-https-procedures.html#cnames-and-https-uploading-certificates) in the CloudFront User Guide.\n\nExample:\n\n```ts lit=test/example.iam-cert-alias.lit.ts\n    const s3BucketSource = new s3.Bucket(this, 'Bucket');\n\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'AnAmazingWebsiteProbably', {\n      originConfigs: [{\n        s3OriginSource: { s3BucketSource },\n        behaviors: [{ isDefaultBehavior: true }],\n      }],\n      viewerCertificate: cloudfront.ViewerCertificate.fromIamCertificate(\n        'certificateId',\n        {\n          aliases: ['example.com'],\n          securityPolicy: cloudfront.SecurityPolicyProtocol.SSL_V3, // default\n          sslMethod: cloudfront.SSLMethod.SNI, // default\n        },\n      ),\n    });\n```\n\n### Trusted Key Groups\n\nCloudFront Web Distributions supports validating signed URLs or signed cookies using key groups. When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior.\n\nExample:\n\n```ts\nconst pubKey = new PublicKey(stack, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new KeyGroup(stack, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew CloudFrontWebDistribution(stack, 'AnAmazingWebsiteProbably', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n          trustedKeyGroups: [\n            keyGroup,\n          ],\n        },\n      ],\n    },\n  ],\n});\n```\n\n### Restrictions\n\nCloudFront supports adding restrictions to your distribution.\n\nSee [Restricting the Geographic Distribution of Your Content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/georestrictions.html) in the CloudFront User Guide.\n\nExample:\n\n```ts\nnew cloudfront.CloudFrontWebDistribution(stack, 'MyDistribution', {\n   //...\n    geoRestriction: GeoRestriction.whitelist('US', 'UK')\n});\n```\n\n### Connection behaviors between CloudFront and your origin\n\nCloudFront provides you even more control over the connection behaviors between CloudFront and your origin. You can now configure the number of connection attempts CloudFront will make to your origin and the origin connection timeout for each attempt.\n\nSee [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts)\n\nSee [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout)\n\nExample usage:\n\n```ts\nconst distribution = new CloudFrontWebDistribution(this, 'MyDistribution', {\n    originConfigs: [\n        {\n            ...,\n            connectionAttempts: 3,\n            connectionTimeout: cdk.Duration.seconds(10),\n        }\n    ]\n});\n```\n\n#### Origin Fallback\n\nIn case the origin source is not available and answers with one of the\nspecified status code the failover origin source will be used.\n\n```ts\nnew CloudFrontWebDistribution(stack, 'ADistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: s3.Bucket.fromBucketName(stack, 'aBucket', 'myoriginbucket'),\n        originPath: '/',\n        originHeaders: {\n          'myHeader': '42',\n        },\n        originShieldRegion: 'us-west-2'\n      },\n      failoverS3OriginSource: {\n        s3BucketSource: s3.Bucket.fromBucketName(stack, 'aBucketFallback', 'myoriginbucketfallback'),\n        originPath: '/somewhere',\n        originHeaders: {\n          'myHeader2': '21',\n        },\n        originShieldRegion: 'us-east-1'\n      },\n      failoverCriteriaStatusCodes: [FailoverStatusCode.INTERNAL_SERVER_ERROR],\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n});\n```\n\n## KeyGroup & PublicKey API\n\nNow you can create a key group to use with CloudFront signed URLs and signed cookies. You can add public keys to use with CloudFront features such as signed URLs, signed cookies, and field-level encryption.\n\nThe following example command uses OpenSSL to generate an RSA key pair with a length of 2048 bits and save to the file named `private_key.pem`.\n\n```bash\nopenssl genrsa -out private_key.pem 2048\n```\n\nThe resulting file contains both the public and the private key. The following example command extracts the public key from the file named `private_key.pem` and stores it in `public_key.pem`.\n\n```bash\nopenssl rsa -pubout -in private_key.pem -out public_key.pem\n```\n\nNote: Don't forget to copy/paste the contents of `public_key.pem` file including `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----` lines into `encodedKey` parameter when creating a `PublicKey`.\n\nExample:\n\n```ts\n  new cloudfront.KeyGroup(stack, 'MyKeyGroup', {\n    items: [\n      new cloudfront.PublicKey(stack, 'MyPublicKey', {\n        encodedKey: '...', // contents of public_key.pem file\n        // comment: 'Key is expiring on ...',\n      }),\n    ],\n    // comment: 'Key group containing public keys ...',\n  });\n```\n\nSee:\n\n* https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\n* https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cloudfront",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "submodules": {
    "@aws-cdk/aws-cloudfront.experimental": {
      "locationInModule": {
        "filename": "lib/index.ts",
        "line": 12
      }
    }
  },
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CloudFront",
      "packageId": "Amazon.CDK.AWS.CloudFront"
    },
    "java": {
      "maven": {
        "artifactId": "cloudfront",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cloudfront"
    },
    "js": {
      "npm": "@aws-cdk/aws-cloudfront"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-cloudfront",
      "module": "aws_cdk.aws_cloudfront"
    }
  },
  "types": {
    "@aws-cdk/aws-cloudfront.AddBehaviorOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for adding a new behavior to a Distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.AddBehaviorOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 662
      },
      "name": "AddBehaviorOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "AllowedMethods.ALLOW_GET_HEAD",
            "stability": "stable",
            "summary": "HTTP methods to allow for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 668
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CachedMethods.CACHE_GET_HEAD",
            "stability": "stable",
            "summary": "HTTP methods to cache for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 675
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CachedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CachePolicy.CACHING_OPTIMIZED",
            "remarks": "The cache policy determines what values are included in the cache key,\nand the time-to-live (TTL) values for the cache.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html.",
            "stability": "stable",
            "summary": "The cache policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 684
          },
          "name": "cachePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html#compressed-content-cloudfront-file-types\nfor file types CloudFront will compress.",
            "stability": "stable",
            "summary": "Whether you want CloudFront to automatically compress certain files for this cache behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 693
          },
          "name": "compress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no Lambda functions will be invoked",
            "see": "https://aws.amazon.com/lambda/edge",
            "stability": "stable",
            "summary": "The Lambda@Edge functions to invoke before serving the contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 730
          },
          "name": "edgeLambdas",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.EdgeLambda"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no functions will be invoked",
            "stability": "stable",
            "summary": "The CloudFront functions to invoke before serving the contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 722
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.FunctionAssociation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "The origin request policy determines which values (e.g., headers, cookies)\nare included in requests that CloudFront sends to the origin.",
            "stability": "stable",
            "summary": "The origin request policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 701
          },
          "name": "originRequestPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Set this to true to indicate you want to distribute media files in the Microsoft Smooth Streaming format using this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 708
          },
          "name": "smoothStreaming",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no KeyGroups are associated with cache behavior",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html",
            "stability": "stable",
            "summary": "A list of Key Groups that CloudFront can use to validate signed URLs or signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 738
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ViewerProtocolPolicy.ALLOW_ALL",
            "stability": "stable",
            "summary": "The protocol that viewers can use to access the files controlled by this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 715
          },
          "name": "viewerProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.AliasConfiguration": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "deprecated": "see {@link CloudFrontWebDistributionProps#viewerCertificate} with {@link ViewerCertificate#acmCertificate}",
        "remarks": "CloudFront can use a custom domain that you provide instead of a\n\"cloudfront.net\" domain. To use this feature you must provide the list of\nadditional domains, and the ACM Certificate that CloudFront should use for\nthese additional domains.",
        "stability": "deprecated",
        "summary": "Configuration for custom domain names."
      },
      "fqn": "@aws-cdk/aws-cloudfront.AliasConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 58
      },
      "name": "AliasConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "ARN of an AWS Certificate Manager (ACM) certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 62
          },
          "name": "acmCertRef",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Both main domain name and Subject Alternative Names.",
            "stability": "deprecated",
            "summary": "Domain names on the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 69
          },
          "name": "names",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SSLv3 if sslMethod VIP, TLSv1 if sslMethod SNI",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "deprecated",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 89
          },
          "name": "securityPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SSLMethod.SNI",
            "remarks": "See the notes on SSLMethod if you wish to use other SSL termination types.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html",
            "stability": "deprecated",
            "summary": "How CloudFront should serve HTTPS requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 79
          },
          "name": "sslMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SSLMethod"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.AllowedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The HTTP methods that the Behavior will accept requests on."
      },
      "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 547
      },
      "name": "AllowedMethods",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "All supported HTTP methods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 553
          },
          "name": "ALLOW_ALL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD and GET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 549
          },
          "name": "ALLOW_GET_HEAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD, GET, and OPTIONS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 551
          },
          "name": "ALLOW_GET_HEAD_OPTIONS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AllowedMethods"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP methods supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 556
          },
          "name": "methods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.Behavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A CloudFront behavior wrapper."
      },
      "fqn": "@aws-cdk/aws-cloudfront.Behavior",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 355
      },
      "name": "Behavior",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "GET_HEAD",
            "stability": "stable",
            "summary": "The method this CloudFront distribution responds do."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 405
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "GET_HEAD",
            "stability": "stable",
            "summary": "Which methods are cached by CloudFront by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 419
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedCachedMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If CloudFront should automatically compress some content types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 362
          },
          "name": "compress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "86400 (1 day)",
            "remarks": "This value applies only when your custom origin does not add HTTP headers,\nsuch as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects.",
            "stability": "stable",
            "summary": "The default amount of time CloudFront will cache an object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 398
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none (no cookies - no headers)",
            "stability": "stable",
            "summary": "The values CloudFront will forward to the origin when making a request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 427
          },
          "name": "forwardedValues",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no functions will be invoked",
            "stability": "stable",
            "summary": "The CloudFront functions to invoke before serving the contents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 455
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.FunctionAssociation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You must specify exactly one default distribution per CloudFront distribution.\nThe default behavior is allowed to omit the \"path\" property.",
            "stability": "stable",
            "summary": "If this behavior is the default behavior for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 370
          },
          "name": "isDefaultBehavior",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No lambda function associated",
            "stability": "stable",
            "summary": "Declares associated lambda@edge functions for this distribution behaviour."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 448
          },
          "name": "lambdaFunctionAssociations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.LambdaFunctionAssociation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(31536000) (one year)",
            "stability": "stable",
            "summary": "The max amount of time you want objects to stay in the cache before CloudFront queries your origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 441
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The minimum amount of time that you want objects to stay in the cache before CloudFront queries your origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 433
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Required for all non-default behaviors. (The default behavior implicitly has \"*\" as the path pattern. )",
            "stability": "stable",
            "summary": "The path this behavior responds to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 412
          },
          "name": "pathPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no KeyGroups are associated with cache behavior",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html",
            "stability": "stable",
            "summary": "A list of Key Groups that CloudFront can use to validate signed URLs or signed cookies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 387
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- We recommend using trustedKeyGroups instead of trustedSigners.",
            "remarks": "The signers are the account IDs that are allowed to sign cookies/presigned URLs for this distribution.\n\nIf you pass a non empty value, all requests for this behavior must be signed (no public access will be allowed)",
            "stability": "deprecated",
            "summary": "Trusted signers is how CloudFront allows you to serve private content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 379
          },
          "name": "trustedSigners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the distribution wide viewer protocol policy will be used",
            "stability": "stable",
            "summary": "The viewer policy for this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 462
          },
          "name": "viewerProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.BehaviorOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for creating a new behavior."
      },
      "fqn": "@aws-cdk/aws-cloudfront.BehaviorOptions",
      "interfaces": [
        "@aws-cdk/aws-cloudfront.AddBehaviorOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 744
      },
      "name": "BehaviorOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The origin that you want CloudFront to route requests to when they match this behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 748
          },
          "name": "origin",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CacheCookieBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 179
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 189
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `cookies` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 194
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "cookies",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All cookies except the provided `cookies` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 205
          },
          "name": "denyList",
          "parameters": [
            {
              "name": "cookies",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 184
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "CacheCookieBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of cookies: allow all, none, an allow list, or a deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 213
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The cookies to allow or deny, if the behavior is an allow or deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 215
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CacheHeaderBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 226
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Listed headers are included in the cache key and are automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 230
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "headers",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 228
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "CacheHeaderBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "If no headers will be passed, or an allow list of headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 238
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The headers for the allow/deny list, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 240
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CachePolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::CachePolicy"
        },
        "stability": "stable",
        "summary": "A Cache Policy configuration."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CachePolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/cache-policy.ts",
          "line": 123
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CachePolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.ICachePolicy"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 89
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Cache Policy from its id."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 108
          },
          "name": "fromCachePolicyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "cachePolicyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
            }
          },
          "static": true
        }
      ],
      "name": "CachePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "This policy is useful for dynamic content and for requests that are not cacheable.",
            "stability": "stable",
            "summary": "Disables caching."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 103
          },
          "name": "CACHING_DISABLED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Query strings and cookies are not included in the cache key, and only the normalized 'Accept-Encoding' header is included.",
            "stability": "stable",
            "summary": "Optimize cache efficiency by minimizing the values that CloudFront includes in the cache key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 95
          },
          "name": "CACHING_OPTIMIZED",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Query strings and cookies are not included in the cache key, and only the normalized 'Accept-Encoding' header is included.\nDisables cache compression.",
            "stability": "stable",
            "summary": "Optimize cache efficiency by minimizing the values that CloudFront includes in the cache key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 101
          },
          "name": "CACHING_OPTIMIZED_FOR_UNCOMPRESSED_OBJECTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Designed for use with an origin that is an AWS Elemental MediaPackage endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 105
          },
          "name": "ELEMENTAL_MEDIA_PACKAGE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 121
          },
          "name": "cachePolicyId",
          "overrides": "@aws-cdk/aws-cloudfront.ICachePolicy",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CachePolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Cache Policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CachePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 19
      },
      "name": "CachePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "remarks": "The name must only include '-', '_', or alphanumeric characters.",
            "stability": "stable",
            "summary": "A unique name to identify the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 25
          },
          "name": "cachePolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 31
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CacheCookieBehavior.none()",
            "stability": "stable",
            "summary": "Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 57
          },
          "name": "cookieBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CacheCookieBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The greater of 1 day and ``minTtl``",
            "remarks": "Only used when the origin does not send Cache-Control or Expires headers with the object.",
            "stability": "stable",
            "summary": "The default amount of time for objects to stay in the CloudFront cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 38
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to normalize and include the `Accept-Encoding` header in the cache key when the `Accept-Encoding` header is 'br'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 81
          },
          "name": "enableAcceptEncodingBrotli",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to normalize and include the `Accept-Encoding` header in the cache key when the `Accept-Encoding` header is 'gzip'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 75
          },
          "name": "enableAcceptEncodingGzip",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CacheHeaderBehavior.none()",
            "stability": "stable",
            "summary": "Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 63
          },
          "name": "headerBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CacheHeaderBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The greater of 1 year and ``defaultTtl``",
            "remarks": "CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object.",
            "stability": "stable",
            "summary": "The maximum amount of time for objects to stay in the CloudFront cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 51
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "stability": "stable",
            "summary": "The minimum amount of time for objects to stay in the CloudFront cache."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 44
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CacheQueryStringBehavior.none()",
            "stability": "stable",
            "summary": "Determines whether any query strings are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 69
          },
          "name": "queryStringBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 252
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 262
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `queryStrings` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 267
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "queryStrings",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All query strings except the provided `queryStrings` are included in the cache key and automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 278
          },
          "name": "denyList",
          "parameters": [
            {
              "name": "queryStrings",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 257
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CacheQueryStringBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "CacheQueryStringBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of query strings -- allow all, none, only an allow list, or a deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 286
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The query strings to allow or deny, if the behavior is an allow or deny list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 288
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CachedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The HTTP methods that the Behavior will cache requests on."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CachedMethods",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 564
      },
      "name": "CachedMethods",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD and GET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 566
          },
          "name": "CACHE_GET_HEAD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CachedMethods"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "HEAD, GET, and OPTIONS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 568
          },
          "name": "CACHE_GET_HEAD_OPTIONS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CachedMethods"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP methods supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 571
          },
          "name": "methods",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::CachePolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::CachePolicy`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::CachePolicy`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 127
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 142
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 153
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCachePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 83
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 107
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 112
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 147
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html#cfn-cloudfront-cachepolicy-cachepolicyconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::CachePolicy.CachePolicyConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 118
          },
          "name": "cachePolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 163
      },
      "name": "CachePolicyConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-defaultttl"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CachePolicyConfigProperty.DefaultTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 173
          },
          "name": "defaultTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-maxttl"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CachePolicyConfigProperty.MaxTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 178
          },
          "name": "maxTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-minttl"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CachePolicyConfigProperty.MinTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 183
          },
          "name": "minTtl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-name"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CachePolicyConfigProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 188
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-parametersincachekeyandforwardedtoorigin"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CachePolicyConfigProperty.ParametersInCacheKeyAndForwardedToOrigin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 193
          },
          "name": "parametersInCacheKeyAndForwardedToOrigin",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cachepolicyconfig.html#cfn-cloudfront-cachepolicy-cachepolicyconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CachePolicyConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 168
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.CookiesConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cookiesconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CookiesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 270
      },
      "name": "CookiesConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cookiesconfig.html#cfn-cloudfront-cachepolicy-cookiesconfig-cookiebehavior"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CookiesConfigProperty.CookieBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 275
          },
          "name": "cookieBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-cookiesconfig.html#cfn-cloudfront-cachepolicy-cookiesconfig-cookies"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.CookiesConfigProperty.Cookies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 280
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.HeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-headersconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.HeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 341
      },
      "name": "HeadersConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-headersconfig.html#cfn-cloudfront-cachepolicy-headersconfig-headerbehavior"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.HeadersConfigProperty.HeaderBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 346
          },
          "name": "headerBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-headersconfig.html#cfn-cloudfront-cachepolicy-headersconfig-headers"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.HeadersConfigProperty.Headers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 351
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 412
      },
      "name": "ParametersInCacheKeyAndForwardedToOriginProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-cookiesconfig"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty.CookiesConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 417
          },
          "name": "cookiesConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CookiesConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-enableacceptencodinggzip"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty.EnableAcceptEncodingGzip`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 427
          },
          "name": "enableAcceptEncodingGzip",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-headersconfig"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty.HeadersConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 432
          },
          "name": "headersConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.HeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-querystringsconfig"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty.QueryStringsConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 437
          },
          "name": "queryStringsConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.QueryStringsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin.html#cfn-cloudfront-cachepolicy-parametersincachekeyandforwardedtoorigin-enableacceptencodingbrotli"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.ParametersInCacheKeyAndForwardedToOriginProperty.EnableAcceptEncodingBrotli`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 422
          },
          "name": "enableAcceptEncodingBrotli",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicy.QueryStringsConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-querystringsconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.QueryStringsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 510
      },
      "name": "QueryStringsConfigProperty",
      "namespace": "CfnCachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-querystringsconfig.html#cfn-cloudfront-cachepolicy-querystringsconfig-querystringbehavior"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.QueryStringsConfigProperty.QueryStringBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 515
          },
          "name": "queryStringBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachepolicy-querystringsconfig.html#cfn-cloudfront-cachepolicy-querystringsconfig-querystrings"
            },
            "stability": "external",
            "summary": "`CfnCachePolicy.QueryStringsConfigProperty.QueryStrings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 520
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCachePolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::CachePolicy`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 17
      },
      "name": "CfnCachePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html#cfn-cloudfront-cachepolicy-cachepolicyconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::CachePolicy.CachePolicyConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 23
          },
          "name": "cachePolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCachePolicy.CachePolicyConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::CloudFrontOriginAccessIdentity`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::CloudFrontOriginAccessIdentity`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 692
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 644
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 707
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 718
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCloudFrontOriginAccessIdentity",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 648
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 672
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "S3CanonicalUserId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 677
          },
          "name": "attrS3CanonicalUserId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 712
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 683
          },
          "name": "cloudFrontOriginAccessIdentityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 728
      },
      "name": "CloudFrontOriginAccessIdentityConfigProperty",
      "namespace": "CfnCloudFrontOriginAccessIdentity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 733
          },
          "name": "comment",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentityProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::CloudFrontOriginAccessIdentity`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 582
      },
      "name": "CfnCloudFrontOriginAccessIdentityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 588
          },
          "name": "cloudFrontOriginAccessIdentityConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::Distribution",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::Distribution`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::Distribution`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 917
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 863
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 933
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 945
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDistribution",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 867
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 891
          },
          "name": "attrDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 896
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 938
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-tags"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Distribution.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 908
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-distributionconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Distribution.DistributionConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 902
          },
          "name": "distributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CacheBehaviorProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CacheBehaviorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 955
      },
      "name": "CacheBehaviorProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-pathpattern"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.PathPattern`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1020
          },
          "name": "pathPattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-targetoriginid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.TargetOriginId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1035
          },
          "name": "targetOriginId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-viewerprotocolpolicy"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.ViewerProtocolPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1050
          },
          "name": "viewerProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-allowedmethods"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.AllowedMethods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 960
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-cachedmethods"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.CachedMethods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 970
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-cachepolicyid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.CachePolicyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 965
          },
          "name": "cachePolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-compress"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.Compress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 975
          },
          "name": "compress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-defaultttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.DefaultTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 980
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-fieldlevelencryptionid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.FieldLevelEncryptionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 985
          },
          "name": "fieldLevelEncryptionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-forwardedvalues"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.ForwardedValues`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 990
          },
          "name": "forwardedValues",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-functionassociations"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.FunctionAssociations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 995
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-lambdafunctionassociations"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.LambdaFunctionAssociations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1000
          },
          "name": "lambdaFunctionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-maxttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.MaxTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1005
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-minttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.MinTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1010
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-originrequestpolicyid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.OriginRequestPolicyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1015
          },
          "name": "originRequestPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-realtimelogconfigarn"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.RealtimeLogConfigArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1025
          },
          "name": "realtimeLogConfigArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-smoothstreaming"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.SmoothStreaming`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1030
          },
          "name": "smoothStreaming",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-trustedkeygroups"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.TrustedKeyGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1040
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cachebehavior.html#cfn-cloudfront-distribution-cachebehavior-trustedsigners"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CacheBehaviorProperty.TrustedSigners`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1045
          },
          "name": "trustedSigners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CookiesProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cookies.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CookiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1164
      },
      "name": "CookiesProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cookies.html#cfn-cloudfront-distribution-cookies-forward"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CookiesProperty.Forward`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1169
          },
          "name": "forward",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-cookies.html#cfn-cloudfront-distribution-cookies-whitelistednames"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CookiesProperty.WhitelistedNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1174
          },
          "name": "whitelistedNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1235
      },
      "name": "CustomErrorResponseProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-errorcode"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomErrorResponseProperty.ErrorCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1245
          },
          "name": "errorCode",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-errorcachingminttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomErrorResponseProperty.ErrorCachingMinTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1240
          },
          "name": "errorCachingMinTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-responsecode"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomErrorResponseProperty.ResponseCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1250
          },
          "name": "responseCode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customerrorresponse.html#cfn-cloudfront-distribution-customerrorresponse-responsepagepath"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomErrorResponseProperty.ResponsePagePath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1255
          },
          "name": "responsePagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1322
      },
      "name": "CustomOriginConfigProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originprotocolpolicy"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomOriginConfigProperty.OriginProtocolPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1342
          },
          "name": "originProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-httpport"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomOriginConfigProperty.HTTPPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1327
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-httpsport"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomOriginConfigProperty.HTTPSPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1332
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originkeepalivetimeout"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomOriginConfigProperty.OriginKeepaliveTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1337
          },
          "name": "originKeepaliveTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originreadtimeout"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomOriginConfigProperty.OriginReadTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1347
          },
          "name": "originReadTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-customoriginconfig.html#cfn-cloudfront-distribution-customoriginconfig-originsslprotocols"
            },
            "stability": "external",
            "summary": "`CfnDistribution.CustomOriginConfigProperty.OriginSSLProtocols`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1352
          },
          "name": "originSslProtocols",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.DefaultCacheBehaviorProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DefaultCacheBehaviorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1425
      },
      "name": "DefaultCacheBehaviorProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-targetoriginid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.TargetOriginId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1500
          },
          "name": "targetOriginId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-viewerprotocolpolicy"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.ViewerProtocolPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1515
          },
          "name": "viewerProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-allowedmethods"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.AllowedMethods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1430
          },
          "name": "allowedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-cachedmethods"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.CachedMethods`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1440
          },
          "name": "cachedMethods",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-cachepolicyid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.CachePolicyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1435
          },
          "name": "cachePolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-compress"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.Compress`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1445
          },
          "name": "compress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-defaultttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.DefaultTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1450
          },
          "name": "defaultTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-fieldlevelencryptionid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.FieldLevelEncryptionId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1455
          },
          "name": "fieldLevelEncryptionId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-forwardedvalues"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.ForwardedValues`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1460
          },
          "name": "forwardedValues",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-functionassociations"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.FunctionAssociations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1465
          },
          "name": "functionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-lambdafunctionassociations"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.LambdaFunctionAssociations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1470
          },
          "name": "lambdaFunctionAssociations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-maxttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.MaxTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1475
          },
          "name": "maxTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-minttl"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.MinTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1480
          },
          "name": "minTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-originrequestpolicyid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.OriginRequestPolicyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1485
          },
          "name": "originRequestPolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-realtimelogconfigarn"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.RealtimeLogConfigArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1490
          },
          "name": "realtimeLogConfigArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-smoothstreaming"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.SmoothStreaming`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1495
          },
          "name": "smoothStreaming",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-trustedkeygroups"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.TrustedKeyGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1505
          },
          "name": "trustedKeyGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-trustedsigners"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DefaultCacheBehaviorProperty.TrustedSigners`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1510
          },
          "name": "trustedSigners",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1625
      },
      "name": "DistributionConfigProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-enabled"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1670
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-aliases"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.Aliases`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1630
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-cachebehaviors"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.CacheBehaviors`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1640
          },
          "name": "cacheBehaviors",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CacheBehaviorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-cnames"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.CNAMEs`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1635
          },
          "name": "cnamEs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1645
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-customerrorresponses"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.CustomErrorResponses`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1650
          },
          "name": "customErrorResponses",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-customorigin"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.CustomOrigin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1655
          },
          "name": "customOrigin",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyCustomOriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-defaultcachebehavior"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.DefaultCacheBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1660
          },
          "name": "defaultCacheBehavior",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DefaultCacheBehaviorProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-defaultrootobject"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.DefaultRootObject`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1665
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-httpversion"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.HttpVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1675
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-ipv6enabled"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.IPV6Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1680
          },
          "name": "ipv6Enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-logging"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.Logging`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1685
          },
          "name": "logging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LoggingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-origingroups"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.OriginGroups`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1690
          },
          "name": "originGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-origins"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.Origins`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1695
          },
          "name": "origins",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-priceclass"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.PriceClass`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1700
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.Restrictions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1705
          },
          "name": "restrictions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.RestrictionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-s3origin"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.S3Origin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1710
          },
          "name": "s3Origin",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyS3OriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-viewercertificate"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.ViewerCertificate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1715
          },
          "name": "viewerCertificate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-webaclid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.DistributionConfigProperty.WebACLId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1720
          },
          "name": "webAclId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ForwardedValuesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1832
      },
      "name": "ForwardedValuesProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-querystring"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ForwardedValuesProperty.QueryString`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1847
          },
          "name": "queryString",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-cookies"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ForwardedValuesProperty.Cookies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1837
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CookiesProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-headers"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ForwardedValuesProperty.Headers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1842
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html#cfn-cloudfront-distribution-forwardedvalues-querystringcachekeys"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ForwardedValuesProperty.QueryStringCacheKeys`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1852
          },
          "name": "queryStringCacheKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-functionassociation.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.FunctionAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1919
      },
      "name": "FunctionAssociationProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-functionassociation.html#cfn-cloudfront-distribution-functionassociation-eventtype"
            },
            "stability": "external",
            "summary": "`CfnDistribution.FunctionAssociationProperty.EventType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1924
          },
          "name": "eventType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-functionassociation.html#cfn-cloudfront-distribution-functionassociation-functionarn"
            },
            "stability": "external",
            "summary": "`CfnDistribution.FunctionAssociationProperty.FunctionARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1929
          },
          "name": "functionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.GeoRestrictionProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-georestriction.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.GeoRestrictionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 1989
      },
      "name": "GeoRestrictionProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-georestriction.html#cfn-cloudfront-distribution-georestriction-restrictiontype"
            },
            "stability": "external",
            "summary": "`CfnDistribution.GeoRestrictionProperty.RestrictionType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1999
          },
          "name": "restrictionType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-georestriction.html#cfn-cloudfront-distribution-georestriction-locations"
            },
            "stability": "external",
            "summary": "`CfnDistribution.GeoRestrictionProperty.Locations`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 1994
          },
          "name": "locations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LambdaFunctionAssociationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2060
      },
      "name": "LambdaFunctionAssociationProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html#cfn-cloudfront-distribution-lambdafunctionassociation-eventtype"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LambdaFunctionAssociationProperty.EventType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2065
          },
          "name": "eventType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html#cfn-cloudfront-distribution-lambdafunctionassociation-includebody"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LambdaFunctionAssociationProperty.IncludeBody`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2070
          },
          "name": "includeBody",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-lambdafunctionassociation.html#cfn-cloudfront-distribution-lambdafunctionassociation-lambdafunctionarn"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LambdaFunctionAssociationProperty.LambdaFunctionARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2075
          },
          "name": "lambdaFunctionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyCustomOriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyCustomOriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2138
      },
      "name": "LegacyCustomOriginProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-dnsname"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.DNSName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2143
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-originprotocolpolicy"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.OriginProtocolPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2158
          },
          "name": "originProtocolPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-originsslprotocols"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.OriginSSLProtocols`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2163
          },
          "name": "originSslProtocols",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-httpport"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.HTTPPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2148
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-httpsport"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyCustomOriginProperty.HTTPSPort`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2153
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyS3OriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacys3origin.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LegacyS3OriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2235
      },
      "name": "LegacyS3OriginProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacys3origin.html#cfn-cloudfront-distribution-legacys3origin-dnsname"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyS3OriginProperty.DNSName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2240
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacys3origin.html#cfn-cloudfront-distribution-legacys3origin-originaccessidentity"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LegacyS3OriginProperty.OriginAccessIdentity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2245
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.LoggingProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.LoggingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2306
      },
      "name": "LoggingProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html#cfn-cloudfront-distribution-logging-bucket"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LoggingProperty.Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2311
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html#cfn-cloudfront-distribution-logging-includecookies"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LoggingProperty.IncludeCookies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2316
          },
          "name": "includeCookies",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-logging.html#cfn-cloudfront-distribution-logging-prefix"
            },
            "stability": "external",
            "summary": "`CfnDistribution.LoggingProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2321
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginCustomHeaderProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origincustomheader.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginCustomHeaderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2513
      },
      "name": "OriginCustomHeaderProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origincustomheader.html#cfn-cloudfront-distribution-origincustomheader-headername"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginCustomHeaderProperty.HeaderName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2518
          },
          "name": "headerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origincustomheader.html#cfn-cloudfront-distribution-origincustomheader-headervalue"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginCustomHeaderProperty.HeaderValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2523
          },
          "name": "headerValue",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupfailovercriteria.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2666
      },
      "name": "OriginGroupFailoverCriteriaProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupfailovercriteria.html#cfn-cloudfront-distribution-origingroupfailovercriteria-statuscodes"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupFailoverCriteriaProperty.StatusCodes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2671
          },
          "name": "statusCodes",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.StatusCodesProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMemberProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmember.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMemberProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2729
      },
      "name": "OriginGroupMemberProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmember.html#cfn-cloudfront-distribution-origingroupmember-originid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupMemberProperty.OriginId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2734
          },
          "name": "originId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMembersProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmembers.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMembersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2792
      },
      "name": "OriginGroupMembersProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmembers.html#cfn-cloudfront-distribution-origingroupmembers-items"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupMembersProperty.Items`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2797
          },
          "name": "items",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMemberProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroupmembers.html#cfn-cloudfront-distribution-origingroupmembers-quantity"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupMembersProperty.Quantity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2802
          },
          "name": "quantity",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2585
      },
      "name": "OriginGroupProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html#cfn-cloudfront-distribution-origingroup-failovercriteria"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupProperty.FailoverCriteria`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2590
          },
          "name": "failoverCriteria",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupFailoverCriteriaProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html#cfn-cloudfront-distribution-origingroup-id"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2595
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroup.html#cfn-cloudfront-distribution-origingroup-members"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupProperty.Members`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2600
          },
          "name": "members",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupMembersProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroups.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2864
      },
      "name": "OriginGroupsProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroups.html#cfn-cloudfront-distribution-origingroups-quantity"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupsProperty.Quantity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2874
          },
          "name": "quantity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origingroups.html#cfn-cloudfront-distribution-origingroups-items"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginGroupsProperty.Items`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2869
          },
          "name": "items",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginGroupProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2385
      },
      "name": "OriginProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-domainname"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2405
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-id"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.Id`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2410
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-connectionattempts"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.ConnectionAttempts`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2390
          },
          "name": "connectionAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-connectiontimeout"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.ConnectionTimeout`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2395
          },
          "name": "connectionTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-customoriginconfig"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.CustomOriginConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2400
          },
          "name": "customOriginConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-origincustomheaders"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.OriginCustomHeaders`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2415
          },
          "name": "originCustomHeaders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginCustomHeaderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originpath"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.OriginPath`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2420
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originshield"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.OriginShield`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2425
          },
          "name": "originShield",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginShieldProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-s3originconfig"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginProperty.S3OriginConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2430
          },
          "name": "s3OriginConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.OriginShieldProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-originshield.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginShieldProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 2935
      },
      "name": "OriginShieldProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-originshield.html#cfn-cloudfront-distribution-originshield-enabled"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginShieldProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2940
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-originshield.html#cfn-cloudfront-distribution-originshield-originshieldregion"
            },
            "stability": "external",
            "summary": "`CfnDistribution.OriginShieldProperty.OriginShieldRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 2945
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.RestrictionsProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-restrictions.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.RestrictionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3005
      },
      "name": "RestrictionsProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-restrictions.html#cfn-cloudfront-distribution-restrictions-georestriction"
            },
            "stability": "external",
            "summary": "`CfnDistribution.RestrictionsProperty.GeoRestriction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3010
          },
          "name": "geoRestriction",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.GeoRestrictionProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-s3originconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3068
      },
      "name": "S3OriginConfigProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-s3originconfig.html#cfn-cloudfront-distribution-s3originconfig-originaccessidentity"
            },
            "stability": "external",
            "summary": "`CfnDistribution.S3OriginConfigProperty.OriginAccessIdentity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3073
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.StatusCodesProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-statuscodes.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.StatusCodesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3130
      },
      "name": "StatusCodesProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-statuscodes.html#cfn-cloudfront-distribution-statuscodes-items"
            },
            "stability": "external",
            "summary": "`CfnDistribution.StatusCodesProperty.Items`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3135
          },
          "name": "items",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "number"
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-statuscodes.html#cfn-cloudfront-distribution-statuscodes-quantity"
            },
            "stability": "external",
            "summary": "`CfnDistribution.StatusCodesProperty.Quantity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3140
          },
          "name": "quantity",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3202
      },
      "name": "ViewerCertificateProperty",
      "namespace": "CfnDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-acmcertificatearn"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ViewerCertificateProperty.AcmCertificateArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3207
          },
          "name": "acmCertificateArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-cloudfrontdefaultcertificate"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ViewerCertificateProperty.CloudFrontDefaultCertificate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3212
          },
          "name": "cloudFrontDefaultCertificate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-iamcertificateid"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ViewerCertificateProperty.IamCertificateId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3217
          },
          "name": "iamCertificateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-minimumprotocolversion"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ViewerCertificateProperty.MinimumProtocolVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3222
          },
          "name": "minimumProtocolVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-viewercertificate.html#cfn-cloudfront-distribution-viewercertificate-sslsupportmethod"
            },
            "stability": "external",
            "summary": "`CfnDistribution.ViewerCertificateProperty.SslSupportMethod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3227
          },
          "name": "sslSupportMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnDistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::Distribution`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnDistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 792
      },
      "name": "CfnDistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-distributionconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Distribution.DistributionConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 798
          },
          "name": "distributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.DistributionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-tags"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Distribution.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 804
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnFunction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::Function",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::Function`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunction",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::Function`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 3472
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3395
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3492
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3507
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFunction",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3399
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionARN"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3423
          },
          "name": "attrFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionMetadata.FunctionARN"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3428
          },
          "name": "attrFunctionMetadataFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Stage"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3433
          },
          "name": "attrStage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3497
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-name"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.Name`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3439
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-autopublish"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.AutoPublish`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3445
          },
          "name": "autoPublish",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functioncode"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.FunctionCode`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3451
          },
          "name": "functionCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.FunctionConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3457
          },
          "name": "functionConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionmetadata"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.FunctionMetadata`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3463
          },
          "name": "functionMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3517
      },
      "name": "FunctionConfigProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionconfig.html#cfn-cloudfront-function-functionconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnFunction.FunctionConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3522
          },
          "name": "comment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionconfig.html#cfn-cloudfront-function-functionconfig-runtime"
            },
            "stability": "external",
            "summary": "`CfnFunction.FunctionConfigProperty.Runtime`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3527
          },
          "name": "runtime",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionmetadata.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3589
      },
      "name": "FunctionMetadataProperty",
      "namespace": "CfnFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-function-functionmetadata.html#cfn-cloudfront-function-functionmetadata-functionarn"
            },
            "stability": "external",
            "summary": "`CfnFunction.FunctionMetadataProperty.FunctionARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3594
          },
          "name": "functionArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnFunctionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::Function`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnFunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3297
      },
      "name": "CfnFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-name"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3303
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-autopublish"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.AutoPublish`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3309
          },
          "name": "autoPublish",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functioncode"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.FunctionCode`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3315
          },
          "name": "functionCode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.FunctionConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3321
          },
          "name": "functionConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionmetadata"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::Function.FunctionMetadata`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3327
          },
          "name": "functionMetadata",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnFunction.FunctionMetadataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnKeyGroup": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::KeyGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::KeyGroup`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::KeyGroup`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 3762
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3714
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3777
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3788
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnKeyGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3718
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3742
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3747
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3782
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html#cfn-cloudfront-keygroup-keygroupconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::KeyGroup.KeyGroupConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3753
          },
          "name": "keyGroupConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3798
      },
      "name": "KeyGroupConfigProperty",
      "namespace": "CfnKeyGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html#cfn-cloudfront-keygroup-keygroupconfig-items"
            },
            "stability": "external",
            "summary": "`CfnKeyGroup.KeyGroupConfigProperty.Items`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3808
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html#cfn-cloudfront-keygroup-keygroupconfig-name"
            },
            "stability": "external",
            "summary": "`CfnKeyGroup.KeyGroupConfigProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3813
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-keygroup-keygroupconfig.html#cfn-cloudfront-keygroup-keygroupconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnKeyGroup.KeyGroupConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3803
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnKeyGroupProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::KeyGroup`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3652
      },
      "name": "CfnKeyGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html#cfn-cloudfront-keygroup-keygroupconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::KeyGroup.KeyGroupConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3658
          },
          "name": "keyGroupConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnKeyGroup.KeyGroupConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::OriginRequestPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::OriginRequestPolicy`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::OriginRequestPolicy`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 3989
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3941
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4004
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4015
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnOriginRequestPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3945
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3969
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "LastModifiedTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3974
          },
          "name": "attrLastModifiedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4009
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::OriginRequestPolicy.OriginRequestPolicyConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3980
          },
          "name": "originRequestPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-cookiesconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4025
      },
      "name": "CookiesConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-cookiesconfig.html#cfn-cloudfront-originrequestpolicy-cookiesconfig-cookiebehavior"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.CookiesConfigProperty.CookieBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4030
          },
          "name": "cookieBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-cookiesconfig.html#cfn-cloudfront-originrequestpolicy-cookiesconfig-cookies"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.CookiesConfigProperty.Cookies`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4035
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-headersconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4096
      },
      "name": "HeadersConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-headersconfig.html#cfn-cloudfront-originrequestpolicy-headersconfig-headerbehavior"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.HeadersConfigProperty.HeaderBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4101
          },
          "name": "headerBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-headersconfig.html#cfn-cloudfront-originrequestpolicy-headersconfig-headers"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.HeadersConfigProperty.Headers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4106
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4167
      },
      "name": "OriginRequestPolicyConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-cookiesconfig"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty.CookiesConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4177
          },
          "name": "cookiesConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.CookiesConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-headersconfig"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty.HeadersConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4182
          },
          "name": "headersConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.HeadersConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-name"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4187
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-querystringsconfig"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty.QueryStringsConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4192
          },
          "name": "queryStringsConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-originrequestpolicyconfig.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4172
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-querystringsconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.QueryStringsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4265
      },
      "name": "QueryStringsConfigProperty",
      "namespace": "CfnOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-querystringsconfig.html#cfn-cloudfront-originrequestpolicy-querystringsconfig-querystringbehavior"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.QueryStringsConfigProperty.QueryStringBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4270
          },
          "name": "queryStringBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-originrequestpolicy-querystringsconfig.html#cfn-cloudfront-originrequestpolicy-querystringsconfig-querystrings"
            },
            "stability": "external",
            "summary": "`CfnOriginRequestPolicy.QueryStringsConfigProperty.QueryStrings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4275
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::OriginRequestPolicy`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 3879
      },
      "name": "CfnOriginRequestPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::OriginRequestPolicy.OriginRequestPolicyConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 3885
          },
          "name": "originRequestPolicyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnOriginRequestPolicy.OriginRequestPolicyConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnPublicKey": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::PublicKey",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::PublicKey`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::PublicKey`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 4447
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKeyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4399
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4462
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4473
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPublicKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4403
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatedTime"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4427
          },
          "name": "attrCreatedTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4432
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4467
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html#cfn-cloudfront-publickey-publickeyconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::PublicKey.PublicKeyConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4438
          },
          "name": "publicKeyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4483
      },
      "name": "PublicKeyConfigProperty",
      "namespace": "CfnPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-callerreference"
            },
            "stability": "external",
            "summary": "`CfnPublicKey.PublicKeyConfigProperty.CallerReference`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4488
          },
          "name": "callerReference",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-encodedkey"
            },
            "stability": "external",
            "summary": "`CfnPublicKey.PublicKeyConfigProperty.EncodedKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4498
          },
          "name": "encodedKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-name"
            },
            "stability": "external",
            "summary": "`CfnPublicKey.PublicKeyConfigProperty.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4503
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-publickey-publickeyconfig.html#cfn-cloudfront-publickey-publickeyconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnPublicKey.PublicKeyConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4493
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnPublicKeyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::PublicKey`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKeyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4337
      },
      "name": "CfnPublicKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html#cfn-cloudfront-publickey-publickeyconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::PublicKey.PublicKeyConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4343
          },
          "name": "publicKeyConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnPublicKey.PublicKeyConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::RealtimeLogConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::RealtimeLogConfig`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::RealtimeLogConfig`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 4726
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4665
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4746
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4760
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRealtimeLogConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4669
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4693
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4751
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.EndPoints`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4699
          },
          "name": "endPoints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.Fields`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4705
          },
          "name": "fields",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.Name`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4711
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.SamplingRate`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4717
          },
          "name": "samplingRate",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-endpoint.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4770
      },
      "name": "EndPointProperty",
      "namespace": "CfnRealtimeLogConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-endpoint.html#cfn-cloudfront-realtimelogconfig-endpoint-kinesisstreamconfig"
            },
            "stability": "external",
            "summary": "`CfnRealtimeLogConfig.EndPointProperty.KinesisStreamConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4775
          },
          "name": "kinesisStreamConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-endpoint.html#cfn-cloudfront-realtimelogconfig-endpoint-streamtype"
            },
            "stability": "external",
            "summary": "`CfnRealtimeLogConfig.EndPointProperty.StreamType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4780
          },
          "name": "streamType",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-kinesisstreamconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.KinesisStreamConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4842
      },
      "name": "KinesisStreamConfigProperty",
      "namespace": "CfnRealtimeLogConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-kinesisstreamconfig.html#cfn-cloudfront-realtimelogconfig-kinesisstreamconfig-rolearn"
            },
            "stability": "external",
            "summary": "`CfnRealtimeLogConfig.KinesisStreamConfigProperty.RoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4847
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-realtimelogconfig-kinesisstreamconfig.html#cfn-cloudfront-realtimelogconfig-kinesisstreamconfig-streamarn"
            },
            "stability": "external",
            "summary": "`CfnRealtimeLogConfig.KinesisStreamConfigProperty.StreamArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4852
          },
          "name": "streamArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfigProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::RealtimeLogConfig`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4573
      },
      "name": "CfnRealtimeLogConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.EndPoints`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4579
          },
          "name": "endPoints",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-cloudfront.CfnRealtimeLogConfig.EndPointProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.Fields`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4585
          },
          "name": "fields",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4591
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::RealtimeLogConfig.SamplingRate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4597
          },
          "name": "samplingRate",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CloudFront::StreamingDistribution",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CloudFront::StreamingDistribution`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CloudFront::StreamingDistribution`."
        },
        "locationInModule": {
          "filename": "lib/cloudfront.generated.ts",
          "line": 5036
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4987
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5052
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5064
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnStreamingDistribution",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4991
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5015
          },
          "name": "attrDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5057
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-tags"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::StreamingDistribution.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5027
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::StreamingDistribution.StreamingDistributionConfig`."
          },
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5021
          },
          "name": "streamingDistributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.LoggingProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.LoggingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5074
      },
      "name": "LoggingProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html#cfn-cloudfront-streamingdistribution-logging-bucket"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.LoggingProperty.Bucket`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5079
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html#cfn-cloudfront-streamingdistribution-logging-enabled"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.LoggingProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5084
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-logging.html#cfn-cloudfront-streamingdistribution-logging-prefix"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.LoggingProperty.Prefix`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5089
          },
          "name": "prefix",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.S3OriginProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.S3OriginProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5155
      },
      "name": "S3OriginProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html#cfn-cloudfront-streamingdistribution-s3origin-domainname"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.S3OriginProperty.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5160
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-s3origin.html#cfn-cloudfront-streamingdistribution-s3origin-originaccessidentity"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.S3OriginProperty.OriginAccessIdentity`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5165
          },
          "name": "originAccessIdentity",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5227
      },
      "name": "StreamingDistributionConfigProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-comment"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.Comment`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5237
          },
          "name": "comment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-enabled"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5242
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-s3origin"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.S3Origin`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5257
          },
          "name": "s3Origin",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.S3OriginProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-trustedsigners"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.TrustedSigners`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5262
          },
          "name": "trustedSigners",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.TrustedSignersProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-aliases"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.Aliases`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5232
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-logging"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.Logging`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5247
          },
          "name": "logging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.LoggingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-streamingdistributionconfig.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig-priceclass"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.StreamingDistributionConfigProperty.PriceClass`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5252
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.TrustedSignersProperty": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.TrustedSignersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 5341
      },
      "name": "TrustedSignersProperty",
      "namespace": "CfnStreamingDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html#cfn-cloudfront-streamingdistribution-trustedsigners-enabled"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.TrustedSignersProperty.Enabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5351
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-streamingdistribution-trustedsigners.html#cfn-cloudfront-streamingdistribution-trustedsigners-awsaccountnumbers"
            },
            "stability": "external",
            "summary": "`CfnStreamingDistribution.TrustedSignersProperty.AwsAccountNumbers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 5346
          },
          "name": "awsAccountNumbers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CfnStreamingDistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CloudFront::StreamingDistribution`."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudfront.generated.ts",
        "line": 4915
      },
      "name": "CfnStreamingDistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::StreamingDistribution.StreamingDistributionConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4921
          },
          "name": "streamingDistributionConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-cloudfront.CfnStreamingDistribution.StreamingDistributionConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-tags"
            },
            "stability": "external",
            "summary": "`AWS::CloudFront::StreamingDistribution.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudfront.generated.ts",
            "line": 4927
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CloudFrontAllowedCachedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Enums for the methods CloudFront can cache."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedCachedMethods",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 347
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD_OPTIONS"
        }
      ],
      "name": "CloudFrontAllowedCachedMethods"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontAllowedMethods": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "An enum for the supported methods to a CloudFront distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontAllowedMethods",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 338
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "GET_HEAD_OPTIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALL"
        }
      ],
      "name": "CloudFrontAllowedMethods"
    },
    "@aws-cdk/aws-cloudfront.CloudFrontWebDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::Distribution"
        },
        "remarks": "CloudFront fronts user provided content and caches it at edge locations across the world.\n\nHere's how you can use this construct:\n\n```ts\nimport { CloudFrontWebDistribution } from '@aws-cdk/aws-cloudfront'\n\nconst sourceBucket = new Bucket(this, 'Bucket');\n\nconst distribution = new CloudFrontWebDistribution(this, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n      s3BucketSource: sourceBucket\n      },\n      behaviors : [ {isDefaultBehavior: true}]\n    }\n  ]\n});\n```\n\nThis will create a CloudFront distribution that uses your S3Bucket as it's origin.\n\nYou can customize the distribution using additional properties from the CloudFrontWebDistributionProps interface.",
        "stability": "stable",
        "summary": "Amazon CloudFront is a global content delivery network (CDN) service that securely delivers data, videos, applications, and APIs to your viewers with low latency and high transfer speeds."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistribution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/web-distribution.ts",
          "line": 814
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IDistribution"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 746
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a construct that represents an external (imported) distribution."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 751
          },
          "name": "fromDistributionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IDistribution"
            }
          },
          "static": true
        }
      ],
      "name": "CloudFrontWebDistribution",
      "properties": [
        {
          "docs": {
            "remarks": "If you are using aliases for your distribution, this is the domainName your DNS records should point to.\n(In Route53, you could create an ALIAS record to this value, for example.)",
            "stability": "stable",
            "summary": "The domain name created by CloudFront for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 786
          },
          "name": "distributionDomainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 791
          },
          "name": "distributionId",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "deprecated": "- Use `distributionDomainName` instead.",
            "remarks": "If you are using aliases for your distribution, this is the domainName your DNS records should point to.\n(In Route53, you could create an ALIAS record to this value, for example.)",
            "stability": "deprecated",
            "summary": "The domain name created by CloudFront for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 779
          },
          "name": "domainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If logging is not enabled for this distribution - this property will be undefined.",
            "stability": "stable",
            "summary": "The logging bucket for this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 770
          },
          "name": "loggingBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionAttributes": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes used to import a Distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 700
      },
      "name": "CloudFrontWebDistributionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 713
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The generated domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 706
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-cloudfront.CloudFrontWebDistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 573
      },
      "name": "CloudFrontWebDistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Behaviors are a part of the origin.",
            "stability": "stable",
            "summary": "The origin configurations for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 635
          },
          "name": "originConfigs",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.SourceConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "deprecated": "see {@link CloudFrontWebDistributionProps#viewerCertificate} with {@link ViewerCertificate#acmCertificate}",
            "stability": "deprecated",
            "summary": "AliasConfiguration is used to configured CloudFront to respond to requests on custom domain names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 581
          },
          "name": "aliasConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.AliasConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No comment is added to distribution.",
            "stability": "stable",
            "summary": "A comment for this distribution in the CloudFront console."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 588
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- \"index.html\" is served.",
            "stability": "stable",
            "summary": "The default object to serve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 602
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Enable or disable the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 595
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If your distribution should have IPv6 enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 609
          },
          "name": "enableIpV6",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom error configuration.",
            "remarks": "By default, CloudFront does not replace HTTP status codes in the 4xx and 5xx range\nwith custom error messages. CloudFront does not cache HTTP status codes.",
            "stability": "stable",
            "summary": "How CloudFront should handle requests that are not successful (eg PageNotFound)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 654
          },
          "name": "errorConfigurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomErrorResponseProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No geo restriction",
            "stability": "stable",
            "summary": "Controls the countries in which your content is distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 687
          },
          "name": "geoRestriction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpVersion.HTTP2",
            "stability": "stable",
            "summary": "The max supported HTTP Versions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 616
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.HttpVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no logging is enabled by default.",
            "remarks": "You can pass an empty object ({}) to have us auto create a bucket for logging.\nOmission of this property indicates no logging is to be enabled.",
            "stability": "stable",
            "summary": "Optional - if we should enable logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 644
          },
          "name": "loggingConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.LoggingConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PriceClass.PRICE_CLASS_100 the cheapest option for CloudFront is picked by default.",
            "stability": "stable",
            "summary": "The price class for the distribution (this impacts how many locations CloudFront uses for your distribution, and billing)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 623
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.PriceClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ViewerCertificate.fromCloudFrontDefaultCertificate()",
            "see": "https://aws.amazon.com/premiumsupport/knowledge-center/custom-ssl-certificate-cloudfront/",
            "stability": "stable",
            "summary": "Specifies whether you want viewers to use HTTP or HTTPS to request your objects, whether you're using an alternate domain name with HTTPS, and if so, if you're using AWS Certificate Manager (ACM) or a third-party certificate authority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 680
          },
          "name": "viewerCertificate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RedirectToHTTPs",
            "stability": "stable",
            "summary": "The default viewer policy for incoming clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 630
          },
          "name": "viewerProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No AWS Web Application Firewall web access control list (web ACL).",
            "remarks": "To specify a web ACL created using the latest version of AWS WAF, use the ACL ARN, for example\n`arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a`.\n\nTo specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `473e64fd-f30b-4765-81a0-62ad96dd167a`.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html#API_CreateDistribution_RequestParameters.",
            "stability": "stable",
            "summary": "Unique identifier that specifies the AWS WAF web ACL to associate with this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 669
          },
          "name": "webACLId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.CustomOriginConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A custom origin configuration."
      },
      "fqn": "@aws-cdk/aws-cloudfront.CustomOriginConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 220
      },
      "name": "CustomOriginConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Should not include the path - that should be in the parent SourceConfiguration",
            "stability": "stable",
            "summary": "The domain name of the custom origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 224
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginSslPolicy.TLS_V1_2",
            "stability": "stable",
            "summary": "The SSL versions to use when interacting with the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 266
          },
          "name": "allowedOriginSSLVersions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginSslPolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "stability": "stable",
            "summary": "The origin HTTP port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 231
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "443",
            "stability": "stable",
            "summary": "The origin HTTPS port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 238
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional headers are passed.",
            "stability": "stable",
            "summary": "Any additional headers to pass to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 280
          },
          "name": "originHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "stability": "stable",
            "summary": "The keep alive timeout when making calls in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 245
          },
          "name": "originKeepaliveTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The relative path to the origin root to use for sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 273
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginProtocolPolicy.HttpsOnly",
            "stability": "stable",
            "summary": "The protocol (http or https) policy to use when interacting with the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 252
          },
          "name": "originProtocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginProtocolPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "stability": "stable",
            "summary": "The read timeout when calling the origin in seconds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 259
          },
          "name": "originReadTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 287
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.Distribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A CloudFront distribution with associated origin(s) and caching behavior(s)."
      },
      "fqn": "@aws-cdk/aws-cloudfront.Distribution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/distribution.ts",
          "line": 259
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.DistributionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IDistribution"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 227
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a Distribution construct that represents an external (imported) distribution."
          },
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 232
          },
          "name": "fromDistributionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.DistributionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IDistribution"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a new behavior to this distribution for the given pathPattern."
          },
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 323
          },
          "name": "addBehavior",
          "parameters": [
            {
              "docs": {
                "summary": "the path pattern (e.g., 'images/*') that specifies which requests to apply the behavior to."
              },
              "name": "pathPattern",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the origin to use for this behavior."
              },
              "name": "origin",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
              }
            },
            {
              "docs": {
                "summary": "the options for the behavior at this path."
              },
              "name": "behaviorOptions",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.AddBehaviorOptions"
              }
            }
          ]
        }
      ],
      "name": "Distribution",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 248
          },
          "name": "distributionDomainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 249
          },
          "name": "distributionId",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 247
          },
          "name": "domainName",
          "overrides": "@aws-cdk/aws-cloudfront.IDistribution",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.DistributionAttributes": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes used to import a Distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.DistributionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 50
      },
      "name": "DistributionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 63
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The generated domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 56
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.DistributionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.DistributionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 74
      },
      "name": "DistributionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The default behavior for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 78
          },
          "name": "defaultBehavior",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.BehaviorOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no additional behaviors are added.",
            "stability": "stable",
            "summary": "Additional behaviors for the distribution, mapped by the pathPattern that specifies which requests to apply the behavior to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 85
          },
          "name": "additionalBehaviors",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.BehaviorOptions"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the CloudFront wildcard certificate (*.cloudfront.net) will be used.",
            "remarks": "The certificate must be located in N. Virginia (us-east-1).",
            "stability": "stable",
            "summary": "A certificate to associate with the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 92
          },
          "name": "certificate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "Any comments you want to include about the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 99
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no default root object",
            "stability": "stable",
            "summary": "The object that you want CloudFront to request from your origin (for example, index.html) when a viewer requests the root URL for your distribution. If no default object is set, the request goes to the origin's root (e.g., example.com/)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 108
          },
          "name": "defaultRootObject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The distribution will only support the default generated name (e.g., d111111abcdef8.cloudfront.net)",
            "remarks": "If you want to use your own domain name, such as www.example.com, instead of the cloudfront.net domain name,\nyou can add an alternate domain name to your distribution. If you attach a certificate to the distribution,\nyou must add (at least one of) the domain names of the certificate to this list.",
            "stability": "stable",
            "summary": "Alternative domain names for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 119
          },
          "name": "domainNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Enable or disable the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 126
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you specify false, CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses.\nThis allows viewers to submit a second request, for an IPv4 address for your distribution.",
            "stability": "stable",
            "summary": "Whether CloudFront will respond to IPv6 DNS requests with an IPv6 address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 136
          },
          "name": "enableIpv6",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false, unless `logBucket` is specified.",
            "stability": "stable",
            "summary": "Enable access logging for the distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 143
          },
          "name": "enableLogging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom error responses.",
            "stability": "stable",
            "summary": "How CloudFront should handle requests that are not successful (e.g., PageNotFound)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 211
          },
          "name": "errorResponses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.ErrorResponse"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No geographic restrictions",
            "stability": "stable",
            "summary": "Controls the countries in which your content is distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 150
          },
          "name": "geoRestriction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpVersion.HTTP2",
            "remarks": "For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support server name identification (SNI).",
            "stability": "stable",
            "summary": "Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 159
          },
          "name": "httpVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.HttpVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A bucket is created if `enableLogging` is true",
            "stability": "stable",
            "summary": "The Amazon S3 bucket to store the access logs in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 166
          },
          "name": "logBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix",
            "stability": "stable",
            "summary": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 180
          },
          "name": "logFilePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether you want CloudFront to include cookies in access logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 173
          },
          "name": "logIncludesCookies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "aws-cdk": "/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021' feature flag is set; otherwise, SecurityPolicyProtocol.TLS_V1_2_2019."
            },
            "default": "- SecurityPolicyProtocol.TLS_V1_2_2021 if the '",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "stable",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 221
          },
          "name": "minimumProtocolVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PriceClass.PRICE_CLASS_ALL",
            "remarks": "If you specify PriceClass_All, CloudFront responds to requests for your objects from all CloudFront edge locations.\nIf you specify a price class other than PriceClass_All, CloudFront serves your objects from the CloudFront edge location\nthat has the lowest latency among the edge locations in your price class.",
            "stability": "stable",
            "summary": "The price class that corresponds with the maximum price that you want to pay for CloudFront service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 190
          },
          "name": "priceClass",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.PriceClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No AWS Web Application Firewall web access control list (web ACL).",
            "remarks": "To specify a web ACL created using the latest version of AWS WAF, use the ACL ARN, for example\n`arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a`.\nTo specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `473e64fd-f30b-4765-81a0-62ad96dd167a`.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html#API_CreateDistribution_RequestParameters.",
            "stability": "stable",
            "summary": "Unique identifier that specifies the AWS WAF web ACL to associate with this CloudFront distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 204
          },
          "name": "webAclId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.EdgeLambda": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "The type of the {@link AddBehaviorOptions.edgeLambdas} property.",
        "stability": "stable",
        "summary": "Represents a Lambda function version and event type when using Lambda@Edge."
      },
      "fqn": "@aws-cdk/aws-cloudfront.EdgeLambda",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 638
      },
      "name": "EdgeLambda",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of event in response to which should the function be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 647
          },
          "name": "eventType",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.LambdaEdgeEventType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "**Note**: it's not possible to use the '$LATEST' function version for Lambda@Edge!",
            "stability": "stable",
            "summary": "The version of the Lambda function that will be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 644
          },
          "name": "functionVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only valid for \"request\" event types (`ORIGIN_REQUEST` or `VIEWER_REQUEST`).\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html",
            "stability": "stable",
            "summary": "Allows a Lambda function to have read access to the body content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 656
          },
          "name": "includeBody",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.ErrorResponse": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for configuring custom error responses."
      },
      "fqn": "@aws-cdk/aws-cloudfront.ErrorResponse",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 579
      },
      "name": "ErrorResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The HTTP status code for which you want to specify a custom error page and/or a caching duration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 589
          },
          "name": "httpStatus",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the error code will be returned as the response code.",
            "remarks": "If you specify a value for `responseHttpStatus`, you must also specify a value for `responsePagePath`.",
            "stability": "stable",
            "summary": "The HTTP status code that you want CloudFront to return to the viewer along with the custom error page."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 597
          },
          "name": "responseHttpStatus",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the default CloudFront response is shown.",
            "stability": "stable",
            "summary": "The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the `httpStatus`, for example, /4xx-errors/403-forbidden.html."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 604
          },
          "name": "responsePagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the default caching TTL behavior applies",
            "stability": "stable",
            "summary": "The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 585
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.FailoverStatusCode": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "HTTP status code to failover to second origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FailoverStatusCode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 17
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Forbidden (403)."
          },
          "name": "FORBIDDEN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Not found (404)."
          },
          "name": "NOT_FOUND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Internal Server Error (500)."
          },
          "name": "INTERNAL_SERVER_ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Bad Gateway (502)."
          },
          "name": "BAD_GATEWAY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Service Unavailable (503)."
          },
          "name": "SERVICE_UNAVAILABLE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gateway Timeout (504)."
          },
          "name": "GATEWAY_TIMEOUT"
        }
      ],
      "name": "FailoverStatusCode"
    },
    "@aws-cdk/aws-cloudfront.FileCodeOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options when reading the function's code from an external file."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FileCodeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 38
      },
      "name": "FileCodeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path of the file to read the code from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 42
          },
          "name": "filePath",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.Function": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::Function"
        },
        "stability": "stable",
        "summary": "A CloudFront Function."
      },
      "fqn": "@aws-cdk/aws-cloudfront.Function",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/function.ts",
          "line": 159
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.FunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IFunction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a function by its name and ARN."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 136
          },
          "name": "fromFunctionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.FunctionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IFunction"
            }
          },
          "static": true
        }
      ],
      "name": "Function",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "the ARN of the CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 152
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-cloudfront.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "the name of the CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 147
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-cloudfront.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "the deployment stage of the CloudFront function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 157
          },
          "name": "functionStage",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.FunctionAssociation": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "The type of the {@link AddBehaviorOptions.functionAssociations} property.",
        "stability": "stable",
        "summary": "Represents a CloudFront function and event type when using CF Functions."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionAssociation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 207
      },
      "name": "FunctionAssociation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of event which should invoke the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 214
          },
          "name": "eventType",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.FunctionEventType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CloudFront function that will be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 211
          },
          "name": "function",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IFunction"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.FunctionAttributes": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes of an existing CloudFront Function to import it."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 94
      },
      "name": "FunctionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 103
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 98
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.FunctionCode": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents the function's source code."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionCode",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "returns": "code object with contents from file.",
            "stability": "stable",
            "summary": "Code from external file for function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 25
          },
          "name": "fromFile",
          "parameters": [
            {
              "docs": {
                "summary": "the options for the external file."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.FileCodeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.FunctionCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "code object with inline code.",
            "stability": "stable",
            "summary": "Inline code for function."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 16
          },
          "name": "fromInline",
          "parameters": [
            {
              "docs": {
                "summary": "The actual function code."
              },
              "name": "code",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.FunctionCode"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "renders the function code."
          },
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 32
          },
          "name": "render",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "FunctionCode"
    },
    "@aws-cdk/aws-cloudfront.FunctionEventType": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The type of events that a CloudFront function can be invoked in response to."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionEventType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 190
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-request specifies the incoming request."
          },
          "name": "VIEWER_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-response specifies the outgoing response."
          },
          "name": "VIEWER_RESPONSE"
        }
      ],
      "name": "FunctionEventType"
    },
    "@aws-cdk/aws-cloudfront.FunctionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a CloudFront Function."
      },
      "fqn": "@aws-cdk/aws-cloudfront.FunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 109
      },
      "name": "FunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source code of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 125
          },
          "name": "code",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.FunctionCode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `functionName`",
            "stability": "stable",
            "summary": "A comment to describe the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 120
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A name to identify the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 114
          },
          "name": "functionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.GeoRestriction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Controls the countries in which content is distributed."
      },
      "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/geo-restriction.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow specific countries which you want CloudFront to distribute your content."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 13
          },
          "name": "allowlist",
          "parameters": [
            {
              "docs": {
                "remarks": "Include one element for each country.\nSee ISO 3166-1-alpha-2 code on the *International Organization for Standardization* website",
                "summary": "Two-letter, uppercase country code for a country that you want to allow."
              },
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "deprecated": "use `denylist`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 40
          },
          "name": "blacklist",
          "parameters": [
            {
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Deny specific countries which you don't want CloudFront to distribute your content."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 24
          },
          "name": "denylist",
          "parameters": [
            {
              "docs": {
                "remarks": "Include one element for each country.\nSee ISO 3166-1-alpha-2 code on the *International Organization for Standardization* website",
                "summary": "Two-letter, uppercase country code for a country that you want to deny."
              },
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "deprecated": "use `allowlist`",
            "stability": "deprecated",
            "summary": "DEPRECATED."
          },
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 32
          },
          "name": "whitelist",
          "parameters": [
            {
              "name": "locations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.GeoRestriction"
            }
          },
          "static": true,
          "variadic": true
        }
      ],
      "name": "GeoRestriction",
      "properties": [
        {
          "docs": {
            "remarks": "Include one element for each country.\nSee ISO 3166-1-alpha-2 code on the *International Organization for Standardization* website",
            "stability": "stable",
            "summary": "Two-letter, uppercase country code for a country that you want to allow/deny."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 67
          },
          "name": "locations",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specifies the restriction type to impose."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/geo-restriction.ts",
            "line": 67
          },
          "name": "restrictionType",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.HttpVersion": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Maximum HTTP version to support."
      },
      "fqn": "@aws-cdk/aws-cloudfront.HttpVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 465
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP 1.1."
          },
          "name": "HTTP1_1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP 2."
          },
          "name": "HTTP2"
        }
      ],
      "name": "HttpVersion"
    },
    "@aws-cdk/aws-cloudfront.ICachePolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Cache Policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.ICachePolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cache-policy.ts",
        "line": 8
      },
      "name": "ICachePolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the cache policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache-policy.ts",
            "line": 13
          },
          "name": "cachePolicyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.IDistribution": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Interface for CloudFront distributions."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IDistribution",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 23
      },
      "name": "IDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 37
          },
          "name": "distributionDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The distribution ID for this distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 44
          },
          "name": "distributionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "deprecated": "- Use `distributionDomainName` instead.",
            "stability": "deprecated",
            "summary": "The domain name of the Distribution, such as d111111abcdef8.cloudfront.net."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/distribution.ts",
            "line": 30
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.IFunction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a CloudFront Function."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IFunction",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/function.ts",
        "line": 77
      },
      "name": "IFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 88
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/function.ts",
            "line": 82
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.IKeyGroup": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Key Group."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/key-group.ts",
        "line": 9
      },
      "name": "IKeyGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 14
          },
          "name": "keyGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.IOrigin": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "You provide one or more origins when creating a Distribution.",
        "stability": "stable",
        "summary": "Represents the concept of a CloudFront Origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IOrigin",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 45
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The method called when a given Origin is added (for the first time) to a Distribution."
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 50
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig"
            }
          }
        }
      ],
      "name": "IOrigin"
    },
    "@aws-cdk/aws-cloudfront.IOriginAccessIdentity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Interface for CloudFront OriginAccessIdentity."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-access-identity.ts",
        "line": 21
      },
      "name": "IOriginAccessIdentity",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Origin Access Identity Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 25
          },
          "name": "originAccessIdentityName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.IOriginRequestPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Origin Request Policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 8
      },
      "name": "IOriginRequestPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 13
          },
          "name": "originRequestPolicyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.IPublicKey": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Public Key."
      },
      "fqn": "@aws-cdk/aws-cloudfront.IPublicKey",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-key.ts",
        "line": 8
      },
      "name": "IPublicKey",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 13
          },
          "name": "publicKeyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.KeyGroup": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::KeyGroup"
        },
        "stability": "stable",
        "summary": "A Key Group configuration."
      },
      "fqn": "@aws-cdk/aws-cloudfront.KeyGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/key-group.ts",
          "line": 54
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.KeyGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IKeyGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key-group.ts",
        "line": 44
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Key Group from its id."
          },
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 47
          },
          "name": "fromKeyGroupId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "keyGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IKeyGroup"
            }
          },
          "static": true
        }
      ],
      "name": "KeyGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 52
          },
          "name": "keyGroupId",
          "overrides": "@aws-cdk/aws-cloudfront.IKeyGroup",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.KeyGroupProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Public Key."
      },
      "fqn": "@aws-cdk/aws-cloudfront.KeyGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/key-group.ts",
        "line": 20
      },
      "name": "KeyGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of public keys to add to the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 36
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.IPublicKey"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 31
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A name to identify the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key-group.ts",
            "line": 25
          },
          "name": "keyGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.LambdaEdgeEventType": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "The type of events that a Lambda@Edge function can be invoked in response to."
      },
      "fqn": "@aws-cdk/aws-cloudfront.LambdaEdgeEventType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 610
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The origin-request specifies the request to the origin location (e.g. S3)."
          },
          "name": "ORIGIN_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The origin-response specifies the response from the origin location (e.g. S3)."
          },
          "name": "ORIGIN_RESPONSE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-request specifies the incoming request."
          },
          "name": "VIEWER_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The viewer-response specifies the outgoing response."
          },
          "name": "VIEWER_RESPONSE"
        }
      ],
      "name": "LambdaEdgeEventType"
    },
    "@aws-cdk/aws-cloudfront.LambdaFunctionAssociation": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-cloudfront.LambdaFunctionAssociation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 465
      },
      "name": "LambdaFunctionAssociation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The lambda event type defines at which event the lambda is called during the request lifecycle."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 471
          },
          "name": "eventType",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.LambdaEdgeEventType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A version of the lambda to associate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 476
          },
          "name": "lambdaFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only valid for \"request\" event types (`ORIGIN_REQUEST` or `VIEWER_REQUEST`).\nSee https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html",
            "stability": "stable",
            "summary": "Allows a Lambda function to have read access to the body content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 485
          },
          "name": "includeBody",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.LoggingConfiguration": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Logging configuration for incoming requests."
      },
      "fqn": "@aws-cdk/aws-cloudfront.LoggingConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 95
      },
      "name": "LoggingConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A logging bucket is automatically created.",
            "stability": "stable",
            "summary": "Bucket to log requests to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 101
          },
          "name": "bucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to include the cookies in the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 108
          },
          "name": "includeCookies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No prefix.",
            "stability": "stable",
            "summary": "Where in the bucket to store logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 115
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginAccessIdentity": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
        },
        "stability": "stable",
        "summary": "An origin access identity is a special CloudFront user that you can associate with Amazon S3 origins, so that you can secure all or just some of your Amazon S3 content."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentity",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin-access-identity.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-access-identity.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a OriginAccessIdentity by providing the OriginAccessIdentityName."
          },
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 65
          },
          "name": "fromOriginAccessIdentityName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "originAccessIdentityName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN to include in S3 bucket policy to allow CloudFront access."
          },
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 41
          },
          "name": "arn",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "OriginAccessIdentity",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 88
          },
          "name": "cloudFrontOriginAccessIdentityS3CanonicalUserId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Derived principal value for bucket access."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 93
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Origin Access Identity Name (physical id)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 100
          },
          "name": "originAccessIdentityName",
          "overrides": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginAccessIdentityProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of CloudFront OriginAccessIdentity."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginAccessIdentityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-access-identity.ts",
        "line": 9
      },
      "name": "OriginAccessIdentityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"Allows CloudFront to reach the bucket\"",
            "stability": "stable",
            "summary": "Any comments you want to include about the origin access identity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-access-identity.ts",
            "line": 15
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Represents a distribution origin, that describes the Amazon S3 bucket, HTTP server (for example, a web server), Amazon MediaStore, or other server from which CloudFront gets your files."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin.ts",
          "line": 120
        },
        "parameters": [
          {
            "name": "domainName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginProps"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOrigin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 112
      },
      "methods": [
        {
          "docs": {
            "remarks": "Can be used to grant permissions, create dependent resources, etc.",
            "stability": "stable",
            "summary": "Binds the origin to the associated Distribution."
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 136
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cloudfront.IOrigin",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 165
          },
          "name": "renderCustomOriginConfig",
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 160
          },
          "name": "renderS3OriginConfig",
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.S3OriginConfigProperty"
            }
          }
        }
      ],
      "name": "OriginBase"
    },
    "@aws-cdk/aws-cloudfront.OriginBindConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The struct returned from {@link IOrigin.bind}."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 25
      },
      "name": "OriginBindConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- nothing is returned",
            "stability": "stable",
            "summary": "The failover configuration for this Origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 38
          },
          "name": "failoverConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginFailoverConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- nothing is returned",
            "stability": "stable",
            "summary": "The CloudFormation OriginProperty configuration for this Origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 31
          },
          "name": "originProperty",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.OriginProperty"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginBindOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options passed to Origin.bind()."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 100
      },
      "name": "OriginBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The identifier of this Origin, as assigned by the Distribution this Origin has been used added to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 105
          },
          "name": "originId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginFailoverConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The failover configuration used for Origin Groups, returned in {@link OriginBindConfig.failoverConfig}."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginFailoverConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 12
      },
      "name": "OriginFailoverConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The origin to use as the fallback origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 14
          },
          "name": "failoverOrigin",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 500, 502, 503 and 504",
            "stability": "stable",
            "summary": "The HTTP status codes of the response that trigger querying the failover Origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 21
          },
          "name": "statusCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to define an Origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin.ts",
        "line": 56
      },
      "name": "OriginProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "valid values are 1, 2, or 3 attempts.",
            "stability": "stable",
            "summary": "The number of times that CloudFront attempts to connect to the origin;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 78
          },
          "name": "connectionAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(10)",
            "remarks": "Valid values are 1-10 seconds, inclusive.",
            "stability": "stable",
            "summary": "The number of seconds that CloudFront waits when trying to establish a connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 71
          },
          "name": "connectionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "stable",
            "summary": "A list of HTTP header names and values that CloudFront adds to requests it sends to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 85
          },
          "name": "customHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'/'",
            "remarks": "Must begin, but not end, with '/' (e.g., '/production/images').",
            "stability": "stable",
            "summary": "An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 63
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin.ts",
            "line": 94
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginProtocolPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Defines what protocols CloudFront will use to connect to an origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginProtocolPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 500
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Connect on HTTP only."
          },
          "name": "HTTP_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Connect with the same protocol as the viewer."
          },
          "name": "MATCH_VIEWER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Connect on HTTPS only."
          },
          "name": "HTTPS_ONLY"
        }
      ],
      "name": "OriginProtocolPolicy"
    },
    "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any cookies in viewer requests (and if so, which cookies) are included in requests that CloudFront sends to the origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 127
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All cookies in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 135
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `cookies` are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 138
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "cookies",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Any cookies that are listed in a CachePolicy are still included in origin requests.",
            "stability": "stable",
            "summary": "Cookies in viewer requests are not included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 132
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestCookieBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of cookies: allow all, none or an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 146
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The cookies to allow, if the behavior is an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 148
          },
          "name": "cookies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any HTTP headers (and if so, which headers) are included in requests that CloudFront sends to the origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 159
      },
      "methods": [
        {
          "docs": {
            "remarks": "Additionally, any additional CloudFront headers provided are included; the additional headers are added by CloudFront.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-cloudfront-headers.html",
            "stability": "stable",
            "summary": "All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 171
          },
          "name": "all",
          "parameters": [
            {
              "name": "cloudfrontHeaders",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Listed headers are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 183
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "headers",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Any headers that are listed in a CachePolicy are still included in origin requests.",
            "stability": "stable",
            "summary": "HTTP headers are not included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 164
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestHeaderBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of headers: allow all, none or an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 194
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The headers for the allow list or the included CloudFront headers, if applicable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 196
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginRequestPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::OriginRequestPolicy"
        },
        "stability": "stable",
        "summary": "A Origin Request Policy configuration."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin-request-policy.ts",
          "line": 86
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 57
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Origin Request Policy from its id."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 71
          },
          "name": "fromOriginRequestPolicyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "originRequestPolicyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy includes all values (query strings, headers, and cookies) in the viewer request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 66
          },
          "name": "ALL_VIEWER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy includes the header that enables cross-origin resource sharing (CORS) requests when the origin is a custom origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 62
          },
          "name": "CORS_CUSTOM_ORIGIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy includes the headers that enable cross-origin resource sharing (CORS) requests when the origin is an Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 64
          },
          "name": "CORS_S3_ORIGIN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "This policy is designed for use with an origin that is an AWS Elemental MediaTailor endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 68
          },
          "name": "ELEMENTAL_MEDIA_TAILOR",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "It doesn’t include any query strings or cookies.",
            "stability": "stable",
            "summary": "This policy includes only the User-Agent and Referer headers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 60
          },
          "name": "USER_AGENT_REFERER_HEADERS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 84
          },
          "name": "originRequestPolicyId",
          "overrides": "@aws-cdk/aws-cloudfront.IOriginRequestPolicy",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginRequestPolicyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Origin Request Policy."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 19
      },
      "name": "OriginRequestPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 31
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginRequestCookieBehavior.none()",
            "stability": "stable",
            "summary": "The cookies from viewer requests to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 37
          },
          "name": "cookieBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginRequestCookieBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginRequestHeaderBehavior.none()",
            "remarks": "These can include headers from viewer requests and additional headers added by CloudFront.",
            "stability": "stable",
            "summary": "The HTTP headers to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 43
          },
          "name": "headerBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginRequestHeaderBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "remarks": "The name must only include '-', '_', or alphanumeric characters.",
            "stability": "stable",
            "summary": "A unique name to identify the origin request policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 25
          },
          "name": "originRequestPolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginRequestQueryStringBehavior.none()",
            "stability": "stable",
            "summary": "The URL query strings from viewer requests to include in origin requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 49
          },
          "name": "queryStringBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether any URL query strings in viewer requests (and if so, which query strings) are included in requests that CloudFront sends to the origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-request-policy.ts",
        "line": 208
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All query strings in viewer requests are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 216
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only the provided `queryStrings` are included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 219
          },
          "name": "allowList",
          "parameters": [
            {
              "name": "queryStrings",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Any query strings that are listed in a CachePolicy are still included in origin requests.",
            "stability": "stable",
            "summary": "Query strings in viewer requests are not included in requests that CloudFront sends to the origin."
          },
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 213
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginRequestQueryStringBehavior"
            }
          },
          "static": true
        }
      ],
      "name": "OriginRequestQueryStringBehavior",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The behavior of query strings -- allow all, none, or only an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 227
          },
          "name": "behavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The query strings to allow, if the behavior is an allow list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-request-policy.ts",
            "line": 229
          },
          "name": "queryStrings",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.OriginSslPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-cloudfront.OriginSslPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 290
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSL_V3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2"
        }
      ],
      "name": "OriginSslPolicy"
    },
    "@aws-cdk/aws-cloudfront.PriceClass": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "See https://aws.amazon.com/cloudfront/pricing/ for full list of supported regions.",
        "stability": "stable",
        "summary": "The price class determines how many edge locations CloudFront will use for your distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.PriceClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 476
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "USA, Canada, Europe, & Israel."
          },
          "name": "PRICE_CLASS_100"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PRICE_CLASS_100 + South Africa, Kenya, Middle East, Japan, Singapore, South Korea, Taiwan, Hong Kong, & Philippines."
          },
          "name": "PRICE_CLASS_200"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "All locations."
          },
          "name": "PRICE_CLASS_ALL"
        }
      ],
      "name": "PriceClass"
    },
    "@aws-cdk/aws-cloudfront.PublicKey": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CloudFront::PublicKey"
        },
        "stability": "stable",
        "summary": "A Public Key Configuration."
      },
      "fqn": "@aws-cdk/aws-cloudfront.PublicKey",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/public-key.ts",
          "line": 57
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.PublicKeyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IPublicKey"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/public-key.ts",
        "line": 46
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a Public Key from its id."
          },
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 49
          },
          "name": "fromPublicKeyId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "publicKeyId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.IPublicKey"
            }
          },
          "static": true
        }
      ],
      "name": "PublicKey",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ID of the key group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 55
          },
          "name": "publicKeyId",
          "overrides": "@aws-cdk/aws-cloudfront.IPublicKey",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.PublicKeyProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Public Key."
      },
      "fqn": "@aws-cdk/aws-cloudfront.PublicKeyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/public-key.ts",
        "line": 19
      },
      "name": "PublicKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The `encodedKey` parameter must include `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----` lines.",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html",
            "stability": "stable",
            "summary": "The public key that you can use with signed URLs and signed cookies, or with field-level encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 38
          },
          "name": "encodedKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no comment",
            "stability": "stable",
            "summary": "A comment to describe the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 30
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated from the `id`",
            "stability": "stable",
            "summary": "A name to identify the public key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/public-key.ts",
            "line": 24
          },
          "name": "publicKeyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.S3OriginConfig": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "S3 origin configuration for CloudFront."
      },
      "fqn": "@aws-cdk/aws-cloudfront.S3OriginConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 300
      },
      "name": "S3OriginConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The source bucket to serve content from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 304
          },
          "name": "s3BucketSource",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No Origin Access Identity which requires the S3 bucket to be public accessible",
            "stability": "stable",
            "summary": "The optional Origin Access Identity of the origin identity cloudfront will use when calling your s3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 311
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional headers are passed.",
            "stability": "stable",
            "summary": "Any additional headers to pass to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 325
          },
          "name": "originHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "stability": "stable",
            "summary": "The relative path to the origin root to use for sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 318
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 332
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.SSLMethod": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "Server Name Indication (SNI) - is an extension to the TLS computer networking protocol by which a client indicates\n  which hostname it is attempting to connect to at the start of the handshaking process. This allows a server to present\n  multiple certificates on the same IP address and TCP port number and hence allows multiple secure (HTTPS) websites\n(or any other service over TLS) to be served by the same IP address without requiring all those sites to use the same certificate.\n\nCloudFront can use SNI to host multiple distributions on the same IP - which a large majority of clients will support.\n\nIf your clients cannot support SNI however - CloudFront can use dedicated IPs for your distribution - but there is a prorated monthly charge for\nusing this feature. By default, we use SNI - but you can optionally enable dedicated IPs (VIP).\n\nSee the CloudFront SSL for more details about pricing : https://aws.amazon.com/cloudfront/custom-ssl-domains/",
        "stability": "stable",
        "summary": "The SSL method CloudFront will use for your distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.SSLMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 525
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SNI"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "VIP"
        }
      ],
      "name": "SSLMethod"
    },
    "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "remarks": "CloudFront serves your objects only to browsers or devices that support at least the SSL version that you specify.",
        "stability": "stable",
        "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
      },
      "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 534
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SSL_V3"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2016"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_1_2016"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2_2018"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2_2019"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TLS_V1_2_2021"
        }
      ],
      "name": "SecurityPolicyProtocol"
    },
    "@aws-cdk/aws-cloudfront.SourceConfiguration": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "remarks": "An origin is what CloudFront will \"be in front of\" - that is, CloudFront will pull it's assets from an origin.\n\nIf you're using s3 as a source - pass the `s3Origin` property, otherwise, pass the `customOriginSource` property.\n\nOne or the other must be passed, and it is invalid to pass both in the same SourceConfiguration.",
        "stability": "stable",
        "summary": "A source configuration is a wrapper for CloudFront origins and behaviors."
      },
      "fqn": "@aws-cdk/aws-cloudfront.SourceConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 137
      },
      "name": "SourceConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "At least one (default) behavior must be included.",
            "stability": "stable",
            "summary": "The behaviors associated with this source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 189
          },
          "name": "behaviors",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.Behavior"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "You can specify 1, 2, or 3 as the number of attempts.",
            "stability": "stable",
            "summary": "The number of times that CloudFront attempts to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 144
          },
          "name": "connectionAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.Duration.seconds(10)",
            "remarks": "You can specify a number of seconds between 1 and 10 (inclusive).",
            "stability": "stable",
            "summary": "The number of seconds that CloudFront waits when trying to establish a connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 152
          },
          "name": "connectionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A custom origin source - for all non-s3 sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 162
          },
          "name": "customOriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CustomOriginConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[500, 502, 503, 504]",
            "stability": "stable",
            "summary": "HTTP status code to failover to second origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 183
          },
          "name": "failoverCriteriaStatusCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.FailoverStatusCode"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no failover configuration",
            "stability": "stable",
            "summary": "A custom origin source for failover in case the s3OriginSource returns invalid status code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 176
          },
          "name": "failoverCustomOriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CustomOriginConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no failover configuration",
            "stability": "stable",
            "summary": "An s3 origin source for failover in case the s3OriginSource returns invalid status code."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 169
          },
          "name": "failoverS3OriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.S3OriginConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional headers are passed.",
            "deprecated": "Use originHeaders on s3OriginSource or customOriginSource",
            "stability": "deprecated",
            "summary": "Any additional headers to pass to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 205
          },
          "name": "originHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "/",
            "deprecated": "Use originPath on s3OriginSource or customOriginSource",
            "stability": "deprecated",
            "summary": "The relative path to the origin root to use for sources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 197
          },
          "name": "originPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- origin shield not enabled",
            "see": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html",
            "stability": "stable",
            "summary": "When you enable Origin Shield in the AWS Region that has the lowest latency to your origin, you can get better network performance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 214
          },
          "name": "originShieldRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "An s3 origin source - if you're using s3 for your assets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 157
          },
          "name": "s3OriginSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.S3OriginConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.ViewerCertificate": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "Viewer certificate configuration class."
      },
      "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 518
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate an AWS Certificate Manager (ACM) viewer certificate configuration."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 526
          },
          "name": "fromAcmCertificate",
          "parameters": [
            {
              "docs": {
                "remarks": "Your certificate must be located in the us-east-1 (US East (N. Virginia)) region to be accessed by CloudFront",
                "summary": "AWS Certificate Manager (ACM) certificate."
              },
              "name": "certificate",
              "type": {
                "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
              }
            },
            {
              "docs": {
                "summary": "certificate configuration options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate a viewer certifcate configuration using the CloudFront default certificate (e.g. d111111abcdef8.cloudfront.net) and a {@link SecurityPolicyProtocol.TLS_V1} security policy."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 564
          },
          "name": "fromCloudFrontDefaultCertificate",
          "parameters": [
            {
              "docs": {
                "summary": "Alternative CNAME aliases You also must create a CNAME record with your DNS service to route queries."
              },
              "name": "aliases",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generate an IAM viewer certificate configuration."
          },
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 544
          },
          "name": "fromIamCertificate",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier of the IAM certificate."
              },
              "name": "iamCertificateId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "certificate configuration options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificate"
            }
          },
          "static": true
        }
      ],
      "name": "ViewerCertificate",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 570
          },
          "name": "aliases",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 569
          },
          "name": "props",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.ViewerCertificateProperty"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.ViewerCertificateOptions": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-cloudfront.ViewerCertificateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/web-distribution.ts",
        "line": 488
      },
      "name": "ViewerCertificateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Domain names on the certificate (both main domain name and Subject Alternative names)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 512
          },
          "name": "aliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- SSLv3 if sslMethod VIP, TLSv1 if sslMethod SNI",
            "remarks": "CloudFront serves your objects only to browsers or devices that support at\nleast the SSL version that you specify.",
            "stability": "stable",
            "summary": "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 507
          },
          "name": "securityPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SecurityPolicyProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SSLMethod.SNI",
            "remarks": "See the notes on SSLMethod if you wish to use other SSL termination types.",
            "see": "https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html",
            "stability": "stable",
            "summary": "How CloudFront should serve HTTPS requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/web-distribution.ts",
            "line": 497
          },
          "name": "sslMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.SSLMethod"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "docs": {
        "stability": "stable",
        "summary": "How HTTPs should be handled with your distribution."
      },
      "fqn": "@aws-cdk/aws-cloudfront.ViewerProtocolPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/distribution.ts",
        "line": 488
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS only."
          },
          "name": "HTTPS_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Will redirect HTTP requests to HTTPS."
          },
          "name": "REDIRECT_TO_HTTPS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Both HTTP and HTTPS supported."
          },
          "name": "ALLOW_ALL"
        }
      ],
      "name": "ViewerProtocolPolicy"
    },
    "@aws-cdk/aws-cloudfront.experimental.EdgeFunction": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::Lambda::Function"
        },
        "remarks": "Convenience resource for requesting a Lambda function in the 'us-east-1' region for use with Lambda@Edge.\nImplements several restrictions enforced by Lambda@Edge.\n\nNote that this construct requires that the 'us-east-1' region has been bootstrapped.\nSee https://docs.aws.amazon.com/cdk/latest/guide/bootstrapping.html or 'cdk bootstrap --help' for options.",
        "stability": "stable",
        "summary": "A Lambda@Edge function."
      },
      "fqn": "@aws-cdk/aws-cloudfront.experimental.EdgeFunction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/experimental/edge-function.ts",
          "line": 52
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.experimental.EdgeFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-lambda.IVersion"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/experimental/edge-function.ts",
        "line": 37
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an alias for this version."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 84
          },
          "name": "addAlias",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "parameters": [
            {
              "name": "aliasName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-lambda.AliasOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.Alias"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an event source to this function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 130
          },
          "name": "addEventSource",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "source",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IEventSource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an event source that maps to this AWS Lambda function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 102
          },
          "name": "addEventSourceMapping",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventSourceMappingOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-lambda.EventSourceMapping"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a permission to the Lambda resource policy."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 105
          },
          "name": "addPermission",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Permission"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by the instance."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 108
          },
          "name": "addToRolePolicy",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures options for asynchronous invocation."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 133
          },
          "name": "configureAsyncInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.EventInvokeConfigOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to invoke this Lambda."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 111
          },
          "name": "grantInvoke",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "Return the given named metric for this Lambda Return the given named metric for this Function.",
            "stability": "stable",
            "summary": "Return the given named metric for this Lambda Return the given named metric for this Function."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 114
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Average over 5 minutes\nMetric for the Duration of this Lambda How long execution of this Lambda takes.\n\nAverage over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the Duration of this Lambda How long execution of this Lambda takes."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 117
          },
          "name": "metricDuration",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes",
            "stability": "stable",
            "summary": "How many invocations of this Lambda fail."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 120
          },
          "name": "metricErrors",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes\nMetric for the number of invocations of this Lambda How often this Lambda is invoked.\n\nSum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of invocations of this Lambda How often this Lambda is invoked."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 123
          },
          "name": "metricInvocations",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "Sum over 5 minutes\nMetric for the number of throttled invocations of this Lambda How often this Lambda is throttled.\n\nSum over 5 minutes",
            "stability": "stable",
            "summary": "Metric for the number of throttled invocations of this Lambda How often this Lambda is throttled."
          },
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 126
          },
          "name": "metricThrottles",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "EdgeFunction",
      "namespace": "experimental",
      "properties": [
        {
          "docs": {
            "remarks": "Connections are only applicable to VPC-enabled functions.",
            "stability": "stable",
            "summary": "Not supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 95
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Convenience method to make `EdgeFunction` conform to the same interface as `Function`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 80
          },
          "name": "currentVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the version for Lambda@Edge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 41
          },
          "name": "edgeArn",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 43
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 42
          },
          "name": "functionName",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 44
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "remarks": "If this is is `false`, trying to access the `connections` object will fail.",
            "stability": "stable",
            "summary": "Whether or not this Lambda function was bound to a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 45
          },
          "name": "isBoundToVpc",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The underlying AWS Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 73
          },
          "name": "lambda",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "docs": {
            "remarks": "Note that this is reference to a non-specific AWS Lambda version, which\nmeans the function this version refers to can return different results in\ndifferent invocations.\n\nTo obtain a reference to an explicit version which references the current\nfunction configuration, use `lambdaFunction.currentVersion` instead.",
            "stability": "stable",
            "summary": "The `$LATEST` version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 98
          },
          "name": "latestVersion",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IVersion"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The construct node where permissions are attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 46
          },
          "name": "permissionsNode",
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/core.ConstructNode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The most recently deployed version of this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 48
          },
          "name": "version",
          "overrides": "@aws-cdk/aws-lambda.IVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role associated with this function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 47
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-lambda.IFunction",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudfront.experimental.EdgeFunctionProps": {
      "assembly": "@aws-cdk/aws-cloudfront",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a Lambda@Edge function."
      },
      "fqn": "@aws-cdk/aws-cloudfront.experimental.EdgeFunctionProps",
      "interfaces": [
        "@aws-cdk/aws-lambda.FunctionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/experimental/edge-function.ts",
        "line": 17
      },
      "name": "EdgeFunctionProps",
      "namespace": "experimental",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- `edge-lambda-stack-${region}`",
            "stability": "stable",
            "summary": "The stack ID of Lambda@Edge function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/experimental/edge-function.ts",
            "line": 23
          },
          "name": "stackId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    }
  },
  "version": "1.126.0",
  "fingerprint": "2bZwL/vnsvp06wZUFDGrwFXWT+ImNp5vBW1gJyE9AY0="
}
