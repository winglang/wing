{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": "1.126.0",
    "@aws-cdk/aws-iam": "1.126.0",
    "@aws-cdk/aws-lambda": "1.126.0",
    "@aws-cdk/aws-route53": "1.126.0",
    "@aws-cdk/core": "1.126.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::CertificateManager",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.35.0 (build 6ebef96)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "certificatemanager"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-certificatemanager",
  "readme": {
    "markdown": "# AWS Certificate Manager Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\nAWS Certificate Manager (ACM) handles the complexity of creating, storing, and renewing public and private SSL/TLS X.509 certificates and keys that\nprotect your AWS websites and applications. ACM certificates can secure singular domain names, multiple specific domain names, wildcard domains, or\ncombinations of these. ACM wildcard certificates can protect an unlimited number of subdomains.\n\nThis package provides Constructs for provisioning and referencing ACM certificates which can be used with CloudFront and ELB.\n\nAfter requesting a certificate, you will need to prove that you own the\ndomain in question before the certificate will be granted. The CloudFormation\ndeployment will wait until this verification process has been completed.\n\nBecause of this wait time, when using manual validation methods, it's better\nto provision your certificates either in a separate stack from your main\nservice, or provision them manually and import them into your CDK application.\n\n**Note:** There is a limit on total number of ACM certificates that can be requested on an account and region within a year.\nThe default limit is 2000, but this limit may be (much) lower on new AWS accounts.\nSee https://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html for more information.\n\n## DNS validation\n\nDNS validation is the preferred method to validate domain ownership, as it has a number of advantages over email validation.\nSee also [Validate with DNS](https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html)\nin the AWS Certificate Manager User Guide.\n\nIf Amazon Route 53 is your DNS provider for the requested domain, the DNS record can be\ncreated automatically:\n\n```ts\nimport * as acm from '@aws-cdk/aws-certificatemanager';\nimport * as route53 from '@aws-cdk/aws-route53';\n\nconst myHostedZone = new route53.HostedZone(this, 'HostedZone', {\n  zoneName: 'example.com',\n});\nnew acm.Certificate(this, 'Certificate', {\n  domainName: 'hello.example.com',\n  validation: acm.CertificateValidation.fromDns(myHostedZone),\n});\n```\n\nIf Route 53 is not your DNS provider, the DNS records must be added manually and the stack will not complete\ncreating until the records are added.\n\n```ts\nnew acm.Certificate(this, 'Certificate', {\n  domainName: 'hello.example.com',\n  validation: acm.CertificateValidation.fromDns(), // Records must be added manually\n});\n```\n\nWhen working with multiple domains, use the `CertificateValidation.fromDnsMultiZone()`:\n\n```ts\nconst exampleCom = new route53.HostedZone(this, 'ExampleCom', {\n  zoneName: 'example.com',\n});\nconst exampleNet = new route53.HostedZone(this, 'ExampleNet', {\n  zoneName: 'example.net',\n});\n\nconst cert = new acm.Certificate(this, 'Certificate', {\n  domainName: 'test.example.com',\n  subjectAlternativeNames: ['cool.example.com', 'test.example.net'],\n  validation: acm.CertificateValidation.fromDnsMultiZone({\n    'test.example.com': exampleCom,\n    'cool.example.com': exampleCom,\n    'test.example.net': exampleNet,\n  }),\n});\n```\n\n## Email validation\n\nEmail-validated certificates (the default) are validated by receiving an\nemail on one of a number of predefined domains and following the instructions\nin the email.\n\nSee [Validate with Email](https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html)\nin the AWS Certificate Manager User Guide.\n\n```ts\nnew acm.Certificate(this, 'Certificate', {\n  domainName: 'hello.example.com',\n  validation: acm.CertificateValidation.fromEmail(), // Optional, this is the default\n});\n```\n\n## Cross-region Certificates\n\nACM certificates that are used with CloudFront -- or higher-level constructs which rely on CloudFront -- must be in the `us-east-1` region.\nThe `DnsValidatedCertificate` construct exists to facilitate creating these certificates cross-region. This resource can only be used with\nRoute53-based DNS validation.\n\n```ts\nnew acm.DnsValidatedCertificate(this, 'CrossRegionCertificate', {\n  domainName: 'hello.example.com',\n  hostedZone: myHostedZone,\n  region: 'us-east-1',\n});\n```\n\n## Importing\n\nIf you want to import an existing certificate, you can do so from its ARN:\n\n```ts\nconst arn = 'arn:aws:...';\nconst certificate = Certificate.fromCertificateArn(this, 'Certificate', arn);\n```\n\n## Sharing between Stacks\n\nTo share the certificate between stacks in the same CDK application, simply\npass the `Certificate` object between the stacks.\n\n## Metrics\n\nThe `DaysToExpiry` metric is available via the `metricDaysToExpiry` method for\nall certificates. This metric is emitted by AWS Certificates Manager once per\nday until the certificate has effectively expired.\n\nAn alarm can be created to determine whether a certificate is soon due for\nrenewal ussing the following code:\n\n```ts\nconst certificate = new Certificate(this, 'Certificate', { /* ... */ });\ncertificate.metricDaysToExpiry().createAlarm({\n  comparisonOperator: cloudwatch.ComparisonOperator.LESS_THAN_THRESHOLD,\n  evaluationPeriods: 1,\n  threshold: 45, // Automatic rotation happens between 60 and 45 days before expiry\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-certificatemanager",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CertificateManager",
      "packageId": "Amazon.CDK.AWS.CertificateManager"
    },
    "java": {
      "maven": {
        "artifactId": "certificatemanager",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.certificatemanager"
    },
    "js": {
      "npm": "@aws-cdk/aws-certificatemanager"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-certificatemanager",
      "module": "aws_cdk.aws_certificatemanager"
    }
  },
  "types": {
    "@aws-cdk/aws-certificatemanager.Certificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A certificate managed by AWS Certificate Manager."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.Certificate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/certificate.ts",
          "line": 201
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-certificatemanager.ICertificate"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 184
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a certificate."
          },
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 188
          },
          "name": "fromCertificateArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "certificateArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This metric is no longer emitted once the certificate has effectively\nexpired, so alarms configured on this metric should probably treat missing\ndata as \"breaching\".",
            "stability": "stable",
            "summary": "Return the DaysToExpiry metric for this AWS Certificate Manager Certificate. By default, this is the minimum value over 1 day."
          },
          "locationInModule": {
            "filename": "lib/certificate-base.ts",
            "line": 21
          },
          "name": "metricDaysToExpiry",
          "overrides": "@aws-cdk/aws-certificatemanager.ICertificate",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "Certificate",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The certificate's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 199
          },
          "name": "certificateArn",
          "overrides": "@aws-cdk/aws-certificatemanager.ICertificate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If the certificate is provisionned in a different region than the containing stack, this should be the region in which the certificate lives so we can correctly create `Metric` instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate-base.ts",
            "line": 19
          },
          "name": "region",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CertificateProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for your certificate."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 34
      },
      "name": "CertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "May contain wildcards, such as ``*.domain.com``.",
            "stability": "stable",
            "summary": "Fully-qualified domain name to request a certificate for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 40
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional FQDNs will be included as alternative domain names.",
            "remarks": "Use this to register alternative domain names that represent the same site.",
            "stability": "stable",
            "summary": "Alternative domain names on your certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 49
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CertificateValidation.fromEmail()",
            "stability": "stable",
            "summary": "How to validate this certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 74
          },
          "name": "validation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.CertificateValidation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Apex domain is used for every domain that's not overridden.",
            "deprecated": "use `validation` instead.",
            "remarks": "Has to be a superdomain of the requested domain.",
            "stability": "deprecated",
            "summary": "What validation domain to use for every requested domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 59
          },
          "name": "validationDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ValidationMethod.EMAIL",
            "deprecated": "use `validation` instead.",
            "stability": "deprecated",
            "summary": "Validation method used to assert domain ownership."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 67
          },
          "name": "validationMethod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ValidationMethod"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CertificateValidation": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "docs": {
        "stability": "stable",
        "summary": "How to validate a certificate."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CertificateValidation",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 113
      },
      "methods": [
        {
          "docs": {
            "remarks": "IMPORTANT: If `hostedZone` is not specified, DNS records must be added\nmanually and the stack will not complete creating until the records are\nadded.",
            "stability": "stable",
            "summary": "Validate the certificate with DNS."
          },
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 123
          },
          "name": "fromDns",
          "parameters": [
            {
              "docs": {
                "summary": "the hosted zone where DNS records must be created."
              },
              "name": "hostedZone",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-route53.IHostedZone"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CertificateValidation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validate the certificate with automatically created DNS records in multiple Amazon Route 53 hosted zones."
          },
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 137
          },
          "name": "fromDnsMultiZone",
          "parameters": [
            {
              "docs": {
                "summary": "a map of hosted zones where DNS records must be created for the domains in the certificate."
              },
              "name": "hostedZones",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-route53.IHostedZone"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CertificateValidation"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "IMPORTANT: if you are creating a certificate as part of your stack, the stack\nwill not complete creating until you read and follow the instructions in the\nemail that you will receive.\n\nACM will send validation emails to the following addresses:\n\n  admin@domain.com\n  administrator@domain.com\n  hostmaster@domain.com\n  postmaster@domain.com\n  webmaster@domain.com\n\nFor every domain that you register.",
            "stability": "stable",
            "summary": "Validate the certificate with Email."
          },
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 163
          },
          "name": "fromEmail",
          "parameters": [
            {
              "docs": {
                "summary": "a map of validation domains to use for domains in the certificate."
              },
              "name": "validationDomains",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CertificateValidation"
            }
          },
          "static": true
        }
      ],
      "name": "CertificateValidation",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The validation method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 173
          },
          "name": "method",
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ValidationMethod"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Certification validation properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 176
          },
          "name": "props",
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.CertificationValidationProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CertificationValidationProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for certificate validation."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CertificationValidationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 80
      },
      "name": "CertificationValidationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use email validation",
            "stability": "stable",
            "summary": "Hosted zone to use for DNS validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 93
          },
          "name": "hostedZone",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-route53.IHostedZone"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use `hostedZone`",
            "stability": "stable",
            "summary": "A map of hosted zones to use for DNS validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 100
          },
          "name": "hostedZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53.IHostedZone"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ValidationMethod.EMAIL",
            "stability": "stable",
            "summary": "Validation method."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 86
          },
          "name": "method",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ValidationMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Apex domain",
            "stability": "stable",
            "summary": "Validation domains to use for email validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 107
          },
          "name": "validationDomains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnAccount": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CertificateManager::Account",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CertificateManager::Account`."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnAccount",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CertificateManager::Account`."
        },
        "locationInModule": {
          "filename": "lib/certificatemanager.generated.ts",
          "line": 122
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CfnAccountProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 79
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 136
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 147
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAccount",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 83
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AccountId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 107
          },
          "name": "attrAccountId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 141
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html#cfn-certificatemanager-account-expiryeventsconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Account.ExpiryEventsConfiguration`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 113
          },
          "name": "expiryEventsConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-account-expiryeventsconfiguration.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 157
      },
      "name": "ExpiryEventsConfigurationProperty",
      "namespace": "CfnAccount",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-account-expiryeventsconfiguration.html#cfn-certificatemanager-account-expiryeventsconfiguration-daysbeforeexpiry"
            },
            "stability": "external",
            "summary": "`CfnAccount.ExpiryEventsConfigurationProperty.DaysBeforeExpiry`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 162
          },
          "name": "daysBeforeExpiry",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnAccountProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CertificateManager::Account`."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnAccountProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 17
      },
      "name": "CfnAccountProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html#cfn-certificatemanager-account-expiryeventsconfiguration"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Account.ExpiryEventsConfiguration`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 23
          },
          "name": "expiryEventsConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-certificatemanager.CfnAccount.ExpiryEventsConfigurationProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnCertificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CertificateManager::Certificate",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::CertificateManager::Certificate`."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CertificateManager::Certificate`."
        },
        "locationInModule": {
          "filename": "lib/certificatemanager.generated.ts",
          "line": 410
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 336
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 429
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 446
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCertificate",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 340
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 434
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 395
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.DomainName`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 365
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.CertificateAuthorityArn`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 371
          },
          "name": "certificateAuthorityArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificatetransparencyloggingpreference"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.CertificateTransparencyLoggingPreference`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 377
          },
          "name": "certificateTransparencyLoggingPreference",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainvalidationoptions"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.DomainValidationOptions`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 383
          },
          "name": "domainValidationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-subjectalternativenames"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.SubjectAlternativeNames`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 389
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-validationmethod"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.ValidationMethod`."
          },
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 401
          },
          "name": "validationMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 456
      },
      "name": "DomainValidationOptionProperty",
      "namespace": "CfnCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoptions-domainname"
            },
            "stability": "external",
            "summary": "`CfnCertificate.DomainValidationOptionProperty.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 461
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoption-hostedzoneid"
            },
            "stability": "external",
            "summary": "`CfnCertificate.DomainValidationOptionProperty.HostedZoneId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 466
          },
          "name": "hostedZoneId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html#cfn-certificatemanager-certificate-domainvalidationoption-validationdomain"
            },
            "stability": "external",
            "summary": "`CfnCertificate.DomainValidationOptionProperty.ValidationDomain`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 471
          },
          "name": "validationDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.CfnCertificateProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::CertificateManager::Certificate`."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificatemanager.generated.ts",
        "line": 220
      },
      "name": "CfnCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.DomainName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 226
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificateauthorityarn"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.CertificateAuthorityArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 232
          },
          "name": "certificateAuthorityArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificatetransparencyloggingpreference"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.CertificateTransparencyLoggingPreference`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 238
          },
          "name": "certificateTransparencyLoggingPreference",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainvalidationoptions"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.DomainValidationOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 244
          },
          "name": "domainValidationOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-certificatemanager.CfnCertificate.DomainValidationOptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-subjectalternativenames"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.SubjectAlternativeNames`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 250
          },
          "name": "subjectAlternativeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 256
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-validationmethod"
            },
            "stability": "external",
            "summary": "`AWS::CertificateManager::Certificate.ValidationMethod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificatemanager.generated.ts",
            "line": 262
          },
          "name": "validationMethod",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.DnsValidatedCertificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CertificateManager::Certificate"
        },
        "remarks": "Will be automatically\nvalidated using DNS validation against the specified Route 53 hosted zone.",
        "stability": "stable",
        "summary": "A certificate managed by AWS Certificate Manager."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.DnsValidatedCertificate",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/dns-validated-certificate.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-certificatemanager.ICertificate",
        "@aws-cdk/core.ITaggable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dns-validated-certificate.ts",
        "line": 58
      },
      "methods": [
        {
          "docs": {
            "remarks": "This metric is no longer emitted once the certificate has effectively\nexpired, so alarms configured on this metric should probably treat missing\ndata as \"breaching\".",
            "stability": "stable",
            "summary": "Return the DaysToExpiry metric for this AWS Certificate Manager Certificate. By default, this is the minimum value over 1 day."
          },
          "locationInModule": {
            "filename": "lib/certificate-base.ts",
            "line": 21
          },
          "name": "metricDaysToExpiry",
          "overrides": "@aws-cdk/aws-certificatemanager.ICertificate",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 123
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "DnsValidatedCertificate",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The certificate's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 59
          },
          "name": "certificateArn",
          "overrides": "@aws-cdk/aws-certificatemanager.ICertificate",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags",
            "stability": "stable",
            "summary": "Resource Tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 66
          },
          "name": "tags",
          "overrides": "@aws-cdk/core.ITaggable",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If the certificate is provisionned in a different region than the containing stack, this should be the region in which the certificate lives so we can correctly create `Metric` instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 67
          },
          "name": "region",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to create a DNS validated certificate managed by AWS Certificate Manager."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.DnsValidatedCertificateProps",
      "interfaces": [
        "@aws-cdk/aws-certificatemanager.CertificateProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dns-validated-certificate.ts",
        "line": 14
      },
      "name": "DnsValidatedCertificateProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The zone\nmust be authoritative for the domain name specified in the Certificate Request.",
            "stability": "stable",
            "summary": "Route 53 Hosted Zone used to perform DNS validation of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 19
          },
          "name": "hostedZone",
          "type": {
            "fqn": "@aws-cdk/aws-route53.IHostedZone"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new role will be created",
            "stability": "stable",
            "summary": "Role to use for the custom resource that creates the validated certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 48
          },
          "name": "customResourceRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the region the stack is deployed in.",
            "remarks": "This is needed especially\nfor certificates used for CloudFront distributions, which require the region\nto be us-east-1.",
            "stability": "stable",
            "summary": "AWS region that will host the certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 27
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The AWS SDK will determine the Route53 endpoint to use based on region",
            "remarks": "Route53 is not been officially launched in China, it is only available for AWS\ninternal accounts now. To make DnsValidatedCertificate work for internal accounts\nnow, a special endpoint needs to be provided.",
            "stability": "stable",
            "summary": "An endpoint of Route53 service, which is not necessary as AWS SDK could figure out the right endpoints for most regions, but for some regions such as those in aws-cn partition, the default endpoint is not working now, hence the right endpoint need to be specified through this prop."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dns-validated-certificate.ts",
            "line": 41
          },
          "name": "route53Endpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.ICertificate": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "docs": {
        "stability": "stable",
        "summary": "Represents a certificate in AWS Certificate Manager."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.ICertificate",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 12
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This metric is no longer emitted once the certificate has effectively\nexpired, so alarms configured on this metric should probably treat missing\ndata as \"breaching\".",
            "stability": "stable",
            "summary": "Return the DaysToExpiry metric for this AWS Certificate Manager Certificate. By default, this is the minimum value over 1 day."
          },
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 28
          },
          "name": "metricDaysToExpiry",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "ICertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The certificate's ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/certificate.ts",
            "line": 18
          },
          "name": "certificateArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-certificatemanager.ValidationMethod": {
      "assembly": "@aws-cdk/aws-certificatemanager",
      "docs": {
        "stability": "stable",
        "summary": "Method used to assert ownership of the domain."
      },
      "fqn": "@aws-cdk/aws-certificatemanager.ValidationMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/certificate.ts",
        "line": 231
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html",
            "stability": "stable",
            "summary": "Send email to a number of email addresses associated with the domain."
          },
          "name": "EMAIL"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html",
            "stability": "stable",
            "summary": "Validate ownership by adding appropriate DNS records."
          },
          "name": "DNS"
        }
      ],
      "name": "ValidationMethod"
    }
  },
  "version": "1.126.0",
  "fingerprint": "TYmz1Z89oUvEVsf1pK7+GHKyAtrCa6WvCyfUixuDX9U="
}
